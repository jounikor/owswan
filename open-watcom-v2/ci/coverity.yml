parameters:
  arch:     ''
  title:    ''

jobs:
  - job: scan${{ parameters.arch }}
    displayName: "${{ parameters.title }}"
    timeoutInMinutes: 90
    variables:
      ${{ if eq(parameters.arch, 'lnx') }}:
        owtools:        $(owtools_lnx)
        owtoolsv:       $(owtoolsv_lnx)
        owscript:       $(owciroot_lnx)/coverity.sh
        owcoverity.tool.src: linux64
        owcoverity.tool.archive: /tmp/cov-analysis-linux.tgz
        owcoverity.tool.base: /tmp/coverity-scan-analysis
        owcoverity.script: $(owciroot_lnx)/covbuild.sh
        owcoverity.results.archive: open-watcom-v2.tgz
      ${{ if eq(parameters.arch, 'nt') }}:
        owtools:        $(owtools_nt)
        owtoolsv:       $(owtoolsv_nt)
        owscript:       $(owciroot_nt)\coverity.cmd
        owcoverity.tool.src: win64
        owcoverity.tool.archive: $(TEMP)\cov-analysis-windows.zip
        owcoverity.tool.base: $(TEMP)\coverity-scan-analysis
        owcoverity.script: $(owciroot_nt)\covbuild.cmd
        owcoverity.results.archive: open-watcom-v2.zip
      owcoverity.project:  open-watcom/open-watcom-v2
      owcoverity.tool.cmd: ''
    pool:
      ${{ if eq(parameters.arch, 'lnx') }}:
        vmImage: $(owimage_lnx)
      ${{ if eq(parameters.arch, 'nt') }}:
        vmImage: $(owimage_nt)
    steps:
      - template: dosbox.yml
        parameters:
          arch:     ${{ parameters.arch }}
      - script: |
          curl -s -o $(owcoverity.tool.archive) https://scan.coverity.com/download/cxx/$(owcoverity.tool.src) -d "project=$(owcoverity.project)&token=$(owcoverity.token)"
          mkdir $(owcoverity.tool.base)
        displayName: "Download Coverity Tools"
      - ${{ if eq(parameters.arch, 'lnx') }}:
        - script: |
            tar xzf $(owcoverity.tool.archive) -C $(owcoverity.tool.base)
            echo "##vso[task.setvariable variable=owcoverity.tool.cmd;]`find $(owcoverity.tool.base) -type f -name 'cov-build' -exec realpath {} \;`"
          displayName: "Restore Coverity Tools"
      - ${{ if eq(parameters.arch, 'nt') }}:
        - script: |
            7z x -aoa -o$(owcoverity.tool.base) $(owcoverity.tool.archive)
            pushd $(owcoverity.tool.base)
            for /f %%a in ('dir /b /s cov-build.exe') do echo ##vso[task.setvariable variable=owcoverity.tool.cmd;]%%a
            popd
          displayName: "Restore Coverity Tools"
      - script: $(owscript)
        displayName: "Build Coverity data"
      - bash: echo "##vso[task.setvariable variable=owsha;]`git rev-parse --short HEAD`"
        displayName: "Get commit SHA"
      - ${{ if eq(parameters.arch, 'lnx') }}:
        - script: tar czf $(owcoverity.results.archive) cov-int
          displayName: "Archive Coverity data"
      - ${{ if eq(parameters.arch, 'nt') }}:
        - script: |
            7z a $(owcoverity.results.archive) cov-int
            ci\slash.cmd $(owcoverity.results.archive) > lst.txt
            7z rn $(owcoverity.results.archive) @lst.txt
            del lst.txt
          displayName: "Archive Coverity data"
      - script: >
          response=$(curl -s
          --write-out "\n%{http_code}\n"
          --form project=$(owcoverity.project)
          --form token=$(owcoverity.token)
          --form email=malak.jiri@gmail.com
          --form file=@$(owcoverity.results.archive)
          --form version=$(owsha)
          --form description="Open Watcom V2 Azure Pipelines CI build"
          https://scan.coverity.com/builds)
        displayName: "Upload Coverity data"
      - task: PublishPipelineArtifact@1
        displayName: "Save Coverity data"
        inputs:
          artifactName: $(owcoverity.tool.src)
          path:         $(owcoverity.results.archive)
