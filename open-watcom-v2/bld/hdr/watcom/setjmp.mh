/*
 *  setjmp.h/csetjmp
 *
:include crwatqnx.sp
 */
#ifndef _SETJMP_H_INCLUDED
#define _SETJMP_H_INCLUDED

:include readonly.sp

:segment CNAME
:include cpponly.sp

:endsegment
:include owrtlink.sp

:include cpluspro.sp

:segment !INTEL_ONLY
#ifdef __PPC__
 typedef unsigned int   jmp_buf[1];
#elif defined(__AXP__)
 typedef double         jmp_buf[24];
#elif defined(__MIPS__)
 typedef unsigned long  jmp_buf[26];
#elif defined(_M_IX86)
:endsegment
 typedef unsigned int   jmp_buf[13];
:segment !INTEL_ONLY
#endif
:endsegment

_WCRTLINK extern int    _setjmp( jmp_buf __env );
_WCRTLINK _WCNORETURN extern void   longjmp( jmp_buf __env, int __val );

#ifndef _SETJMPEX_H_INCLUDED_
 #define setjmp(__env)  _setjmp(__env)
#endif

:segment !INTEL_ONLY
#ifdef _M_IX86
:endsegment
:segment BITS16
 #ifdef _M_I86
  #pragma aux _setjmp __modify [__8087]
 #else
:endsegment
  #if defined(__COMPACT__) || defined(__LARGE__)
   #pragma aux _setjmp __parm __caller [__dx __eax] __modify [__8087]
  #else
   #pragma aux _setjmp __parm __caller [__eax] __modify [__8087]
  #endif
:segment BITS16
 #endif
:endsegment
:segment !INTEL_ONLY
#endif
:endsegment

:segment LINUX | QNX
:include extunix.sp

:include pshpackl.sp

typedef struct {
    int         __flg;
    long        __msk;
    jmp_buf     __buf;
} sigjmp_buf[1];

:include poppack.sp

_WCRTLINK extern void __sigjmpsave( sigjmp_buf __env, int __msk );
_WCRTLINK _WCNORETURN extern void siglongjmp( sigjmp_buf __env, int __val );

#define sigsetjmp( __env, __msk ) ( __sigjmpsave( __env, __msk ), \
                                    _setjmp( (__env)[0].__buf ) )

:include extepi.sp

:endsegment
:include cplusepi.sp

#endif
