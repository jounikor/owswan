///////////////////////////////////////////////////////////////////////////
// FILE: exception.h/exception (Basic exception classes)
//
:keep CPP_HDR
:include crwat.sp
//
// Description: This header is part of the C++ standard library. It
//              defines the base class of the exception classes as
//              well as a number of helper functions related to
//              exception handling.
///////////////////////////////////////////////////////////////////////////
:segment !CNAME
#ifndef _EXCEPTION_H_INCLUDED
#define _EXCEPTION_H_INCLUDED

:include readonly.sp

#ifndef _EXCEPTION_INCLUDED
 #include <exception>
#endif
using std::exception;
using std::bad_exception;
using std::unexpected_handler;
using std::set_unexpected;
using std::unexpected;
using std::terminate_handler;
using std::set_terminate;
using std::terminate;
// using std::uncaught_exception;

// Needed for compatibility with Watcom legacy code?
// #include <stdexcept.h>

#endif
:elsesegment
#ifndef _EXCEPTION_INCLUDED
#define _EXCEPTION_INCLUDED

:include readonly.sp

:include cpponly.sp

:include owrtlink.sp

:include watexc.sp

:include throws.sp

:include except.sp

:include nsstd.sp
  class _WPRTLINK exception {
    const char *_what_val;
  public:
    exception( ) _WCTHROWS() { }

    exception( const exception &src ) _WCTHROWS()
        : _what_val( src._what_val ) { }

    exception( const char *what_val ) _WCTHROWS()
        : _what_val( what_val ) { }

    exception& operator=( const exception &src ) _WCTHROWS()
        { _what_val = src._what_val; return *this; }

    virtual ~exception( ) _WCTHROWS() { }

    virtual const char *what( ) const _WCTHROWS()
        { return _what_val; }
  };


  class _WPRTLINK bad_exception : public exception {
  public:
    bad_exception( ) _WCTHROWS()
        : exception( "exception missing from exception specification" ) { }

    bad_exception( const bad_exception & ) _WCTHROWS() { }

    bad_exception & operator=( bad_exception & ) _WCTHROWS()
        { return *this; }

    virtual ~bad_exception( ) _WCTHROWS() { }
  };
:include nsstdepi.sp

#endif
:endsegment
