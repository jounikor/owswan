/*
 *  direct.h    Defines the types and structures used by the directory routines
 *
:include crwat.sp
 */
#ifndef _DIRECT_H_INCLUDED
#define _DIRECT_H_INCLUDED

:include readonly.sp

:include owrtlink.sp

:segment DOS
:include lfndos.sp

:endsegment
:include systypes.sp

:include cpluspro.sp

:include pshpackl.sp

:include wchar_t.sp
:keep NAMEMAX
:include maxpath.sp
:remove NAMEMAX
:segment RDOS

struct dirent {
    int                 d_handle;                   /* directory handle */
    char                d_match_mask[NAME_MAX+1];   /* mask for matching files */
    int                 d_entry_nr;                 /* current entry number (first = 0) */
    int                 d_attr;                     /* file's attribute */
    unsigned long       d_msb_time;
    unsigned long       d_lsb_time;                 /* timestamp, rdos formatted */
    long                d_size;                     /* file's size */
    char                d_name[NAME_MAX+1];         /* file's name */
};
typedef struct dirent   DIR;
:elsesegment DOS

struct _wdirent {
    char                d_dta[21];          /* disk transfer area */
    char                d_attr;             /* file's attribute */
    unsigned short      d_time;             /* file's modification time */
    unsigned short      d_date;             /* file's modification date */
    long                d_size;             /* file's size */
    unsigned short      d_ino;              /* serial number (not used) */
    char                d_first;            /* flag for 1st time */
    wchar_t             *d_openpath;        /* path specified to _wopendir */
    wchar_t             d_name[NAME_MAX+1]; /* file's name */
};
typedef struct _wdirent WDIR;

struct dirent {
    char                d_dta[21];          /* disk transfer area */
    char                d_attr;             /* file's attribute */
    unsigned short      d_time;             /* file's time */
    unsigned short      d_date;             /* file's date */
    long                d_size;             /* file's size */
    unsigned short      d_ino;              /* serial number (not used) */
    char                d_first;            /* flag for 1st time */
    char                *d_openpath;        /* path specified to opendir */
    char                d_name[NAME_MAX+1]; /* file's name */
};
typedef struct dirent   DIR;
:endsegment

/* File attribute constants for d_attr field */

#define _A_NORMAL       0x00    /* Normal file - read/write permitted */
#define _A_RDONLY       0x01    /* Read-only file */
#define _A_HIDDEN       0x02    /* Hidden file */
#define _A_SYSTEM       0x04    /* System file */
#define _A_VOLID        0x08    /* Volume-ID entry */
#define _A_SUBDIR       0x10    /* Subdirectory */
#define _A_ARCH         0x20    /* Archive file */

:include dskfreet.sp

_WCRTLINK extern int        _chdrive( int __drive );
_WCRTLINK extern int        _getdrive( void );
_WCRTLINK extern unsigned   _getdiskfree( unsigned __drive, struct _diskfree_t *__diskspace );

:include getdcwd.sp
:include getcwd.sp
:include chdir.sp
:include mkdir.sp
:include rmdir.sp
:include dirfind.sp

:keep ANSINAME
:include getdcwd.sp
:include getcwd.sp
:include chdir.sp
:include mkdir.sp
:include rmdir.sp
:include dirfind.sp
:remove ANSINAME

:keep WIDE
:segment DOS
:include getdcwd.sp
:include getcwd.sp
:include chdir.sp
:include mkdir.sp
:include rmdir.sp
:include dirfind.sp

:endsegment
:remove WIDE
:include poppack.sp

:include cplusepi.sp

#endif
