/*
 *  varargs.h   Variable argument macros (UNIX System V definition)
 *              definitions for use with variable argument lists
 *
:include crwat.sp
 */
#ifndef _VARARGS_H_INCLUDED
#define _VARARGS_H_INCLUDED

:include readonly.sp

:include owrtlink.sp

#ifndef _STDARG_H_INCLUDED
 #include <stdarg.h>
#else
 #error stdarg.h has already been included
#endif

:include cpluspro.sp

#undef va_start

:segment !INTEL_ONLY
#ifdef __PPC__
 extern void *__builtin_va_start(va_list *, ...);
 #pragma intrinsic(__builtin_va_start)
 #define va_alist       void *__alist, ...
 #define va_dcl
 #define va_start(__ap) (__builtin_va_start(&__ap,__alist,0))
#elif defined(__AXP__)
 extern void *__builtin_va_start(va_list *, ...);
 #pragma intrinsic(__builtin_va_start)
 #define va_alist       void *__alist, ...
 #define va_dcl
 #define va_start(__ap) (__builtin_va_start(&__ap,__alist,0))
#elif defined(__MIPS__)
 extern void *__builtin_va_start(va_list *, ...);
 #pragma intrinsic(__builtin_va_start)
 #define va_alist       void *__alist, ...
 #define va_dcl
 #define va_start(__ap) (__builtin_va_start(&__ap,__alist,0))
#elif defined(_M_IX86)
:endsegment
 #define va_alist       void *__alist, ...
 #define va_dcl
:segment BITS16
 #if defined(__HUGE__) || defined(__SW_ZU)
:elsesegment
 #ifdef __SW_ZU
:endsegment
  #define va_start(__ap)    ((__ap)=(char _WCFAR*)&__alist,(void)0)
 #else
  #define va_start(__ap)    ((__ap)=(char *)&__alist,(void)0)
 #endif
:segment !INTEL_ONLY
#endif
:endsegment

:include cplusepi.sp

#endif
