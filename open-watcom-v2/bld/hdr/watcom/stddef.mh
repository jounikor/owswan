/***************************************************************************
 * FILE: stddef.h/cstddef (Standard definitions)
 *
:include crwat.sp
 *
 * Description: This header is part of the C/C++ standard library. It
 *              introduces certain commonly needed type names and
 *              supplies the offsetof macro.
 ***************************************************************************/
:segment CNAME
#ifndef _CSTDDEF_INCLUDED
#define _CSTDDEF_INCLUDED

:include readonly.sp

:include cpponly.sp
:elsesegment
#ifndef _STDDEF_H_INCLUDED
#define _STDDEF_H_INCLUDED

:include readonly.sp

#ifdef __cplusplus

#include <cstddef>

// C99 types in stddef.h
#ifndef _SIZE_T_DEFINED
#define _SIZE_T_DEFINED
 #define _SIZE_T_DEFINED_
 using std::size_t;
#endif
#ifndef _PTRDIFF_T_DEFINED
#define _PTRDIFF_T_DEFINED
 #define _PTRDIFF_T_DEFIEND_
 using std::ptrdiff_t;
#endif

#else /* __cplusplus not defined */
:endsegment

:include owrtlink.sp

:segment CNAME
:include cpluspro.sp

:endsegment
:include null.sp

:segment CNAME
#define offsetof(__typ,__id) __offsetof(__typ,__id)
:elsesegment
:: Use subtraction so that the result before cast is of ptrdiff_t type;
:: without this, we have a problem in environments where size_t is
:: not large enough for far pointers
#define offsetof(__typ,__id) ((size_t)((char *)&(((__typ*)0)->__id) - (char *)0))
:endsegment

:include wchar_t.sp
:include size_t.sp

:include ptrdifft.sp

:include ext.sp

:: Thread symbols section.
:segment BITS16
#ifndef _M_I86
:endsegment
 #define _threadid (__threadid())
 _WCRTLINK extern int *__threadid( void ); /* pointer to thread id */
:segment DOS
 #ifdef __NT__
:include thrdhndl.sp
 #endif
#else
 _WCRTDATA extern int _WCFAR *_threadid;   /* pointer to thread id */
:endsegment
:segment BITS16
#endif
:endsegment

:include extepi.sp

::::::::: Safer C :::::::::
:segment !CNAME
:include saferpro.sp

:include rsize_t.sp

:include saferepi.sp

:endsegment
::::::::: Safer C :::::::::
:segment CNAME
:include cplusepi.sp
:elsesegment
#endif /* __cplusplus not defined */
:endsegment

#endif
