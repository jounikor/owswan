/****************************************************************************
*
*                            Open Watcom Project
*
* Copyright (c) 2015-2016 The Open Watcom Contributors. All Rights Reserved.
*    Portions Copyright (c) 1983-2002 Sybase, Inc. All Rights Reserved.
*
*  ========================================================================
*
*    This file contains Original Code and/or Modifications of Original
*    Code as defined in and that are subject to the Sybase Open Watcom
*    Public License version 1.0 (the 'License'). You may not use this file
*    except in compliance with the License. BY USING THIS FILE YOU AGREE TO
*    ALL TERMS AND CONDITIONS OF THE LICENSE. A copy of the License is
*    provided with the Original Code and Modifications, and is also
*    available at www.sybase.com/developer/opensource.
*
*    The Original Code and all software distributed under the License are
*    distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
*    EXPRESS OR IMPLIED, AND SYBASE AND ALL CONTRIBUTORS HEREBY DISCLAIM
*    ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF
*    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR
*    NON-INFRINGEMENT. Please see the License for the specific language
*    governing rights and limitations under the License.
*
*  ========================================================================
*
* Description:  Win386 extender data.
*
****************************************************************************/


extern char MsgTitle[];

extern WORD    DPL;
extern WORD    Has87;
extern WORD    HasWGod;
extern DWORD   SaveSP;
extern WORD    DataSelector;
extern WORD    StackSelector;
extern WORD    Int21Selector;
extern WORD    MyDataSelector;
extern DWORD   CodeSelectorBase;
extern DWORD   DataSelectorBase;
extern DWORD   DataHandle;
extern DWORD   StackSize;
extern DWORD   ReturnCode;
extern DWORD   EntryStackSave;
extern DWORD   BaseAddr;
extern DWORD   CodeLoadAddr;
extern DWORD   _DLLEntryAddr;
extern DWORD   _WEPAddr;
extern DWORD   EDataAddr;               // end of loaded code+data
extern addr_48 CodeEntry;
extern addr_48 _32BitCallBackAddr;

/*
 * NOTE: The array of functions, Glue, must contain all of the thunk
 * layers that appear in winglue.asm (generated by conv.exe in the
 * conv subdirectory).
 */
extern void __far Invoke16BitFunction();
extern void __far __Int21();
extern void __far __Win16Thunk1();
extern void __far __Win16Thunk2();
extern void __far __Win16Thunk3();
extern void __far __Win16Thunk4();
extern void __far __Win16Thunk5();
extern void __far __Win16Thunk6();
extern void __far __Call16();

extern rtns Glue[];
extern short MaxGlueRoutines;
