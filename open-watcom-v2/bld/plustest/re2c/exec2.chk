/* Generated by re2c on Fri Sep 11 21:05:46 1992 */
#include <stdlib.h>
#include <stdio.h>
#include <string.h>

typedef unsigned int uint;
typedef unsigned long ulong;
typedef unsigned short ushort;
typedef unsigned char uchar;
typedef unsigned char byte;
typedef unsigned char bool;

#define true    (0 == 0)
#define false   (!true)

#define BSIZE   2048

#define CURSOR   ch
#define LOADCURSOR  ch = *cursor;
#define ADVANCE     cursor++;
#define BACK(n)     cursor -= (n);
#define CHECK(n)    if((s->lim - cursor) < (n)){cursor = fill(s, cursor);}
#define MARK(n)     s->ptr = cursor; sel = (n);
#define REVERT   cursor = s->ptr;
#define MARKER   sel

#define RETURN(i)   {s->cur = cursor; return i;}

typedef struct Scanner Scanner;

struct Scanner {
    int        fd;
    uchar     *bot, *tok, *ptr, *cur, *lim, *top;
    uint       lineNum;
    ulong     linePos;
    ulong     pos;
};

uchar *fill(s, cursor)
    Scanner *s;
    uchar *cursor;
{
    uint cnt = s->tok - s->bot;
    if(cnt){
    memcpy(s->bot, s->tok, s->lim - s->tok);
    s->tok = s->bot;
    s->ptr -= cnt;
    cursor -= cnt;
    s->lim -= cnt;
    }
    if((s->top - s->lim) < BSIZE){
    uchar *buf = (uchar*) malloc(((s->lim - s->bot) + BSIZE)*sizeof(uchar));
    memcpy(buf, s->tok, s->lim - s->tok);
    s->tok = buf;
    s->ptr = &buf[s->ptr - s->bot];
    cursor = &buf[cursor - s->bot];
    s->lim = &buf[s->lim - s->bot];
    s->top = &s->lim[BSIZE];
    free(s->bot);
    s->bot = buf;
    }
    if((cnt = read(s->fd, (char*) s->lim, BSIZE)) != BSIZE)
    s->lim[cnt] = '\0';
    s->lim += cnt;
    return cursor;
}

int scan(s)
    Scanner *s;
{
    uchar *cursor = s->cur;
    uint depth;
    uint sel;
    uchar ch;
    s->pos += (cursor - s->tok); s->tok = cursor;
	goto std;
L0:	{ADVANCE}
std:
	{CHECK(15)}
	{LOADCURSOR}
L1:	{LOADCURSOR}
	switch((CURSOR)){
	case '\000':

		goto L77;
	case '\t':
case ' ':

		goto L73;
	case '\n':

		goto L75;
	case '"':

		goto L9;
	case '#':

		goto L10;
	case '&':

		goto L12;
	case '\'':

		goto L7;
	case '(':

		goto L2;
	case ')':

		goto L14;
	case '*':

		goto L16;
	case '+':

		goto L18;
	case ',':

		goto L20;
	case '-':

		goto L22;
	case '.':

		goto L24;
	case '/':

		goto L26;
	case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':

		goto L4;
	case '8':
case '9':

		goto L6;
	case ':':

		goto L28;
	case ';':

		goto L30;
	case '<':

		goto L32;
	case '=':

		goto L34;
	case '>':

		goto L36;
	case 'A':

		goto L52;
	case 'B':

		goto L54;
	case 'C':

		goto L55;
	case 'D':

		goto L56;
	case 'E':

		goto L57;
	case 'F':

		goto L58;
	case 'G':
case 'H':
case 'J':
case 'K':
case 'X':
case 'Y':
case 'Z':
case 'a':
case 'b':
case 'c':
case 'd':
case 'e':
case 'f':
case 'g':
case 'h':
case 'i':
case 'j':
case 'k':
case 'l':
case 'm':
case 'n':
case 'o':
case 'p':
case 'q':
case 'r':
case 's':
case 't':
case 'u':
case 'v':
case 'w':
case 'x':
case 'y':
case 'z':

		goto L72;
	case 'I':

		goto L59;
	case 'L':

		goto L60;
	case 'M':

		goto L61;
	case 'N':

		goto L62;
	case 'O':

		goto L63;
	case 'P':

		goto L64;
	case 'Q':

		goto L65;
	case 'R':

		goto L66;
	case 'S':

		goto L67;
	case 'T':

		goto L68;
	case 'U':

		goto L69;
	case 'V':

		goto L70;
	case 'W':

		goto L71;
	case '[':

		goto L38;
	case ']':

		goto L40;
	case '^':

		goto L42;
	case '{':

		goto L44;
	case '|':

		goto L46;
	case '}':

		goto L48;
	case '~':

		goto L50;
	default:
		goto L79;
	}
L2:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == '*')	goto L297;
L3:
	{RETURN(9);}
L4:	{ADVANCE}
	{MARK(0)}
	{LOADCURSOR}
	switch((CURSOR)){
	case '.':

		goto L275;
	case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':

		goto L291;
	case '8':
case '9':

		goto L277;
	case 'A':
case 'D':
case 'E':
case 'F':

		goto L279;
	case 'B':

		goto L293;
	case 'C':

		goto L295;
	case 'H':

		goto L281;
	default:
		goto L5;
	}
L5:
	{RETURN(1);}
L6:	{ADVANCE}
	{MARK(0)}
	{LOADCURSOR}
	if((CURSOR) <= '9'){
		if((CURSOR) == '.')	goto L275;
		if((CURSOR) <= '/')	goto L5;
		goto L277;
	} else {
		if((CURSOR) <= 'F'){
			if((CURSOR) <= '@')	goto L5;
			goto L279;
		} else {
			if((CURSOR) == 'H')	goto L281;
			goto L5;
		}
	}
L7:	{ADVANCE}
	{MARK(1)}
	{LOADCURSOR}
	if((CURSOR) <= '\000')	goto L8;
	if((CURSOR) != '\n')	goto L274;
L8:
	{
       printf("illegal character: %c\n", *s->tok);
       s->pos += 1; s->tok = cursor;
       goto std;
        }
L9:	{ADVANCE}
	{MARK(1)}
	{LOADCURSOR}
	if((CURSOR) <= '\000')	goto L8;
	if((CURSOR) == '\n')	goto L8;
	goto L269;
L10:	{ADVANCE}
	{LOADCURSOR}
L11:
	{RETURN(7);}
L12:	{ADVANCE}
	{LOADCURSOR}
L13:
	{RETURN(8);}
L14:	{ADVANCE}
	{LOADCURSOR}
L15:
	{RETURN(10);}
L16:	{ADVANCE}
	{LOADCURSOR}
L17:
	{RETURN(11);}
L18:	{ADVANCE}
	{LOADCURSOR}
L19:
	{RETURN(12);}
L20:	{ADVANCE}
	{LOADCURSOR}
L21:
	{RETURN(13);}
L22:	{ADVANCE}
	{LOADCURSOR}
L23:
	{RETURN(14);}
L24:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == '.')	goto L266;
L25:
	{RETURN(15);}
L26:	{ADVANCE}
	{LOADCURSOR}
L27:
	{RETURN(17);}
L28:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == '=')	goto L264;
L29:
	{RETURN(18);}
L30:	{ADVANCE}
	{LOADCURSOR}
L31:
	{RETURN(20);}
L32:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '<')	goto L33;
	if((CURSOR) <= '=')	goto L262;
	if((CURSOR) <= '>')	goto L260;
L33:
	{RETURN(21);}
L34:	{ADVANCE}
	{LOADCURSOR}
L35:
	{RETURN(24);}
L36:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == '=')	goto L258;
L37:
	{RETURN(25);}
L38:	{ADVANCE}
	{LOADCURSOR}
L39:
	{RETURN(27);}
L40:	{ADVANCE}
	{LOADCURSOR}
L41:
	{RETURN(28);}
L42:	{ADVANCE}
	{LOADCURSOR}
L43:
	{RETURN(29);}
L44:	{ADVANCE}
	{LOADCURSOR}
L45:
	{RETURN(30);}
L46:	{ADVANCE}
	{LOADCURSOR}
L47:
	{RETURN(31);}
L48:	{ADVANCE}
	{LOADCURSOR}
L49:
	{RETURN(32);}
L50:	{ADVANCE}
	{LOADCURSOR}
L51:
	{RETURN(33);}
L52:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'N')	goto L250;
	if((CURSOR) == 'R')	goto L251;
	goto L81;
L53:
	{RETURN(74);}
L54:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'E')	goto L243;
	if((CURSOR) == 'Y')	goto L244;
	goto L81;
L55:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'A')	goto L234;
	if((CURSOR) == 'O')	goto L235;
	goto L81;
L56:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= 'H'){
		if((CURSOR) == 'E')	goto L219;
		goto L81;
	} else {
		if((CURSOR) <= 'I')	goto L220;
		if((CURSOR) == 'O')	goto L221;
		goto L81;
	}
L57:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= 'M'){
		if((CURSOR) == 'L')	goto L200;
		goto L81;
	} else {
		if((CURSOR) <= 'N')	goto L201;
		if((CURSOR) == 'X')	goto L202;
		goto L81;
	}
L58:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'O')	goto L193;
	if((CURSOR) == 'R')	goto L194;
	goto L81;
L59:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= 'L'){
		if((CURSOR) == 'F')	goto L171;
		goto L81;
	} else {
		if((CURSOR) <= 'M')	goto L173;
		if((CURSOR) <= 'N')	goto L174;
		goto L81;
	}
L60:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'O')	goto L167;
	goto L81;
L61:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'O')	goto L160;
	goto L81;
L62:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'O')	goto L157;
	goto L81;
L63:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'F')	goto L153;
	if((CURSOR) == 'R')	goto L155;
	goto L81;
L64:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'O')	goto L137;
	if((CURSOR) == 'R')	goto L138;
	goto L81;
L65:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'U')	goto L128;
	goto L81;
L66:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'E')	goto L112;
	goto L81;
L67:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'E')	goto L109;
	goto L81;
L68:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= 'N'){
		if((CURSOR) == 'H')	goto L99;
		goto L81;
	} else {
		if((CURSOR) <= 'O')	goto L100;
		if((CURSOR) == 'Y')	goto L102;
		goto L81;
	}
L69:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'N')	goto L94;
	goto L81;
L70:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'A')	goto L91;
	goto L81;
L71:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= 'G')	goto L81;
	if((CURSOR) <= 'H')	goto L82;
	if((CURSOR) <= 'I')	goto L83;
	goto L81;
L72:	{ADVANCE}
	{LOADCURSOR}
	goto L81;
L73:	{ADVANCE}
	{LOADCURSOR}
L74:
	{
       s->pos += 1; s->tok = cursor;
       goto std;
        }
L75:	{ADVANCE}
	{LOADCURSOR}
L76:
	{
       s->linePos = s->pos++; s->lineNum++; s->tok = cursor;
       goto std;
        }
L77:	{ADVANCE}
	{LOADCURSOR}
L78:
	{ exit(0); }
L79:	{ADVANCE}
	{LOADCURSOR}
	goto L8;
L80:	{ADVANCE}
	{CHECK(1)}
	{LOADCURSOR}
L81:	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L53;
		if((CURSOR) <= '9')	goto L80;
		goto L53;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L53;
		if((CURSOR) <= 'z')	goto L80;
		goto L53;
	}
L82:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'I')	goto L87;
	goto L81;
L83:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'T')	goto L81;
L84:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'H')	goto L81;
L85:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L86;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L86;
		if((CURSOR) <= 'z')	goto L80;
	}
L86:
	{RETURN(73);}
L87:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'L')	goto L81;
L88:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'E')	goto L81;
L89:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L90;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L90;
		if((CURSOR) <= 'z')	goto L80;
	}
L90:
	{RETURN(72);}
L91:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'R')	goto L81;
L92:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L93;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L93;
		if((CURSOR) <= 'z')	goto L80;
	}
L93:
	{RETURN(71);}
L94:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'T')	goto L81;
L95:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'I')	goto L81;
L96:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'L')	goto L81;
L97:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L98;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L98;
		if((CURSOR) <= 'z')	goto L80;
	}
L98:
	{RETURN(70);}
L99:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'E')	goto L106;
	goto L81;
L100:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L101;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L101;
		if((CURSOR) <= 'z')	goto L80;
	}
L101:
	{RETURN(68);}
L102:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'P')	goto L81;
L103:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'E')	goto L81;
L104:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L105;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L105;
		if((CURSOR) <= 'z')	goto L80;
	}
L105:
	{RETURN(69);}
L106:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'N')	goto L81;
L107:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L108;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L108;
		if((CURSOR) <= 'z')	goto L80;
	}
L108:
	{RETURN(67);}
L109:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'T')	goto L81;
L110:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L111;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L111;
		if((CURSOR) <= 'z')	goto L80;
	}
L111:
	{RETURN(66);}
L112:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= 'O'){
		if((CURSOR) != 'C')	goto L81;
	} else {
		if((CURSOR) <= 'P')	goto L114;
		if((CURSOR) == 'T')	goto L115;
		goto L81;
	}
L113:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'O')	goto L124;
	goto L81;
L114:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'E')	goto L120;
	goto L81;
L115:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'U')	goto L81;
L116:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'R')	goto L81;
L117:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'N')	goto L81;
L118:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L119;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L119;
		if((CURSOR) <= 'z')	goto L80;
	}
L119:
	{RETURN(65);}
L120:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'A')	goto L81;
L121:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'T')	goto L81;
L122:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L123;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L123;
		if((CURSOR) <= 'z')	goto L80;
	}
L123:
	{RETURN(64);}
L124:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'R')	goto L81;
L125:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'D')	goto L81;
L126:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L127;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L127;
		if((CURSOR) <= 'z')	goto L80;
	}
L127:
	{RETURN(63);}
L128:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'A')	goto L81;
L129:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'L')	goto L81;
L130:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'I')	goto L81;
L131:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'F')	goto L81;
L132:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'I')	goto L81;
L133:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'E')	goto L81;
L134:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'D')	goto L81;
L135:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L136;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L136;
		if((CURSOR) <= 'z')	goto L80;
	}
L136:
	{RETURN(62);}
L137:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'I')	goto L147;
	goto L81;
L138:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'O')	goto L81;
L139:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'C')	goto L81;
L140:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'E')	goto L81;
L141:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'D')	goto L81;
L142:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'U')	goto L81;
L143:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'R')	goto L81;
L144:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'E')	goto L81;
L145:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L146;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L146;
		if((CURSOR) <= 'z')	goto L80;
	}
L146:
	{RETURN(61);}
L147:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'N')	goto L81;
L148:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'T')	goto L81;
L149:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'E')	goto L81;
L150:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'R')	goto L81;
L151:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L152;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L152;
		if((CURSOR) <= 'z')	goto L80;
	}
L152:
	{RETURN(60);}
L153:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L154;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L154;
		if((CURSOR) <= 'z')	goto L80;
	}
L154:
	{RETURN(58);}
L155:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L156;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L156;
		if((CURSOR) <= 'z')	goto L80;
	}
L156:
	{RETURN(59);}
L157:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'T')	goto L81;
L158:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L159;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L159;
		if((CURSOR) <= 'z')	goto L80;
	}
L159:
	{RETURN(57);}
L160:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'D')	goto L81;
L161:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= 'T'){
		if((CURSOR) <= '/')	goto L162;
		if((CURSOR) <= '9')	goto L80;
		if((CURSOR) >= 'A')	goto L80;
	} else {
		if((CURSOR) <= 'Z'){
			if((CURSOR) <= 'U')	goto L163;
			goto L80;
		} else {
			if((CURSOR) <= '`')	goto L162;
			if((CURSOR) <= 'z')	goto L80;
		}
	}
L162:
	{RETURN(55);}
L163:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'L')	goto L81;
L164:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'E')	goto L81;
L165:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L166;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L166;
		if((CURSOR) <= 'z')	goto L80;
	}
L166:
	{RETURN(56);}
L167:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'O')	goto L81;
L168:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'P')	goto L81;
L169:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L170;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L170;
		if((CURSOR) <= 'z')	goto L80;
	}
L170:
	{RETURN(54);}
L171:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L172;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L172;
		if((CURSOR) <= 'z')	goto L80;
	}
L172:
	{RETURN(50);}
L173:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'P')	goto L176;
	goto L81;
L174:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L175;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L175;
		if((CURSOR) <= 'z')	goto L80;
	}
L175:
	{RETURN(53);}
L176:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'L')	goto L177;
	if((CURSOR) == 'O')	goto L178;
	goto L81;
L177:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'E')	goto L182;
	goto L81;
L178:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'R')	goto L81;
L179:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'T')	goto L81;
L180:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L181;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L181;
		if((CURSOR) <= 'z')	goto L80;
	}
L181:
	{RETURN(52);}
L182:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'M')	goto L81;
L183:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'E')	goto L81;
L184:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'N')	goto L81;
L185:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'T')	goto L81;
L186:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'A')	goto L81;
L187:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'T')	goto L81;
L188:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'I')	goto L81;
L189:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'O')	goto L81;
L190:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'N')	goto L81;
L191:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L192;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L192;
		if((CURSOR) <= 'z')	goto L80;
	}
L192:
	{RETURN(51);}
L193:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'R')	goto L198;
	goto L81;
L194:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'O')	goto L81;
L195:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'M')	goto L81;
L196:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L197;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L197;
		if((CURSOR) <= 'z')	goto L80;
	}
L197:
	{RETURN(49);}
L198:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L199;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L199;
		if((CURSOR) <= 'z')	goto L80;
	}
L199:
	{RETURN(48);}
L200:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'S')	goto L213;
	goto L81;
L201:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'D')	goto L211;
	goto L81;
L202:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'I')	goto L203;
	if((CURSOR) == 'P')	goto L204;
	goto L81;
L203:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'T')	goto L209;
	goto L81;
L204:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'O')	goto L81;
L205:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'R')	goto L81;
L206:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'T')	goto L81;
L207:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L208;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L208;
		if((CURSOR) <= 'z')	goto L80;
	}
L208:
	{RETURN(47);}
L209:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L210;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L210;
		if((CURSOR) <= 'z')	goto L80;
	}
L210:
	{RETURN(46);}
L211:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L212;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L212;
		if((CURSOR) <= 'z')	goto L80;
	}
L212:
	{RETURN(45);}
L213:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'E')	goto L214;
	if((CURSOR) == 'I')	goto L216;
	goto L81;
L214:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L215;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L215;
		if((CURSOR) <= 'z')	goto L80;
	}
L215:
	{RETURN(43);}
L216:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'F')	goto L81;
L217:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L218;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L218;
		if((CURSOR) <= 'z')	goto L80;
	}
L218:
	{RETURN(44);}
L219:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'F')	goto L225;
	goto L81;
L220:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'V')	goto L223;
	goto L81;
L221:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L222;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L222;
		if((CURSOR) <= 'z')	goto L80;
	}
L222:
	{RETURN(42);}
L223:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L224;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L224;
		if((CURSOR) <= 'z')	goto L80;
	}
L224:
	{RETURN(41);}
L225:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'I')	goto L81;
L226:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'N')	goto L81;
L227:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'I')	goto L81;
L228:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'T')	goto L81;
L229:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'I')	goto L81;
L230:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'O')	goto L81;
L231:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'N')	goto L81;
L232:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L233;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L233;
		if((CURSOR) <= 'z')	goto L80;
	}
L233:
	{RETURN(40);}
L234:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'S')	goto L240;
	goto L81;
L235:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'N')	goto L81;
L236:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'S')	goto L81;
L237:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'T')	goto L81;
L238:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L239;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L239;
		if((CURSOR) <= 'z')	goto L80;
	}
L239:
	{RETURN(39);}
L240:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'E')	goto L81;
L241:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L242;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L242;
		if((CURSOR) <= 'z')	goto L80;
	}
L242:
	{RETURN(38);}
L243:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'G')	goto L246;
	goto L81;
L244:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L245;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L245;
		if((CURSOR) <= 'z')	goto L80;
	}
L245:
	{RETURN(37);}
L246:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'I')	goto L81;
L247:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'N')	goto L81;
L248:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L249;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L249;
		if((CURSOR) <= 'z')	goto L80;
	}
L249:
	{RETURN(36);}
L250:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == 'D')	goto L256;
	goto L81;
L251:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'R')	goto L81;
L252:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'A')	goto L81;
L253:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) != 'Y')	goto L81;
L254:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L255;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L255;
		if((CURSOR) <= 'z')	goto L80;
	}
L255:
	{RETURN(35);}
L256:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L257;
		if((CURSOR) <= '9')	goto L80;
	} else {
		if((CURSOR) <= 'Z')	goto L80;
		if((CURSOR) <= '`')	goto L257;
		if((CURSOR) <= 'z')	goto L80;
	}
L257:
	{RETURN(34);}
L258:	{ADVANCE}
	{LOADCURSOR}
L259:
	{RETURN(26);}
L260:	{ADVANCE}
	{LOADCURSOR}
L261:
	{RETURN(23);}
L262:	{ADVANCE}
	{LOADCURSOR}
L263:
	{RETURN(22);}
L264:	{ADVANCE}
	{LOADCURSOR}
L265:
	{RETURN(19);}
L266:	{ADVANCE}
	{LOADCURSOR}
L267:
	{RETURN(16);}
L268:	{ADVANCE}
	{CHECK(1)}
	{LOADCURSOR}
L269:	{LOADCURSOR}
	if((CURSOR) <= '\n'){
		if((CURSOR) <= '\000')	goto L270;
		if((CURSOR) <= '\t')	goto L268;
	} else {
		if((CURSOR) == '"')	goto L271;
		goto L268;
	}
L270:	{REVERT}
	switch(MARKER){
	case 0:	goto L5;
	case 3:	goto L294;
	case 4:	goto L296;
	case 2:	goto L276;
	case 1:	goto L8;
	}
L271:	{ADVANCE}
	{LOADCURSOR}
L272:
	{RETURN(6);}
L273:	{ADVANCE}
	{CHECK(1)}
	{LOADCURSOR}
L274:	{LOADCURSOR}
	if((CURSOR) <= '\n'){
		if((CURSOR) <= '\000')	goto L270;
		if((CURSOR) <= '\t')	goto L273;
		goto L270;
	} else {
		if((CURSOR) == '\'')	goto L271;
		goto L273;
	}
L275:	{ADVANCE}
	{MARK(2)}
	{LOADCURSOR}
	if((CURSOR) == '.')	goto L283;
	goto L286;
L276:
	{RETURN(5);}
L277:	{ADVANCE}
	{MARK(0)}
	{CHECK(2)}
	{LOADCURSOR}
L278:	{LOADCURSOR}
	if((CURSOR) <= '9'){
		if((CURSOR) == '.')	goto L275;
		if((CURSOR) <= '/')	goto L5;
		goto L277;
	} else {
		if((CURSOR) <= 'F'){
			if((CURSOR) <= '@')	goto L5;
		} else {
			if((CURSOR) == 'H')	goto L281;
			goto L5;
		}
	}
L279:	{ADVANCE}
	{CHECK(1)}
	{LOADCURSOR}
L280:	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L270;
		if((CURSOR) <= '9')	goto L279;
		goto L270;
	} else {
		if((CURSOR) <= 'F')	goto L279;
		if((CURSOR) != 'H')	goto L270;
	}
L281:	{ADVANCE}
	{LOADCURSOR}
L282:
	{RETURN(4);}
L283:	{ADVANCE}
	{LOADCURSOR}
L284:	{BACK(2)}
	{RETURN(1);}
L285:	{ADVANCE}
	{MARK(2)}
	{CHECK(1)}
	{LOADCURSOR}
L286:	{LOADCURSOR}
	if((CURSOR) <= '/')	goto L276;
	if((CURSOR) <= '9')	goto L285;
	if((CURSOR) != 'E')	goto L276;
L287:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= ','){
		if((CURSOR) != '+')	goto L270;
	} else {
		if((CURSOR) <= '-')	goto L288;
		if((CURSOR) <= '/')	goto L270;
		if((CURSOR) <= '9')	goto L289;
		goto L270;
	}
L288:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) <= '/')	goto L270;
	if((CURSOR) >= ':')	goto L270;
L289:	{ADVANCE}
	{CHECK(1)}
	{LOADCURSOR}
L290:	{LOADCURSOR}
	if((CURSOR) <= '/')	goto L276;
	if((CURSOR) <= '9')	goto L289;
	goto L276;
L291:	{ADVANCE}
	{MARK(0)}
	{CHECK(4)}
	{LOADCURSOR}
L292:	{LOADCURSOR}
	switch((CURSOR)){
	case '.':

		goto L275;
	case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':

		goto L291;
	case '8':
case '9':

		goto L277;
	case 'A':
case 'D':
case 'E':
case 'F':

		goto L279;
	case 'B':

		goto L293;
	case 'C':

		goto L295;
	case 'H':

		goto L281;
	default:
		goto L5;
	}
L293:	{ADVANCE}
	{MARK(3)}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L294;
		if((CURSOR) <= '9')	goto L279;
	} else {
		if((CURSOR) <= 'F')	goto L279;
		if((CURSOR) == 'H')	goto L281;
	}
L294:
	{RETURN(2);}
L295:	{ADVANCE}
	{MARK(4)}
	{LOADCURSOR}
	if((CURSOR) <= '@'){
		if((CURSOR) <= '/')	goto L296;
		if((CURSOR) <= '9')	goto L279;
	} else {
		if((CURSOR) <= 'F')	goto L279;
		if((CURSOR) == 'H')	goto L281;
	}
L296:
	{RETURN(3);}
L297:	{ADVANCE}
	{LOADCURSOR}
L298:
	{
       s->pos += 2; s->tok = cursor; depth = 1;
       goto comment;
        }
	goto comment;
L299:	{ADVANCE}
comment:
	{CHECK(2)}
	{LOADCURSOR}
L300:	{LOADCURSOR}
	if((CURSOR) <= '\''){
		if((CURSOR) <= '\000')	goto L306;
		if((CURSOR) == '\n')	goto L304;
		goto L308;
	} else {
		if((CURSOR) <= '(')	goto L303;
		if((CURSOR) != '*')	goto L308;
	}
L301:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == ')')	goto L311;
L302:
	{
       s->pos += 1; s->tok = cursor;
       goto comment;
        }
L303:	{ADVANCE}
	{LOADCURSOR}
	if((CURSOR) == '*')	goto L309;
	goto L302;
L304:	{ADVANCE}
	{LOADCURSOR}
L305:
	{
       s->linePos = s->pos++; s->lineNum++; s->tok = cursor;
       goto comment;
        }
L306:	{ADVANCE}
	{LOADCURSOR}
L307:
	{ exit(0); }
L308:	{ADVANCE}
	{LOADCURSOR}
	goto L302;
L309:	{ADVANCE}
	{LOADCURSOR}
L310:
	{
       s->pos += 2; s->tok = cursor; ++depth;
       goto comment;
        }
L311:	{ADVANCE}
	{LOADCURSOR}
L312:
	{
       s->pos += 2; s->tok = cursor;
       if(--depth == 0)
           goto std;
       else
           goto comment;
        }
}

void putStr(o, s, l)
    FILE *o;
    char *s;
    uint l;
{
    while(l-- > 0)
    putc(*s++, o);
}

main(){
    Scanner in;
    int token;
    
    memset((char*) &in, 0, sizeof(in));
    in.fd = 0;
    for(;;){
	token = scan(&in);
	putchar( '<' );
	putStr(stdout, (char*) in.tok, in.cur - in.tok);
	printf( "> (%d) ", token );
    }
}
