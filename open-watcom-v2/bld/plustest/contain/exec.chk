PASS compiling wctype
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
PASS executing wctype
PASS compiling wctest

Number of queue 2 entries: 4
First entry = [7]
Last entry = [10]
7
8
9
10
PASS executing wctest
PASS compiling wctest1
Number of entries: 3
1:data 2
1:item 1
1:append data

Number of entries: 3
2:data 2
2:item 1
2:append data

contains 5? 0
contains 7? 1
contains 2? 1
Number of entries: 3
2
3
7

Number of entries: 3
4:data 2
4:item 1
4:append data

Number of entries: 3
5:data 2
5:item 1
5:append data

Number of entries: 4
Number of entries: 3
6:insert data
6:data 2
6:data 2
6:item 1
6:item 1
6:append data
PASS executing wctest1
PASS compiling wctest2
Number of queue 1 entries: 3
First entry = [1:item 1]
Last entry = [1:append data]
1:item 1
1:data 2
1:append data

Number of queue 2 entries: 4
First entry = [7]
Last entry = [10]
7
8
9
10

Number of stack 1 entries: 3
Top entry = [1:append data]
1:append data
1:data 2
1:item 1

Number of stack 2 entries: 4
Top entry = [10]
10
9
8
7
PASS executing wctest2
PASS compiling wctest3
Number of entries: 3
1:data 2
1:item 1
1:append data

Number of entries: 3
2:data 2
2:item 1
2:append data

contains 5? 0
contains 7? 1
contains 2? 1
Number of entries: 3
2
3
7

Number of entries: 3
4:data 2
4:item 1
4:append data

contains 5? 0
contains 7? 1
contains 2? 1
Number of entries: 3
2
3
7

Number of entries: 3
5:data 2
5:item 1
5:append data

Number of entries: 4
6:insert data
6:data 2
6:item 1
6:append data

Number of entries: 3
6:data 2
6:item 1
6:append data

done test
PASS executing wctest3
PASS compiling wctest4
Finished doing a single and double linked list(1)
I guess no error was set

Finished doing a single and double linked list(2)

** oh no, the list is not empty **
PASS executing wctest4
PASS compiling wctest7
5
1
2
5
1
2
5
1
2
5
1
2
PASS executing wctest7
PASS compiling wctest8
5
1
2
5
1
2
5
1
2
5
1
2
PASS executing wctest8
PASS compiling wctest9
5
1
2
PASS executing wctest9
PASS compiling wctest10
9
2
7

9
2
7
PASS executing wctest10
PASS compiling wctest11
9
2
7

9
2
7
PASS executing wctest11
PASS compiling wctest12
9
2
7

9
2
7
PASS executing wctest12
PASS compiling wctest14
1:1 list
>ptrdlist<int *>< [1]
>ptrdlist<int *>< [2]
2:1 list
>ptrdlist<int *>< [3]
1:2 list
>ptrdlist<int *>< [1]
>ptrdlist<int *>< [2]
2:2 list
>ptrdlist<int *>< [1]
>ptrdlist<int *>< [2]
PASS executing wctest14
PASS compiling wctest15
9
2
7

9
2
7

9
2
7
PASS executing wctest15
PASS compiling wctest16
str#3
str#2
str#1

str#3
str#2
str#1

str#3
str#2
str#1
PASS executing wctest16
PASS compiling wctest17
[str#3]
[str#2]
[str#1]

PASS executing wctest17
PASS compiling wctest19
[str#3] - find(0)
[str#1] - find(2)
[str#3] - find()
[str#2] - find(1)
[str#1] - findLast()
PASS executing wctest19
PASS compiling wctest20
[str#3] - find(3)
[str#3] - find(4)
[str#1] - find(-1)

** the index value of a find call was out of range **

** the index value of a find call was out of range **

** the index value of a find call was out of range **
PASS executing wctest20
PASS compiling wctest21
Number of queue 1 entries: 3
1:item 1
1:data 2
1:append data

Number of stack 1 entries: 3
1:append data
1:data 2
1:item 1
PASS executing wctest21
PASS compiling wctest22

Number of entries: 4
>isvslist< [1:item 1]
>isvslist< [1:data 2]
>isvslist< [1:data 3]
>isvslist< [1:end data]

Number of entries: 3
>isvslist< [1:item 1]
>isvslist< [1:data 2]
>isvslist< [1:end data]

Number of entries: 2
>isvslist< [1:item 1]
>isvslist< [1:data 2]

Number of entries: 1
>isvslist< [1:item 1]

Number of entries: 4
>valslist< [1:item 1]
>valslist< [1:data 2]
>valslist< [1:data 3]
>valslist< [1:end data]

Number of entries: 3
>valslist< [1:item 1]
>valslist< [1:data 2]
>valslist< [1:end data]

Number of entries: 2
>valslist< [1:item 1]
>valslist< [1:data 2]

Number of entries: 1
>valslist< [1:item 1]
done test
PASS executing wctest22
PASS compiling wctest23
[svstr#1]
[svstr#2]
[svstr#3]
[svstr#4]

[dvstr#1]
[dvstr#2]
[dvstr#3]
[dvstr#4]

[spstr#1]
[spstr#2]
[spstr#3]
[spstr#4]

[dpstr#1]
[dpstr#2]
[dpstr#3]
[dpstr#4]

[distr#1]
[distr#2]
[distr#3]
[distr#4]

[distr#1]
[distr#2]
[distr#3]
[distr#4]

PASS executing wctest23
PASS compiling wctest24
[svstr#1]
[svstr#2]
[svstr#3]
[svstr#4]

do a reset

[svstr#1]
[svstr#2]

do a reset to list 2

[svstr#3]
[svstr#2]
[svstr#1]

PASS executing wctest24
PASS compiling wctest26
[svstr#1]
[svstr#2]
[svstr#3]
[svstr#4]
[svstr#1]
[svstr#2]
[svstr#2]


[dvstr#1]
[dvstr#2]
[dvstr#3]
[dvstr#4]
[dvstr#1]
[dvstr#2]
[dvstr#1]
[dvstr#3]
[dvstr#2]


[spstr#1]
[spstr#2]
[spstr#3]
[spstr#4]
[spstr#1]
[spstr#2]
[spstr#2]


[dpstr#1]
[dpstr#2]
[dpstr#3]
[dpstr#4]
[dpstr#1]
[dpstr#2]
[dpstr#1]
[dpstr#3]
[dpstr#2]


[sistr#1]
[sistr#2]
[sistr#3]
[sistr#4]
[sistr#1]
[sistr#2]
[sistr#2]


[distr#1]
[distr#2]
[distr#3]
[distr#4]
[distr#1]
[distr#2]
[distr#1]
[distr#3]
[distr#2]


PASS executing wctest26
PASS compiling wctest27
right
right
PASS executing wctest27
PASS compiling wctest28
[str#3]
[]
[]
[str#3]

**(1) the current value was baaaad **

**(2) iter range bad

**(1) the iterator was baaaad **
Should be here 3

**(1) the iterator value was baaaad **
PASS executing wctest28
PASS compiling wctest29
[str#2]
>valdlist<String>< [str#1]
>valdlist<String>< [str#5]
>valdlist<String>< [str#2]
>valdlist<String>< [str#4]
>valdlist<String>< [str#3]
[str#2]
>ptrdlist<String>< [str#1]
>ptrdlist<String>< [str#5]
>ptrdlist<String>< [str#2]
>ptrdlist<String>< [str#4]
>ptrdlist<String>< [str#3]
[str#2]
>isvdlist<str_ddata>< [str#1]
>isvdlist<str_ddata>< [str#5]
>isvdlist<str_ddata>< [str#2]
>isvdlist<str_ddata>< [str#4]
>isvdlist<str_ddata>< [str#3]
PASS executing wctest29
PASS compiling wctest30
<intrusive double list for int_ddata>
[1]
[2]
[3]
[4]
[5]
<the fourth element>[4]
<the third element>[3]
<the first element>[1]
PASS executing wctest30
PASS compiling wctest31
<value double list for int>
[1]
[2]
[3]
[4]
[5]
<the fourth element>[4]
<the third element>[3]
<the first element>[1]
PASS executing wctest31
PASS compiling wctest32
<pointer double list for int>
[1]
[2]
[3]
[4]
[5]
<the fourth element>[4]
<the third element>[3]
<the first element>[1]
PASS executing wctest32
PASS compiling wctest33

Number of queue 2 entries: 4
First entry = [7]
Last entry = [10]
7
8
9
10
PASS executing wctest33
PASS compiling wctest34

Number of stack 2 entries: 4
Top entry = [10]
10
9
8
7
PASS executing wctest34
PASS compiling wctest35

Number of stack 2 entries: 4
Top entry = [10]
10
9
8
7
PASS executing wctest35
PASS compiling wctest36
<intrusive double list for int_ddata>
[1]
[2]
[3]
[1]
[2]
[3]
[2]
PASS executing wctest36
PASS compiling wctest37
[1]
[2]
PASS executing wctest37
PASS compiling wctest38
[2]
[1]
PASS executing wctest38
PASS compiling wctest40
0 0
1 2
5 6
10 11
20 21

0 0
1 2
5 6
10 11
14 15
20 21

0 0
1 2
5 6
14 15
20 21
primary 14 = 3
sort 16 = -1
sort 15 = 3
0 0
14 15
5 6
range for 2-6 is 1 to 4
PASS executing wctest40
PASS compiling wctest41
[str#3]
[ NULL ]
[ NULL ]
[str#3]

**(1) the current value was baaaad **

**(1) the iterator was baaaad **

**(1) the iterator value was baaaad **
PASS executing wctest41
PASS compiling wctest42
[str#3]
[str#3]

**(1) the current value was baaaad **

**(1) the iterator was baaaad **

**(1) the iterator value was baaaad **
PASS executing wctest42
PASS compiling wctest43
[str#3]
[ NULL ]
[ NULL ]
[str#3]

**(1) the current value was baaaad **

**(1) the iterator was baaaad **

**(1) the iterator value was baaaad **
PASS executing wctest43
PASS compiling wctest44
OK, we're freeing a chunk we allocated
OK, we're freeing a chunk we allocated
OK, we're freeing a chunk we allocated
PASS executing wctest44
PASS compiling wctest45
append out of mem (supposed to happen)
OK, we're freeing a chunk we allocated
OK, we're freeing a chunk we allocated
OK, we're freeing a chunk we allocated
2append out of mem (supposed to happen)
we got caught
PASS executing wctest45
PASS compiling wctest47
There should be 6 sets of 3 (supposed to happen)
(supposed to happen 1)
(supposed to happen  2)
(supposed to happen   3)
(supposed to happen 1)
(supposed to happen  2)
(supposed to happen   3)
(supposed to happen 1)
(supposed to happen  2)
(supposed to happen   3)
(supposed to happen 1)
(supposed to happen  2)
(supposed to happen   3)
(supposed to happen 1)
(supposed to happen  2)
(supposed to happen   3)
(supposed to happen 1)
(supposed to happen  2)
(supposed to happen   3)
PASS executing wctest47
PASS compiling wctest48
Should see no output...
PASS executing wctest48
PASS compiling wctest49
dd[0].info = 0
dd[1].info = 1
dd[2].info = 2
dd[3].info = 3
dd[4].info = 4
dd[5].info = 5
dd[6].info = 6
dd[7].info = 7
dd[8].info = 8
dd[9].info = 9
dd[10].info = 10
dd[11].info = 11
dd[12].info = 12
dd[13].info = 13
dd[14].info = 14
dd[15].info = 15
dd[16].info = 16
dd[17].info = 17
dd[18].info = 18
dd[19].info = 19


PASS executing wctest49
PASS compiling wctest50
vect[0] = 0
vect[1] = 1
vect[2] = 2
vect[3] = 3
vect[4] = 4
vect[5] = 5
vect[6] = 6
vect[7] = 7
vect[8] = 8
vect[9] = 9


PASS executing wctest50
PASS compiling wctest51
test PtrSlist
test PtrDlist
test IsvSlist
test IsvDlist
PASS executing wctest51
PASS compiling wctest52
There should be no output
PASS executing wctest52
PASS compiling wctest53
stack out of mem (supposed to happen)
OK, we're freeing a chunk we allocated
OK, we're freeing a chunk we allocated
test 1 (supposed to happen)
Queue out of mem (supposed to happen)
OK, we're freeing a chunk we allocated
OK, we're freeing a chunk we allocated
test 2 (supposed to happen)
PASS executing wctest53
PASS compiling wctest54
to need not to  values values, for table hash WCValHashTable Ian Class Table Hash Container WATCOM the for Defines wchash.h 
to need not to  values values, for table hash WCValHashTable Ian Class Table Hash Container WATCOM the for Defines wchash.h 
to need not to  values values, for table hash WCValHashTable Ian Class Table Hash Container WATCOM the for Defines wchash.h 
to need not to  values values, for table hash WCValHashTable Ian Class Table Hash Container WATCOM the for Defines wchash.h 
PASS executing wctest54
PASS compiling wctest55
2 1 0 
2 1 0 
2 1 0 
2 1 0 
2 1 0 
2 1 0 
PASS executing wctest55
PASS compiling wctest56
round 1
round 2
round 3
round 4
round 5
round 6
test2: round 1
round 2
round 3
round 4
round 5
round 6
test ValSlist
test ValDlist
PASS executing wctest56
PASS compiling wctest59
--- test 1
wchash.h Defines for the WATCOM Container Hash Table Class Ian WCValHashTable hash table for values,  values to not need do 
--- test 2
wchash.h Defines for the WATCOM Container Hash Table Class Ian WCValHashTable hash table for values,  values to not need do 
--- test 3
wchash.h Defines for the WATCOM Container Hash Table Class Ian WCValHashTable hash table for values,  values to not need do 
--- test 4
wchash.h Defines for the WATCOM Container Hash Table Class Ian WCValHashTable hash table for values,  values to not need do 
--- test 5
index i==13failed (OK for i==13)
wchash.h Defines for the WATCOM Container Hash Table Class Ian WCValHashTable hash table for values,  values to not need do 
--- test 6
index i==13failed (OK for i==13)
wchash.h Defines for the WATCOM Container Hash Table Class Ian WCValHashTable hash table for values,  values to not need do 
PASS executing wctest59
PASS compiling wctest61
5 4 3 2 1 
1 2 3 4 5 
PASS executing wctest61
PASS compiling wctest62
PASS
PASS executing wctest62
PASS compiling wcvt1
length before indexing: 5
length after indexing: 5
50
0
25
0
1234567
length before indexing: 5
length after indexing: 5
50
0
25
0
1234
PASS executing wcvt1
PASS compiling wcvt2
There should be 4 supposed to happen exceptions

resize_required exception (supposed to happen)
25 0 0 0 0 9999999 100 

resize_required exception (supposed to happen)

** index range exception ** (supposed to happen)

resize_required exception (supposed to happen)

resize_required exception (supposed to happen)
0 0 0 0 0 

resize_required exception (supposed to happen)
PASS executing wcvt2
PASS compiling wcvt3
17 25 0 25 0 1234567 
25 0 25 0 1234 
PASS executing wcvt3
PASS compiling wcvt4
Found 25 (OK)
Found 50 (OK)
25 0 50 0 1234 
Found 25 (OK)
 -1 0 0 1234567 25 34143 50 

Found 50 (OK)
-1 -1 0 0 1234 25 34143 50 

PASS executing wcvt4
PASS compiling wcvt5
Should get 7 supposed to happen exceptions

empty_container exception (supposed to happen)

empty_container exception (supposed to happen)
valOrd len 1
length exception (supposed to happen)

empty_container exception (supposed to happen)
ptrOrd len 0

empty_container exception (supposed to happen)

empty_container exception (supposed to happen)
length exception (supposed to happen)
ptrsort len 5
The next test should *NOT* cause a run time error
PASS executing wcvt5
PASS compiling wcvt6
There should be 4 supposed to happen exceptions

resize_required exception (supposed to happen)

out of mem exception (supposed to happen)
Vector length5

vector_length range exception (supposed to happen)

out_of_mem exception (supposed to happen)
Vector length2
PASS executing wcvt6
PASS compiling wcvt7
Inserting one
Prepending two
Appending three
Inserting four at 1
prepending five
Inserting six
five two four one three six 
Inserting one
Prepending two
Appending three
Inserting four at 1
prepending five
Inserting six
five two four one three six 
PASS executing wcvt7
PASS compiling wcvt8
ValOrdered
25 0 50 0 1234567 
vect->removeAll 0
25 50 1234567 
removing 50
25 1234567 
vect->removeAt 10
25 
25 
PtrOrdered
25 0 50 0 1234 
removingat -354
0 50 0 1234 
removingAll 0
50 1234 
removing 50
1234 
ValSorted
-1 0 0 1234567 25 34143 50 
vect.removeAll 0
-1 1234567 25 34143 50 
removingAt 3
-1 1234567 25 50 
removing 25
removing Last
-1 1234567 
removing First
1234567 
PtrSorted
-1 -1 0 0 1234 25 34143 50 
removingat 3414
-1 -1 0 0 1234 25 34143 
removingAll 0
-1 -1 1234 25 34143 
removing -1
-1 1234 25 34143 
removingAll 25
-1 1234 34143 
removing Last
-1 
removing First

PASS executing wcvt8
PASS compiling wcvt9
Should be 15 supposed to happen exceptions
ValOrdered
index 1 (supposed to happen)
index 1b (supposed to happen)
index 1c (supposed to happen)
index 2 (supposed to happen)
index 3 (supposed to happen)
PtrOrdered
index 1 (supposed to happen)
index 1b (supposed to happen)
index 1c (supposed to happen)
index 2 (supposed to happen)
index 3 (supposed to happen)
ValSorted
PtrSorted
index 1 (supposed to happen)
index 1b (supposed to happen)
index 1c (supposed to happen)
index 2 (supposed to happen)
index 3 (supposed to happen)
PASS executing wcvt9
PASS compiling wcvt10
50 0 25 0 1234567 0 
50 0 25 0 1234 0 
25 0 50 0 1234567 0 
25 0 50 0 1234 0 
-1 0 0 0 1234567 25 34143 50 
-1 -1 0 0 0 1234 25 34143 50 
PASS executing wcvt10
PASS compiling wcvt12
there should be 6 sets of 5 supposed to happen exceptions
index 1 (supposed to happen)
index 2 (supposed to happen)
index 3 (supposed to happen)
index 4 (supposed to happen)
index 5 (supposed to happen)
index 1 (supposed to happen)
index 2 (supposed to happen)
index 3 (supposed to happen)
index 4 (supposed to happen)
index 5 (supposed to happen)
index 1 (supposed to happen)
index 2 (supposed to happen)
index 3 (supposed to happen)
index 4 (supposed to happen)
index 5 (supposed to happen)
index 1 (supposed to happen)
index 2 (supposed to happen)
index 3 (supposed to happen)
index 4 (supposed to happen)
index 5 (supposed to happen)
index 1 (supposed to happen)
index 2 (supposed to happen)
index 3 (supposed to happen)
index 4 (supposed to happen)
index 5 (supposed to happen)
index 1 (supposed to happen)
index 2 (supposed to happen)
index 3 (supposed to happen)
index 4 (supposed to happen)
index 5 (supposed to happen)
PASS executing wcvt12
PASS compiling wcvt13
Should see 1 2 3 4 5
1 (supposed to happen)
2 (supposed to happen)
3 (supposed to happen)
4 (supposed to happen)
5 (supposed to happen)
PASS executing wcvt13
PASS compiling wcvt14
test1 (supposed to happen)
test2 (supposed to happen)
test3 (supposed to happen)
test4 (supposed to happen)
test5 (supposed to happen)
test6 (supposed to happen)
PASS executing wcvt14
PASS compiling wcvt15
zero one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen 
eight eighteen eleven fifteen five four fourteen nine nineteen one seven seventeen six sixteen ten thirteen three twelve two zero 
PASS executing wcvt15
PASS compiling wcvt16
0 1 2 
0 1 2 
0 1 2 
0 1 2 
0 1 2 
0 1 2 
PASS executing wcvt16
PASS compiling wcvt19
PASS executing wcvt19
PASS compiling wcvt20
PASS executing wcvt20
PASS compiling wcvt21
0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
PASS executing wcvt21
PASS compiling wcvt22
Number of entries 1
Vector elements (should be "Negative  First  Too high"
Negative  First  Too high  
too high (supposed to happen)
-1 (supposed to happen)
PASS executing wcvt22
PASS compiling wcht1
# of elements0
wchash.h Container table do Defines the WCValHashTable to for hash for  values Ian need Hash values, not WATCOM Table Class 

Number of buckets:10
# of elements20
Clearing list

Number of buckets:10
# of elements0
# of elements0
wchash.h Container table do Defines the WCValHashTable to for hash for  values Ian need Hash values, not WATCOM Table Class 

Number of buckets:10
# of elements20
Clearing list

Number of buckets:10
# of elements0
test3
# of elements0
wchash.h Container table do Defines the WCValHashTable to for hash  values Ian need Hash values, not WATCOM Table Class 

Number of buckets:10
# of elements19
Clearing list

Number of buckets:10
# of elements0
test4
# of elements0
wchash.h Container table do Defines the WCValHashTable to for hash  values Ian need Hash values, not WATCOM Table Class 

Number of buckets:10
# of elements19
Clearing list

Number of buckets:10
# of elements0
test5
# of elements0
wchash.h:0 Container:5 table:12 do:16 Defines:1 the:3 WCValHashTable:10 to:19 for:2 hash:11  values:15 Ian:9 need:18 Hash:6 values,:14 not:17 WATCOM:4 Table:7 Class:8 
Number of buckets:10
# of elements19
Clearing list

Number of buckets:10
# of elements0
test6
# of elements0
wchash.h:0 Container:5 table:12 do:16 Defines:1 the:3 WCValHashTable:10 to:19 for:2 hash:11  values:15 Ian:9 need:18 Hash:6 values,:14 not:17 WATCOM:4 Table:7 Class:8 
Number of buckets:10
# of elements19
Clearing list

Number of buckets:10
# of elements0
PASS executing wcht1
PASS compiling wcht2
0 5 10 15 20 25 30 35 40 45 1 6 11 16 21 26 31 36 41 46 2 7 12 17 22 27 32 37 42 47 3 8 13 18 23 28 33 38 43 48 4 9 14 19 24 29 34 39 44 49 
Number of buckets:5
0 5 10 15 20 25 30 35 40 45 1 6 11 16 21 26 31 36 41 46 2 7 12 17 22 27 32 37 42 47 3 8 13 18 23 28 33 38 43 48 4 9 14 19 24 29 34 39 44 49 
Number of buckets:5
test3
0 5 10 15 20 25 30 35 40 45 1 6 11 16 21 26 31 36 41 46 2 7 12 17 22 27 32 37 42 47 3 8 13 18 23 28 33 38 43 48 4 9 14 19 24 29 34 39 44 49 
Number of buckets:5
0 5 10 15 20 25 30 35 40 45 1 6 11 16 21 26 31 36 41 46 2 7 12 17 22 27 32 37 42 47 3 8 13 18 23 28 33 38 43 48 4 9 14 19 24 29 34 39 44 49 
Number of buckets:5
PASS executing wcht2
PASS compiling wcht3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
removing 0's

0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
removing 0's

PASS executing wcht3
PASS compiling wcht4
wchash.h for Container Ian for Defines the Table Class WCValHashTable table  values Hash hash values, not need WATCOM to to 

# of elements14
wchash.h Container Ian Defines the Table Class WCValHashTable table  values Hash hash values, need 
wchash.h for Container Ian for Defines the Table Class WCValHashTable table  values Hash hash values, not need WATCOM to to 

# of elements14
wchash.h Container Ian Defines the Table Class WCValHashTable table  values Hash hash values, need 
wchash.h for Container Ian Defines the Table Class WCValHashTable table  values Hash hash values, not need WATCOM to 

# of elements16
wchash.h for Container Ian Defines the Table Class WCValHashTable table  values Hash hash values, need WATCOM 
wchash.h for Container Ian Defines the Table Class WCValHashTable table  values Hash hash values, not need WATCOM to 

# of elements16
wchash.h for Container Ian Defines the Table Class WCValHashTable table  values Hash hash values, need WATCOM 

wchash.h:0 for:13 Container:5 Ian:9 Defines:1 the:3 Table:7 Class:8 WCValHashTable:10 table:12  values:15 Hash:6 hash:11 values,:14 not:17 need:18 WATCOM:4 to:19 
# of elements16
wchash.h:0 for:13 Container:5 Ian:9 Defines:1 the:3 Table:7 Class:8 WCValHashTable:10 table:12  values:15 Hash:6 hash:11 values,:14 need:18 WATCOM:4 
wchash.h:0 for:13 Container:5 Ian:9 Defines:1 the:3 Table:7 Class:8 WCValHashTable:10 table:12  values:15 Hash:6 hash:11 values,:14 not:17 need:18 WATCOM:4 to:19 
# of elements16
wchash.h:0 for:13 Container:5 Ian:9 Defines:1 the:3 Table:7 Class:8 WCValHashTable:10 table:12  values:15 Hash:6 hash:11 values,:14 need:18 WATCOM:4 PASS executing wcht4
PASS compiling wcht5
wchash.h for Container Hash Ian hash for values, not need Defines the WATCOM Table Class WCValHashTable table  values do to 
for hash for values, Table not Defines WATCOM  values to wchash.h Container Hash Ian need the Class WCValHashTable table do 
for hash for values, Defines WATCOM  values to wchash.h Container Hash Ian need Table not the Class WCValHashTable table do 
to Hash Ian need table values, Table Defines WATCOM not Class do for hash for  values wchash.h Container the WCValHashTable 
for for Defines  values Hash need table Class the WCValHashTable values, hash to WATCOM Ian wchash.h Container Table not do 
values, WATCOM wchash.h Container Hash the WCValHashTable for for hash Table  values need table Ian do Defines to not Class 
to Hash need Ian Table not do Class for for hash  values wchash.h Container table values, WATCOM Defines the WCValHashTable 
wchash.h Defines for the WATCOM Container Hash Table Class Ian WCValHashTable hash table for values,  values do not need to 
!! Note: did not find 13, 2 should alterningly occur !!
Did not find13
wchash.h for Container Hash Ian hash for values, not need Defines the WATCOM Table Class WCValHashTable table  values do to 
Did not find13
wchash.h Container  values Ian need table do Hash values, not Defines the WCValHashTable to for hash for WATCOM Table Class 
Did not find13
for for  values need Hash not hash wchash.h Container Ian table Defines the WCValHashTable Table Class values, do to WATCOM 
Did not find13
Hash Defines need Ian Table to hash the do  values WATCOM Container values, for for wchash.h Class not table WCValHashTable 
Did not find13
hash Table WATCOM for for the do need Defines to Ian wchash.h not  values Class table Hash Container values, WCValHashTable 
Did not find13
Class WATCOM Defines Ian to do need Hash Container WCValHashTable hash Table values, the table for for not wchash.h  values 
wchash.h for Container Hash Ian hash values, not need Defines the WATCOM Table Class WCValHashTable table  values do to 
for hash values, Table not Defines WATCOM  values to wchash.h Container Hash Ian need the Class WCValHashTable table do 
for hash values, Defines WATCOM  values to wchash.h Container Hash Ian need Table not the Class WCValHashTable table do 
to Hash Ian need table values, Table Defines WATCOM not Class do for hash  values wchash.h Container the WCValHashTable 
wchash.h for Container Hash Ian hash values, not need Defines the WATCOM Table Class WCValHashTable table  values do to 
for hash values, Table not Defines WATCOM  values to wchash.h Container Hash Ian need the Class WCValHashTable table do 
for hash values, Defines WATCOM  values to wchash.h Container Hash Ian need Table not the Class WCValHashTable table do 
to Hash Ian need table values, Table Defines WATCOM not Class do for hash  values wchash.h Container the WCValHashTable 

wchash.h:0 for:2 Container:5 Hash:6 Ian:9 hash:11 values,:14 not:17 need:18 Defines:1 the:3 WATCOM:4 Table:7 Class:8 WCValHashTable:10 table:12  values:15 do:16 to:19 

for:2 hash:11 values,:14 Table:7 not:17 Defines:1 WATCOM:4  values:15 to:19 wchash.h:0 Container:5 Hash:6 Ian:9 need:18 the:3 Class:8 WCValHashTable:10 table:12 do:16 
for:2 hash:11 values,:14 Defines:1 WATCOM:4  values:15 to:19 wchash.h:0 Container:5 Hash:6 Ian:9 need:18 Table:7 not:17 the:3 Class:8 WCValHashTable:10 table:12 do:16 
to:19 Hash:6 Ian:9 need:18 table:12 values,:14 Table:7 Defines:1 WATCOM:4 not:17 Class:8 do:16 for:2 hash:11  values:15 wchash.h:0 Container:5 the:3 WCValHashTable:10 
wchash.h:0 for:2 Container:5 Hash:6 Ian:9 hash:11 values,:14 not:17 need:18 Defines:1 the:3 WATCOM:4 Table:7 Class:8 WCValHashTable:10 table:12  values:15 do:16 to:19 

for:2 hash:11 values,:14 Table:7 not:17 Defines:1 WATCOM:4  values:15 to:19 wchash.h:0 Container:5 Hash:6 Ian:9 need:18 the:3 Class:8 WCValHashTable:10 table:12 do:16 
for:2 hash:11 values,:14 Defines:1 WATCOM:4  values:15 to:19 wchash.h:0 Container:5 Hash:6 Ian:9 need:18 Table:7 not:17 the:3 Class:8 WCValHashTable:10 table:12 do:16 
to:19 Hash:6 Ian:9 need:18 table:12 values,:14 Table:7 Defines:1 WATCOM:4 not:17 Class:8 do:16 for:2 hash:11  values:15 wchash.h:0 Container:5 the:3 WCValHashTable:10 PASS executing wcht5
PASS compiling wcht6
wchash.h Container  values Ian table do need Defines the Hash WCValHashTable values, not to for WATCOM Table Class hash for 

 2 X hash:
wchash.h Container  values wchash.h Container  values Ian table do need Ian table do need Defines the Hash WCValHashTable values, not to Defines the Hash WCValHashTable values, not to for WATCOM Table Class hash for for WATCOM Table Class hash for 

 hash2 = hash:
wchash.h Container  values Ian table do need Defines the Hash WCValHashTable values, not to for WATCOM Table Class hash for 
wchash.h Container  values Ian table do need Defines the Hash WCValHashTable values, not to for WATCOM Table Class hash for 

 2 X hash:
wchash.h Container  values wchash.h Container  values Ian table do need Ian table do need Defines the Hash WCValHashTable values, not to Defines the Hash WCValHashTable values, not to for WATCOM Table Class hash for for WATCOM Table Class hash for 

 hash2 = hash:
wchash.h Container  values Ian table do need Defines the Hash WCValHashTable values, not to for WATCOM Table Class hash for 
wchash.h Container  values Ian table do need Defines the Hash WCValHashTable values, not to for WATCOM Table Class hash 
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
Should not be here!!
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)

 hash removed:


 hash2 = hash:
wchash.h Container  values Ian table do need Defines the Hash WCValHashTable values, not to for WATCOM Table Class hash 
wchash.h Container  values Ian table do need Defines the Hash WCValHashTable values, not to for WATCOM Table Class hash 
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
Should not be here!!
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)

 hash removed:


 hash2 = hash:
wchash.h Container  values Ian table do need Defines the Hash WCValHashTable values, not to for WATCOM Table Class hash 

Val Hash
wchash.h:0 Container:5  values:15 Ian:9 table:12 do:16 need:18 Defines:1 the:3 Hash:6 WCValHashTable:10 values,:14 not:17 to:19 for:13 WATCOM:4 Table:7 Class:8 hash:11 (supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
Should not be here!!
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
for not at index 2

 hash removed:
test5 bad index (supposed to happen)

 hash2 = hash:
wchash.h:0 Container:5  values:15 Ian:9 table:12 do:16 need:18 Defines:1 the:3 Hash:6 WCValHashTable:10 values,:14 not:17 to:19 for:13 WATCOM:4 Table:7 Class:8 hash:11 
Ptr Hash
wchash.h:0 Container:5  values:15 Ian:9 table:12 do:16 need:18 Defines:1 the:3 Hash:6 WCValHashTable:10 values,:14 not:17 to:19 for:13 WATCOM:4 Table:7 Class:8 hash:11 (supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
Should not be here!!
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
for not at index 2

 hash removed:
test6 bad index (supposed to happen)

 hash2 = hash:
wchash.h:0 Container:5  values:15 Ian:9 table:12 do:16 need:18 Defines:1 the:3 Hash:6 WCValHashTable:10 values,:14 not:17 to:19 for:13 WATCOM:4 Table:7 Class:8 hash:11 PASS executing wcht6
PASS compiling wcht7
1 (supposed to happen)
2 (supposed to happen)
PASS executing wcht7
PASS compiling wcht9
test1 insert (supposed to happen)
Num Entries: 20
Num Entries: 17
ItemSize: 0

number of deallocs: 37
test2 insert (supposed to happen)
Num Entries: 20
Num Entries: 17
ItemSize: 0

number of deallocs: 37
test3 insert (supposed to happen)
Num Entries: 18
Num Entries: 17
ItemSize: 0

number of deallocs: 35
test4 insert (supposed to happen)
Num Entries: 18
Num Entries: 17
ItemSize: 0

number of deallocs: 35
test5 insert (supposed to happen)
Num Entries: 18
Num Entries: 17
ItemSize: 0

number of deallocs: 35
test6 insert (supposed to happen)
Num Entries: 18
Num Entries: 17
ItemSize: 0

number of deallocs: 35
PASS executing wcht9
PASS compiling wcht10
Table wchash.h Defines table do Container WCValHashTable  values for for hash to Class WATCOM values, the not need Hash Ian 
Table wchash.h Defines table do Container WCValHashTable  values for for hash to Class WATCOM values, the not need Hash Ian 
Table wchash.h Defines table do Container WCValHashTable  values for hash to Class WATCOM values, the not need Hash Ian 
Table wchash.h Defines table do Container WCValHashTable  values for hash to Class WATCOM values, the not need Hash Ian PASS executing wcht10
PASS compiling wcht11
test1
++1 (supposed to happen)
current1 (supposed to happen)
container1 (supposed to happen)
()1 (supposed to happen)
current2 (supposed to happen)
++2 (supposed to happen)
()2 (supposed to happen)
Table wchash.h Defines table do Container WCValHashTable  values for for hash to Class WATCOM values, the not need Hash Ian 
current3 (supposed to happen)
Table wchash.h Defines table do Container WCValHashTable  values for for hash to Class WATCOM values, the not need Hash Ian 
Table wchash.h Defines table do Container WCValHashTable  values for for hash to Class WATCOM values, the not need Hash Ian 
test2
++1 (supposed to happen)
current1 (supposed to happen)
container1 (supposed to happen)
()1 (supposed to happen)
current2 (supposed to happen)
++2 (supposed to happen)
()2 (supposed to happen)
Table wchash.h Defines table do Container WCValHashTable  values for for hash to Class WATCOM values, the not need Hash Ian 
current3 (supposed to happen)
Table wchash.h Defines table do Container WCValHashTable  values for for hash to Class WATCOM values, the not need Hash Ian 
Table wchash.h Defines table do Container WCValHashTable  values for for hash to Class WATCOM values, the not need Hash Ian 
test3
++1 (supposed to happen)
current1 (supposed to happen)
container1 (supposed to happen)
()1 (supposed to happen)
current2 (supposed to happen)
++2 (supposed to happen)
()2 (supposed to happen)
Table wchash.h Defines table do Container WCValHashTable  values for hash to Class WATCOM values, the not need Hash Ian 
current3 (supposed to happen)
Table wchash.h Defines table do Container WCValHashTable  values for hash to Class WATCOM values, the not need Hash Ian 
Table wchash.h Defines table do Container WCValHashTable  values for hash to Class WATCOM values, the not need Hash Ian 
PASS executing wcht11
PASS compiling wcht12
wchash.h for Container Ian for Defines the Table Class WCValHashTable table  values Hash hash values, not need WATCOM do to 

wchash.h for Container Ian Defines the Table Class WCValHashTable table  values Hash hash values, not need WATCOM do to 

wchash.h:wchash.h for:for Container:Container Ian:Ian Defines:Defines the:the Table:Table Class:Class WCValHashTable:WCValHashTable table:table  values: values Hash:Hash hash:hash values,:values, not:not need:need WATCOM:WATCOM do:do to:to 

PASS executing wcht12
PASS compiling wcht13
test1 (supposed to happen)
test2 (supposed to happen)
test3 (supposed to happen)
test4 (supposed to happen)
test5 (supposed to happen)
test6 (supposed to happen)
PASS executing wcht13
PASS compiling wcht14

test4
++1 (supposed to happen)
current1 (supposed to happen)
container1 (supposed to happen)
()1 (supposed to happen)
current2 (supposed to happen)
++2 (supposed to happen)
()2 (supposed to happen)
Table wchash.h Defines table do Container WCValHashTable  values for hash to Class WATCOM values, the not need Hash Ian 
current3 (supposed to happen)
Table wchash.h Defines table do Container WCValHashTable  values for hash to Class WATCOM values, the not need Hash Ian 
Table wchash.h Defines table do Container WCValHashTable  values for hash to Class WATCOM values, the not need Hash Ian 
test5
++1 (supposed to happen)
key 1 (supposed to happen)
value 1 (supposed to happen)
container1 (supposed to happen)
()1 (supposed to happen)
key 2 (supposed to happen)
value 2 (supposed to happen)
++2 (supposed to happen)
()2 (supposed to happen)
Table:7 wchash.h:0 Defines:1 table:12 do:16 Container:5 WCValHashTable:10  values:15 for:2 hash:11 to:19 Class:8 WATCOM:4 values,:14 the:3 not:17 need:18 Hash:6 Ian:9 
key 3 (supposed to happen)
value 3 (supposed to happen)
Table:7 wchash.h:0 Defines:1 table:12 do:16 Container:5 WCValHashTable:10  values:15 for:2 hash:11 to:19 Class:8 WATCOM:4 values,:14 the:3 not:17 need:18 Hash:6 Ian:9 key 4 (supposed to happen)
value 4 (supposed to happen)

Table:7 wchash.h:0 Defines:1 table:12 do:16 Container:5 WCValHashTable:10  values:15 for:2 hash:11 to:19 Class:8 WATCOM:4 values,:14 the:3 not:17 need:18 Hash:6 Ian:9 
test6
++1 (supposed to happen)
key 1 (supposed to happen)
value 1 (supposed to happen)
container1 (supposed to happen)
()1 (supposed to happen)
key 2 (supposed to happen)
value 2 (supposed to happen)
++2 (supposed to happen)
()2 (supposed to happen)
Table:7 wchash.h:0 Defines:1 table:12 do:16 Container:5 WCValHashTable:10  values:15 for:2 hash:11 to:19 Class:8 WATCOM:4 values,:14 the:3 not:17 need:18 Hash:6 Ian:9 
key 3 (supposed to happen)
value 3 (supposed to happen)
Table:7 wchash.h:0 Defines:1 table:12 do:16 Container:5 WCValHashTable:10  values:15 for:2 hash:11 to:19 Class:8 WATCOM:4 values,:14 the:3 not:17 need:18 Hash:6 Ian:9 key 4 (supposed to happen)
value 4 (supposed to happen)

Table:7 wchash.h:0 Defines:1 table:12 do:16 Container:5 WCValHashTable:10  values:15 for:2 hash:11 to:19 Class:8 WATCOM:4 values,:14 the:3 not:17 need:18 Hash:6 Ian:9 
PASS executing wcht14
PASS compiling wcht16
PASS
PASS executing wcht16
PASS compiling wcht17
5
PASS executing wcht17
PASS compiling wcht18
5 10 1 6 2 7 3 8 4 9 
5 10 1 6 2 7 3 8 4 9 
5 10 1 6 2 7 3 8 4 9 
5 10 1 6 2 7 3 8 4 9 
5:5 10:10 1:1 6:6 2:2 7:7 3:3 8:8 4:4 9:9 
5:5 10:10 1:1 6:6 2:2 7:7 3:3 8:8 4:4 9:9 
PASS executing wcht18
PASS compiling wcst1
No output is good...
No output is good...
No output is good...
No output is good...
No output is good...
No output is good...
PASS executing wcst1
PASS compiling wcst2
# of elements0
 values Class Container Defines Hash Ian Table WATCOM WCValHashTable do for for hash need not table the to values, wchash.h 
# of elements20
Clearing list
# of elements0
# of elements0
 values Class Container Defines Hash Ian Table WATCOM WCValHashTable do for for hash need not table the to values, wchash.h 
# of elements20
Clearing list
# of elements0
test3
# of elements0
 values Class Container Defines Hash Ian Table WATCOM WCValHashTable do for hash need not table the to values, wchash.h 
# of elements19
Clearing list
# of elements0
test4
# of elements0
 values Class Container Defines Hash Ian Table WATCOM WCValHashTable do for hash need not table the to values, wchash.h 
# of elements19
Clearing list
# of elements0
test5
# of elements0
 values:15 Class:8 Container:5 Defines:1 Hash:6 Ian:9 Table:7 WATCOM:4 WCValHashTable:10 do:16 for:2 hash:11 need:18 not:17 table:12 the:3 to:19 values,:14 wchash.h:0 
# of elements19
Clearing list
# of elements0
test6
# of elements0
 values:15 Class:8 Container:5 Defines:1 Hash:6 Ian:9 Table:7 WATCOM:4 WCValHashTable:10 do:16 for:2 hash:11 need:18 not:17 table:12 the:3 to:19 values,:14 wchash.h:0 
# of elements19
Clearing list
# of elements0
PASS executing wcst2
PASS compiling wcst3
-1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
removing 1 and 0's
-1 

-1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
removing 1 and 0's
-1 PASS executing wcst3
PASS compiling wcst4
 values Class Container Defines Ian Table WATCOM WCValskip_listTable for for need not skip_list skip_list table the to to values, wcskip_list.h 
# of elements14
 values Class Container Defines Ian Table WCValskip_listTable need skip_list skip_list table the values, wcskip_list.h 


 values Class Container Defines Ian Table WATCOM WCValskip_listTable for for need not skip_list skip_list table the to to values, wcskip_list.h 
# of elements14
 values Class Container Defines Ian Table WCValskip_listTable need skip_list skip_list table the values, wcskip_list.h 

 values Class Container Defines Ian Table WATCOM WCValskip_listTable for need not skip_list table the to values, wcskip_list.h 
# of elements15
 values Class Container Defines Ian Table WATCOM WCValskip_listTable for need skip_list table the values, wcskip_list.h 

 values Class Container Defines Ian Table WATCOM WCValskip_listTable for need not skip_list table the to values, wcskip_list.h 
# of elements15
 values Class Container Defines Ian Table WATCOM WCValskip_listTable for need skip_list table the values, wcskip_list.h 


 values:15 Class:8 Container:5 Defines:1 Ian:9 Table:7 WATCOM:4 WCValskip_listTable:10 for:13 need:18 not:17 skip_list:11 table:12 the:3 to:19 values,:14 wcskip_list.h:0 
# of elements15
 values:15 Class:8 Container:5 Defines:1 Ian:9 Table:7 WATCOM:4 WCValskip_listTable:10 for:13 need:18 skip_list:11 table:12 the:3 values,:14 wcskip_list.h:0 


 values:15 Class:8 Container:5 Defines:1 Ian:9 Table:7 WATCOM:4 WCValskip_listTable:10 for:13 need:18 not:17 skip_list:11 table:12 the:3 to:19 values,:14 wcskip_list.h:0 
# of elements15
 values:15 Class:8 Container:5 Defines:1 Ian:9 Table:7 WATCOM:4 WCValskip_listTable:10 for:13 need:18 skip_list:11 table:12 the:3 values,:14 wcskip_list.h:0 

PASS executing wcst4
PASS compiling wcst5
 values Class Container Defines Ian Skip_list Table WATCOM WCValskip_listTable do for for need not skip_list table the to values, wcskip_list.h 
 2 X skip_list:
 values  values Class Class Container Container Defines Defines Ian Ian Skip_list Skip_list Table Table WATCOM WATCOM WCValskip_listTable WCValskip_listTable do do for for for for need need not not skip_list skip_list table table the the to to values, values, wcskip_list.h wcskip_list.h 
 skip_list2 = skip_list:
 values Class Container Defines Ian Skip_list Table WATCOM WCValskip_listTable do for for need not skip_list table the to values, wcskip_list.h 

 values Class Container Defines Ian Skip_list Table WATCOM WCValskip_listTable do for for need not skip_list table the to values, wcskip_list.h 
 2 X skip_list:
 values  values Class Class Container Container Defines Defines Ian Ian Skip_list Skip_list Table Table WATCOM WATCOM WCValskip_listTable WCValskip_listTable do do for for for for need need not not skip_list skip_list table table the the to to values, values, wcskip_list.h wcskip_list.h 
 skip_list2 = skip_list:
 values Class Container Defines Ian Skip_list Table WATCOM WCValskip_listTable do for for need not skip_list table the to values, wcskip_list.h 

 values Class Container Defines Ian Skip_list Table WATCOM WCValskip_listTable do for need not skip_list table the to values, wcskip_list.h (supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
Should not be here!!
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)

 skip_list removed:

 skip_list2 = skip_list:
 values Class Container Defines Ian Skip_list Table WATCOM WCValskip_listTable do for need not skip_list table the to values, wcskip_list.h 

 values Class Container Defines Ian Skip_list Table WATCOM WCValskip_listTable do for need not skip_list table the to values, wcskip_list.h (supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
Should not be here!!
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)

 skip_list removed:

 skip_list2 = skip_list:
 values Class Container Defines Ian Skip_list Table WATCOM WCValskip_listTable do for need not skip_list table the to values, wcskip_list.h 


Val skip_list
 values:15 Class:8 Container:5 Defines:1 Ian:9 Skip_list:11 Table:7 WATCOM:4 WCValskip_listTable:10 do:16 for:13 need:18 not:17 skip_list:6 table:12 the:3 to:19 values,:14 wcskip_list.h:0 (supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
Should not be here!!
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
for not at index 2

 skip_list removed:
test5 bad index (supposed to happen)

 skip_list2 = skip_list:
 values:15 Class:8 Container:5 Defines:1 Ian:9 Skip_list:11 Table:7 WATCOM:4 WCValskip_listTable:10 do:16 for:13 need:18 not:17 skip_list:6 table:12 the:3 to:19 values,:14 wcskip_list.h:0 


Ptr skip_list
 values:15 Class:8 Container:5 Defines:1 Ian:9 Skip_list:11 Table:7 WATCOM:4 WCValskip_listTable:10 do:16 for:13 need:18 not:17 skip_list:6 table:12 the:3 to:19 values,:14 wcskip_list.h:0 (supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
Should not be here!!
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
(supposed to happen)
for not at index 2

 skip_list removed:
test6 bad index (supposed to happen)

 skip_list2 = skip_list:
 values:15 Class:8 Container:5 Defines:1 Ian:9 Skip_list:11 Table:7 WATCOM:4 WCValskip_listTable:10 do:16 for:13 need:18 not:17 skip_list:6 table:12 the:3 to:19 values,:14 wcskip_list.h:0 

PASS executing wcst5
PASS compiling wcst6
test1 insert (supposed to happen)
Num Entries: 20
Num Entries: 17
ItemSize (1 PTR): 12
ItemSize (2 PTR): 16
number of deallocs: 37

test2 insert (supposed to happen)
Num Entries: 20
Num Entries: 17
ItemSize (1 PTR): 8
ItemSize (2 PTR): 12
test3 insert (supposed to happen)
Num Entries: 17
Num Entries: 16
ItemSize (1 PTR): 12
ItemSize (2 PTR): 16
number of deallocs: 33

test4 insert (supposed to happen)
Num Entries: 17
Num Entries: 16
ItemSize (1 PTR): 8
ItemSize (2 PTR): 12
number of deallocs: 33

test5 insert (supposed to happen)
Num Entries: 17
Num Entries: 16
ItemSize (1Ptr): 12
ItemSize (2Ptrs): 16
number of deallocs: 33

test6 insert (supposed to happen)
Num Entries: 17
Num Entries: 16
ItemSize (1Ptr): 12
ItemSize (2Ptrs): 16
number of deallocs: 33

PASS executing wcst6
PASS compiling wcst7
 values Class Container Defines Ian Skip_list Table WATCOM WCValskip_listTable do for for need not skip_list table the to values, wcskip_list.h 

 values Class Container Defines Ian Skip_list Table WATCOM WCValskip_listTable do for need not skip_list table the to values, wcskip_list.h 

 values: values Class:Class Container:Container Defines:Defines Ian:Ian Skip_list:Skip_list Table:Table WATCOM:WATCOM WCValskip_listTable:WCValskip_listTable do:do for:for need:need not:not skip_list:skip_list table:table the:the to:to values,:values, wcskip_list.h:wcskip_list.h 

PASS executing wcst7
PASS compiling wcst8
1 (supposed to happen)
PASS executing wcst8
PASS compiling wcst10
test1 (supposed to happen)
test2 (supposed to happen)
test3 (supposed to happen)
test4 (supposed to happen)
test5 (supposed to happen)
test6 (supposed to happen)
PASS executing wcst10
PASS compiling wcst11
test1
++1 (supposed to happen)
current1 (supposed to happen)
container1 (supposed to happen)
()1 (supposed to happen)
current2 (supposed to happen)
++2 (supposed to happen)
()2 (supposed to happen)
 values Class Container Defines Ian Skip_list Table WATCOM WCValSkipList do for for need not skip_list table the to values, wcskip_list.h 
current3 (supposed to happen)
 values Class Container Defines Ian Skip_list Table WATCOM WCValSkipList do for for need not skip_list table the to values, wcskip_list.h 
 values Class Container Defines Ian Skip_list Table WATCOM WCValSkipList do for for need not skip_list table the to values, wcskip_list.h 
test2
++1 (supposed to happen)
current1 (supposed to happen)
container1 (supposed to happen)
()1 (supposed to happen)
current2 (supposed to happen)
++2 (supposed to happen)
()2 (supposed to happen)
 values Class Container Defines Ian Skip_list Table WATCOM WCValSkipList do for for need not skip_list table the to values, wcskip_list.h 
current3 (supposed to happen)
 values Class Container Defines Ian Skip_list Table WATCOM WCValSkipList do for for need not skip_list table the to values, wcskip_list.h 
 values Class Container Defines Ian Skip_list Table WATCOM WCValSkipList do for for need not skip_list table the to values, wcskip_list.h 
test3
++1 (supposed to happen)
current1 (supposed to happen)
container1 (supposed to happen)
()1 (supposed to happen)
current2 (supposed to happen)
++2 (supposed to happen)
()2 (supposed to happen)
 values Class Container Defines Ian Skip_list Table WATCOM WCValSkipList do for need not skip_list table the to values, wcskip_list.h 
current3 (supposed to happen)
 values Class Container Defines Ian Skip_list Table WATCOM WCValSkipList do for need not skip_list table the to values, wcskip_list.h 
 values Class Container Defines Ian Skip_list Table WATCOM WCValSkipList do for need not skip_list table the to values, wcskip_list.h 
test4
++1 (supposed to happen)
current1 (supposed to happen)
container1 (supposed to happen)
()1 (supposed to happen)
current2 (supposed to happen)
++2 (supposed to happen)
()2 (supposed to happen)
 values Class Container Defines Ian Skip_list Table WATCOM WCValSkipList do for need not skip_list table the to values, wcskip_list.h 
current3 (supposed to happen)
 values Class Container Defines Ian Skip_list Table WATCOM WCValSkipList do for need not skip_list table the to values, wcskip_list.h 
 values Class Container Defines Ian Skip_list Table WATCOM WCValSkipList do for need not skip_list table the to values, wcskip_list.h 
test5
++1 (supposed to happen)
key 1 (supposed to happen)
value 1 (supposed to happen)
container1 (supposed to happen)
()1 (supposed to happen)
key 2 (supposed to happen)
value 2 (supposed to happen)
++2 (supposed to happen)
()2 (supposed to happen)
 values:15 Class:8 Container:5 Defines:1 Ian:9 Skip_list:11 Table:7 WATCOM:4 WCValSkipList:10 do:16 for:2 need:18 not:17 skip_list:6 table:12 the:3 to:19 values,:14 wcskip_list.h:0 
key 3 (supposed to happen)
value 3 (supposed to happen)
 values:15 Class:8 Container:5 Defines:1 Ian:9 Skip_list:11 Table:7 WATCOM:4 WCValSkipList:10 do:16 for:2 need:18 not:17 skip_list:6 table:12 the:3 to:19 values,:14 wcskip_list.h:0 key 4 (supposed to happen)
value 4 (supposed to happen)

 values:15 Class:8 Container:5 Defines:1 Ian:9 Skip_list:11 Table:7 WATCOM:4 WCValSkipList:10 do:16 for:2 need:18 not:17 skip_list:6 table:12 the:3 to:19 values,:14 wcskip_list.h:0 
test6
++1 (supposed to happen)
key 1 (supposed to happen)
value 1 (supposed to happen)
container1 (supposed to happen)
()1 (supposed to happen)
key 2 (supposed to happen)
value 2 (supposed to happen)
++2 (supposed to happen)
()2 (supposed to happen)
 values:15 Class:8 Container:5 Defines:1 Ian:9 Skip_list:11 Table:7 WATCOM:4 WCValSkipList:10 do:16 for:2 need:18 not:17 skip_list:6 table:12 the:3 to:19 values,:14 wcskip_list.h:0 
key 3 (supposed to happen)
value 3 (supposed to happen)
 values:15 Class:8 Container:5 Defines:1 Ian:9 Skip_list:11 Table:7 WATCOM:4 WCValSkipList:10 do:16 for:2 need:18 not:17 skip_list:6 table:12 the:3 to:19 values,:14 wcskip_list.h:0 key 4 (supposed to happen)
value 4 (supposed to happen)

 values:15 Class:8 Container:5 Defines:1 Ian:9 Skip_list:11 Table:7 WATCOM:4 WCValSkipList:10 do:16 for:2 need:18 not:17 skip_list:6 table:12 the:3 to:19 values,:14 wcskip_list.h:0 
PASS executing wcst11
PASS compiling wcst12
PASS
PASS executing wcst12
PASS compiling wcst13
1
PASS executing wcst13
PASS compiling wcst14
PASS
PASS executing wcst14
PASS compiling wcst15
1
PASS executing wcst15
PASS compiling wcst16
1 2 3 4 5 6 7 8 9 10 
1 2 3 4 5 6 7 8 9 10 
1 2 3 4 5 6 7 8 9 10 
1 2 3 4 5 6 7 8 9 10 
1:1 2:2 3:3 4:4 5:5 6:6 7:7 8:8 9:9 10:10 
1:1 2:2 3:3 4:4 5:5 6:6 7:7 8:8 9:9 10:10 
PASS executing wcst16
PASS compiling wcvdli
List elements in ascending order:
1
5
20
25
List elements in descending order
25
20
5
1
PASS executing wcvdli
PASS compiling alloctor
61505 20485 
28657 31381 32289 54437 18129 49717 38401 34629 
55217 18389 6113 2021 657 43893 58305 63109 
42865 36117 55713 62245 42577 36021 55681 40389 
57137 19029 50017 38501 12817 26101 30529 32005 
32497 32661 54561 61861 42449 14133 48385 37957 
34481 11477 3809 1253 401 117 43713 58245 
63089 21013 28833 53285 17745 49589 16513 27333 
52785 61269 64097 21349 28945 31477 32321 10757 
3569 1173 44065 36517 34001 11317 25601 8517 
46513 37333 34273 33253 32913 54645 61889 20613 
50545 38677 34721 11557 25681 30389 10113 47045 
15665 5205 45409 36965 12305 4085 1345 22277 
7409 2453 801 43941 58321 41269 35585 11845 
25777 30421 31969 32485 32657 10869 47297 15749 
5233 23573 7841 2597 849 43957 36481 33989 
11313 47445 59489 19813 28433 9461 3137 1029 
44017 36501 55841 18597 49873 38453 12801 47941 
37809 56277 62433 64485 65169 65397 65473 43653 
58225 41237 13729 26405 8785 24757 30081 53701 
39729 56917 40801 35429 11793 47605 37697 12549 
47857 37781 12577 26021 8657 2869 22785 51269 
17073 49365 60129 63717 64913 21621 50881 38789 
12913 26133 52385 17445 49489 38325 56449 40645 
35377 33621 54881 18277 27921 52981 39489 56837 
18929 6293 2081 677 209 53 


61505 20485 
28657 31381 32289 54437 18129 49717 38401 34629 
55217 18389 6113 2021 657 43893 58305 63109 
42865 36117 55713 62245 42577 36021 55681 40389 
57137 19029 50017 38501 12817 26101 30529 32005 
32497 32661 54561 61861 42449 14133 48385 37957 
34481 11477 3809 1253 401 117 43713 58245 
63089 21013 28833 53285 17745 49589 16513 27333 
52785 61269 64097 21349 28945 31477 32321 10757 
3569 1173 44065 36517 34001 11317 25601 8517 
46513 37333 34273 33253 32913 54645 61889 20613 
50545 38677 34721 11557 25681 30389 10113 47045 
15665 5205 45409 36965 12305 4085 1345 22277 
7409 2453 801 43941 58321 41269 35585 11845 
25777 30421 31969 32485 32657 10869 47297 15749 
5233 23573 7841 2597 849 43957 36481 33989 
11313 47445 59489 19813 28433 9461 3137 1029 
44017 36501 55841 18597 49873 38453 12801 47941 
37809 56277 62433 64485 65169 65397 65473 43653 
58225 41237 13729 26405 8785 24757 30081 53701 
39729 56917 40801 35429 11793 47605 37697 12549 
47857 37781 12577 26021 8657 2869 22785 51269 
17073 49365 60129 63717 64913 21621 50881 38789 
12913 26133 52385 17445 49489 38325 56449 40645 
35377 33621 54881 18277 27921 52981 39489 56837 
18929 6293 2081 677 209 53 


53 117 
209 401 657 677 801 849 1029 1173 
1253 1345 2021 2081 2453 2597 2869 3137 
3569 3809 4085 5205 5233 6113 6293 7409 
7841 8517 8657 8785 9461 10113 10757 10869 
11313 11317 11477 11557 11793 11845 12305 12549 
12577 12801 12817 12913 13729 14133 15665 15749 
16513 17073 17445 17745 18129 18277 18389 18597 
18929 19029 19813 20485 20613 21013 21349 21621 
22277 22785 23573 24757 25601 25681 25777 26021 
26101 26133 26405 27333 27921 28433 28657 28833 
28945 30081 30389 30421 30529 31381 31477 31969 
32005 32289 32321 32485 32497 32657 32661 32913 
33253 33621 33989 34001 34273 34481 34629 34721 
35377 35429 35585 36021 36117 36481 36501 36517 
36965 37333 37697 37781 37809 37957 38325 38401 
38453 38501 38677 38789 39489 39729 40389 40645 
40801 41237 41269 42449 42577 42865 43653 43713 
43893 43941 43957 44017 44065 45409 46513 47045 
47297 47445 47605 47857 47941 48385 49365 49489 
49589 49717 49873 50017 50545 50881 51269 52385 
52785 52981 53285 53701 54437 54561 54645 54881 
55217 55681 55713 55841 56277 56449 56837 56917 
57137 58225 58245 58305 58321 59489 60129 61269 
61505 61861 61889 62245 62433 63089 63109 63717 
64097 64485 64913 65169 65397 65473 


PASS executing alloctor
