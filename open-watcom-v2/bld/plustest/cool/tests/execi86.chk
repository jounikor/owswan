PASS compiling test_as1
-----------------------------------------------------------------------------
Start Testing CoolAssociation:
-----------------------------------------------------------------------------
 Test 001:                        CoolAssociation<int,double> a0 -->   PASSED
 Test 002:                                           a0.length() -->   PASSED
 Test 003:                                         a0.capacity() -->   PASSED
 Test 004:                     CoolAssociation<int,double> a1(5) -->   PASSED
 Test 005:                                           a1.length() -->   PASSED
 Test 006:                                         a1.capacity() -->   PASSED
 Test 007:                    CoolAssociation<int,double> a2(10) -->   PASSED
 Test 008:                                         a2.capacity() -->   PASSED
 Test 009:                                         a2.put(1,1.0) -->   PASSED
 Test 010:                                         a2.put(2,2.0) -->   PASSED
 Test 011:                                         a2.put(3,3.0) -->   PASSED
 Test 012:                                         a2.put(4,4.0) -->   PASSED
 Test 013:                                           a2.length() -->   PASSED
 Test 014:                                         a2.capacity() -->   PASSED
 Test 015:                   CoolAssociation<int,double> a3 = a2 -->   PASSED
 Test 016:                                           a3.length() -->   PASSED
 Test 017:                                         a3.capacity() -->   PASSED
 Test 018:                                              a2 == a3 -->   PASSED
 Test 019:                                              a3 != a1 -->   PASSED
 Test 020:                                               a3 = a1 -->   PASSED
 Test 021:                                            a2.find(3) -->   PASSED
 Test 022:                                            a2.value() -->   PASSED
 Test 023:                                             a2.prev() -->   PASSED
 Test 024:                                              a2.key() -->   PASSED
 Test 025:                                             a2.next() -->   PASSED
 Test 026:                                      a2.get(1, value) -->   PASSED
 Test 027:                                    a2.get_key(d, key) -->   PASSED
 Test 028:                                           a2.length() -->   PASSED
 Test 029:                                           a2.put(5,e) -->   PASSED
 Test 030:                                            a2.reset() -->   PASSED
 Test 031:                                            a2.find(2) -->   PASSED
 Test 032:                                           a2.remove() -->   PASSED
 Test 033:                                          a2.remove(4) -->   PASSED
 Test 034:                                         a1.resize(10) -->   PASSED
 Test 035:                                      a0.set_length(2) -->   PASSED
 Test 036:                                   a3.set_growth_ratio -->   PASSED
 Test 037:                         CoolAssociation<int,char*> a0 -->   PASSED
 Test 038:                                           a0.length() -->   PASSED
 Test 039:                                         a0.capacity() -->   PASSED
 Test 040:                      CoolAssociation<int,char*> a1(5) -->   PASSED
 Test 041:                                           a1.length() -->   PASSED
 Test 042:                                         a1.capacity() -->   PASSED
 Test 043:               a1.set_value_compare(&my_compare_charP) -->   PASSED
 Test 044:                     CoolAssociation<int,char*> a2(10) -->   PASSED
 Test 045:                                         a2.capacity() -->   PASSED
 Test 046:                                       a2.put(1,"AAA") -->   PASSED
 Test 047:                                       a2.put(2,"BBB") -->   PASSED
 Test 048:                                       a2.put(3,"CCC") -->   PASSED
 Test 049:                                       a2.put(4,"DDD") -->   PASSED
 Test 050:                                           a2.length() -->   PASSED
 Test 051:                                         a2.capacity() -->   PASSED
 Test 052:                    CoolAssociation<int,char*> a3 = a2 -->   PASSED
 Test 053:                                           a3.length() -->   PASSED
 Test 054:                                         a3.capacity() -->   PASSED
 Test 055:                                              a2 == a3 -->   PASSED
 Test 056:                                              a3 != a1 -->   PASSED
 Test 057:                                               a3 = a1 -->   PASSED
 Test 058:                                            a2.find(3) -->   PASSED
 Test 059:                                            a2.value() -->   PASSED
 Test 060:                                             a2.prev() -->   PASSED
 Test 061:                                              a2.key() -->   PASSED
 Test 062:                                             a2.next() -->   PASSED
 Test 063:                                      a2.get(1, value) -->   PASSED
 Test 064:                                a2.get_key("DDD", key) -->   PASSED
 Test 065:                                           a2.length() -->   PASSED
 Test 066:                                       a2.put(5,"EEE") -->   PASSED
 Test 067:                                            a2.reset() -->   PASSED
 Test 068:                                            a2.find(2) -->   PASSED
 Test 069:                                           a2.remove() -->   PASSED
 Test 070:                                          a2.remove(4) -->   PASSED
 Test 071:                                          a2.remove(4) -->   PASSED
 Test 072:                                         a1.resize(10) -->   PASSED
 Test 073:                                      a0.set_length(2) -->   PASSED
 Test 074:                                   a3.set_growth_ratio -->   PASSED
 Test 075:                    CoolAssociation<int,CoolString> a0 -->   PASSED
 Test 076:                                           a0.length() -->   PASSED
 Test 077:                                         a0.capacity() -->   PASSED
 Test 078:                 CoolAssociation<int,CoolString> a1(5) -->   PASSED
 Test 079:                                           a1.length() -->   PASSED
 Test 080:                                         a1.capacity() -->   PASSED
 Test 081:                CoolAssociation<int,CoolString> a2(10) -->   PASSED
 Test 082:                                         a2.capacity() -->   PASSED
 Test 083:                           a2.put(1,CoolString("AAA")) -->   PASSED
 Test 084:                           a2.put(2,CoolString("BBB")) -->   PASSED
 Test 085:                           a2.put(3,CoolString("CCC")) -->   PASSED
 Test 086:                           a2.put(4,CoolString("DDD")) -->   PASSED
 Test 087:                                           a2.length() -->   PASSED
 Test 088:                                         a2.capacity() -->   PASSED
 Test 089:               CoolAssociation<int,CoolString> a3 = a2 -->   PASSED
 Test 090:                                           a3.length() -->   PASSED
 Test 091:                                         a3.capacity() -->   PASSED
 Test 092:                                              a2 == a3 -->   PASSED
 Test 093:                                              a3 != a1 -->   PASSED
 Test 094:                                               a3 = a1 -->   PASSED
 Test 095:                                            a2.find(3) -->   PASSED
 Test 096:                                            a2.value() -->   PASSED
 Test 097:                                             a2.prev() -->   PASSED
 Test 098:                                              a2.key() -->   PASSED
 Test 099:                                             a2.next() -->   PASSED
 Test 100:                                      a2.get(1, value) -->   PASSED
 Test 101:                                    a2.get_key(d, key) -->   PASSED
 Test 102:                                           a2.length() -->   PASSED
 Test 103:                                           a2.put(5,e) -->   PASSED
 Test 104:                                            a2.reset() -->   PASSED
 Test 105:                                            a2.find(2) -->   PASSED
 Test 106:                                           a2.remove() -->   PASSED
 Test 107:                                          a2.remove(4) -->   PASSED
 Test 108:                                         a1.resize(10) -->   PASSED
 Test 109:                                      a0.set_length(2) -->   PASSED
 Test 110:                                   a3.set_growth_ratio -->   PASSED
[ [1 AAA]  [5 EEE]  [3 CCC]  ]
-----------------------------------------------------------------------------
CoolAssociation Test Summary: 110 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_as1
PASS compiling test_ass
 Empty 
[ [1 (1)]  ]
[ [1 (1)]  [2 (1 2)]  ]
[ [1 (1)]  [2 (1 2)]  [3 (1 2 3)]  ]
[ [1 (1)]  [2 (1 2)]  [3 (1 2 3)]  [4 (1 2 3)]  ]

CoolBase_List ():


CoolBase_List (1):
Node0:
 Data = 1
 Ref count = 3


CoolBase_List (1 2):
Node0:
 Data = 1
 Ref count = 3
Node1:
 Data = 2
 Ref count = 1


CoolBase_List (1 2 3):
Node0:
 Data = 1
 Ref count = 4
Node1:
 Data = 2
 Ref count = 1
Node2:
 Data = 3
 Ref count = 1


CoolBase_List (1 2 3):
Node0:
 Data = 1
 Ref count = 4
Node1:
 Data = 2
 Ref count = 1
Node2:
 Data = 3
 Ref count = 1

PASS executing test_ass
PASS compiling test_avl
-----------------------------------------------------------------------------
Start Testing CoolAVL_Tree:
-----------------------------------------------------------------------------
 Test 001:                                             b0.put(8) -->   PASSED
 Test 002:                                          b0.count() 1 -->   PASSED
 Test 003:                                     b0.tree_depth() 0 -->   PASSED
 Test 004:                                             b0.put(4) -->   PASSED
 Test 005:                                            b0.count() -->   PASSED
 Test 006:                                       b0.tree_depth() -->   PASSED
 Test 007:                                            b0.put(10) -->   PASSED
 Test 008:                                            b0.count() -->   PASSED
 Test 009:                                       b0.tree_depth() -->   PASSED
 Test 010:                                             b0.put(2) -->   PASSED
 Test 011:                                            b0.count() -->   PASSED
 Test 012:                                       b0.tree_depth() -->   PASSED
 Test 013:                                             b0.put(6) -->   PASSED
 Test 014:                                            b0.count() -->   PASSED
 Test 015:                                       b0.tree_depth() -->   PASSED
 Test 016:                                             b0.put(5) -->   PASSED
 Test 017:                                            b0.count() -->   PASSED
 Test 018:                                       b0.tree_depth() -->   PASSED
 Test 019:                                  b0.get_root()->get() -->   PASSED
 Test 020:                                            b0.find(4) -->   PASSED
 Test 021:             (b0.node() == b0.get_root()->get_ltree()) -->   PASSED
 Test 022:                                            b0.find(8) -->   PASSED
 Test 023:             (b0.node() == b0.get_root()->get_rtree()) -->   PASSED
 Test 024:                                            b0.find(5) -->   PASSED
 Test 025:           (n0 == (b0.find(4),b0.node()->get_rtree())) -->   PASSED
 Test 026:                                             b0.put(9) -->   PASSED
 Test 027:                                            b0.count() -->   PASSED
 Test 028:                                       b0.tree_depth() -->   PASSED
 Test 029:                                            b0.find(9) -->   PASSED
 Test 030:             (b0.node() == b0.get_root()->get_rtree()) -->   PASSED
 Test 031:                     (b0.find(8),b0.node()->is_leaf()) -->   PASSED
 Test 032:                    (b0.find(10),b0.node()->is_leaf()) -->   PASSED
 Test 033:                                             b0.put(1) -->   PASSED
 Test 034:                                            b0.count() -->   PASSED
 Test 035:                                       b0.tree_depth() -->   PASSED
 Test 036:                                             b0.put(0) -->   PASSED
 Test 037:                                            b0.count() -->   PASSED
 Test 038:                                       b0.tree_depth() -->   PASSED
 Test 039:                                            b0.find(1) -->   PASSED
 Test 040:           (n0 == (b0.find(4),b0.node()->get_ltree())) -->   PASSED
 Test 041:                     (b0.find(0),b0.node()->is_leaf()) -->   PASSED
 Test 042:                     (b0.find(2),b0.node()->is_leaf()) -->   PASSED
 Test 043:                                            b0.put(11) -->   PASSED
 Test 044:                                            b0.count() -->   PASSED
 Test 045:                                       b0.tree_depth() -->   PASSED
 Test 046:                                            b0.put(12) -->   PASSED
 Test 047:                                            b0.count() -->   PASSED
 Test 048:                                       b0.tree_depth() -->   PASSED
 Test 049:                                           b0.find(11) -->   PASSED
 Test 050:           (n0 == (b0.find(9),b0.node()->get_rtree())) -->   PASSED
 Test 051:                     (b0.find(8),b0.node()->is_leaf()) -->   PASSED
 Test 052:                    (b0.find(10),b0.node()->is_leaf()) -->   PASSED
 Test 053:                                         b0.remove(12) -->   PASSED
 Test 054:                                            b0.count() -->   PASSED
 Test 055:                                       b0.tree_depth() -->   PASSED
 Test 056:                                          b0.remove(8) -->   PASSED
 Test 057:                                            b0.count() -->   PASSED
 Test 058:                                       b0.tree_depth() -->   PASSED
 Test 059:                                           b0.find(10) -->   PASSED
 Test 060:                  (n0 == (b0.get_root()->get_rtree())) -->   PASSED
 Test 061:                     (b0.find(9),b0.node()->is_leaf()) -->   PASSED
 Test 062:                    (b0.find(11),b0.node()->is_leaf()) -->   PASSED
 Test 063:                                          b0.remove(1) -->   PASSED
 Test 064:                                            b0.count() -->   PASSED
 Test 065:                                       b0.tree_depth() -->   PASSED
 Test 066:                                            b0.find(0) -->   PASSED
 Test 067:           (n0 == (b0.find(4),b0.node()->get_ltree())) -->   PASSED
 Test 068:                                            b0.find(2) -->   PASSED
 Test 069:           (n0 == (b0.find(0),b0.node()->get_rtree())) -->   PASSED
 Test 070:                                          b0.remove(5) -->   PASSED
 Test 071:                                            b0.count() -->   PASSED
 Test 072:                                       b0.tree_depth() -->   PASSED
 Test 073:                                            b0.find(2) -->   PASSED
 Test 074:           (n0 == (b0.find(6),b0.node()->get_ltree())) -->   PASSED
 Test 075:                                            b0.find(4) -->   PASSED
 Test 076:           (n0 == (b0.find(2),b0.node()->get_rtree())) -->   PASSED
 Test 077:                                          b0.remove(9) -->   PASSED
 Test 078:                                            b0.count() -->   PASSED
 Test 079:                                       b0.tree_depth() -->   PASSED
 Test 080:                                          b0.remove(6) -->   PASSED
 Test 081:                                            b0.count() -->   PASSED
 Test 082:                                       b0.tree_depth() -->   PASSED
 Test 083:                                  b0.get_root()->get() -->   PASSED
 Test 084:                                            b0.find(2) -->   PASSED
 Test 085:           (n0 == (b0.find(4),b0.node()->get_ltree())) -->   PASSED
 Test 086:                                           b0.find(10) -->   PASSED
 Test 087:           (n0 == (b0.find(4),b0.node()->get_rtree())) -->   PASSED
 Test 088:                                          b0.remove(4) -->   PASSED
 Test 089:                                            b0.count() -->   PASSED
 Test 090:                                       b0.tree_depth() -->   PASSED
 Test 091:                                  b0.get_root()->get() -->   PASSED
 Test 092:                                            b0.find(0) -->   PASSED
 Test 093:           (n0 == (b0.find(2),b0.node()->get_ltree())) -->   PASSED
 Test 094:                                         b0.remove(11) -->   PASSED
 Test 095:                                            b0.count() -->   PASSED
 Test 096:                                       b0.tree_depth() -->   PASSED
 Test 097:                                          b0.remove(2) -->   PASSED
 Test 098:                                            b0.count() -->   PASSED
 Test 099:                                       b0.tree_depth() -->   PASSED
 Test 100:                                  b0.get_root()->get() -->   PASSED
 Test 101:                                           b0.find(10) -->   PASSED
 Test 102:           (n0 == (b0.find(0),b0.node()->get_rtree())) -->   PASSED
 Test 103:                                          b0.remove(0) -->   PASSED
 Test 104:                                          b0.count() 1 -->   PASSED
 Test 105:                                     b0.tree_depth() 0 -->   PASSED
 Test 106:                                  b0.get_root()->get() -->   PASSED
 Test 107:                                         b0.remove(10) -->   PASSED
 Test 108:                                          b0.count() 1 -->   PASSED
 Test 109:                                     b0.tree_depth() 0 -->   PASSED
 Test 110:                                           bt0.count() -->   PASSED
 Test 111:                                      bt0.tree_depth() -->   PASSED
 Test 112:                                          avl0.count() -->   PASSED
 Test 113:                                     avl0.tree_depth() -->   PASSED
 Test 114:                               avl0.put(9),avl0.put(8) -->   PASSED
 Test 115:                                     avl0.tree_depth() -->   PASSED
 Test 116:                                  avl0=bt0,avl.count() -->   PASSED
 Test 117:                                     avl0.tree_depth() -->   PASSED
 Test 118:                               avl0.put(9),avl0.put(8) -->   PASSED
 Test 119:                                     avl0.tree_depth() -->   PASSED
 Test 120:                               avl0.clear(),bo.count() -->   PASSED
 Test 121:                                  CoolAVL_Tree<int> b0 -->   PASSED
 Test 122:                                             b0.put(1) -->   PASSED
 Test 123:                                            b0.count() -->   PASSED
 Test 124:                                            b0.find(1) -->   PASSED
 Test 125:                                            b0.value() -->   PASSED
 Test 126:                                           b0.remove() -->   PASSED
 Test 127:                                            b0.count() -->   PASSED
 Test 128:                                             b0.put(4) -->   PASSED
 Test 129:                                            b0.count() -->   PASSED
 Test 130:                                       b0.tree_depth() -->   PASSED
 Test 131:                                             b0.put(8) -->   PASSED
 Test 132:                                            b0.count() -->   PASSED
 Test 133:                                       b0.tree_depth() -->   PASSED
 Test 134:                                             b0.put(3) -->   PASSED
 Test 135:                                            b0.count() -->   PASSED
 Test 136:                                       b0.tree_depth() -->   PASSED
 Test 137:                                             b0.put(1) -->   PASSED
 Test 138:                                            b0.count() -->   PASSED
 Test 139:                                       b0.tree_depth() -->   PASSED
 Test 140:                                             b0.put(2) -->   PASSED
 Test 141:                                            b0.count() -->   PASSED
 Test 142:                                       b0.tree_depth() -->   PASSED
 Test 143:                                             b0.put(6) -->   PASSED
 Test 144:                                            b0.count() -->   PASSED
 Test 145:                                            b0.find(2) -->   PASSED
 Test 146:                                            b0.value() -->   PASSED
 Test 147:                                            b0.reset() -->   PASSED
 Test 148:                                             b0.next() -->   PASSED
 Test 149:                                            b0.value() -->   PASSED
 Test 150:                                             b0.next() -->   PASSED
 Test 151:                                            b0.value() -->   PASSED
 Test 152:                                             b0.next() -->   PASSED
 Test 153:                                            b0.value() -->   PASSED
 Test 154:                                             b0.next() -->   PASSED
 Test 155:                                            b0.value() -->   PASSED
 Test 156:                                             b0.prev() -->   PASSED
 Test 157:                                            b0.value() -->   PASSED
 Test 158:                                             b0.prev() -->   PASSED
 Test 159:                                            b0.value() -->   PASSED
 Test 160:                                             b0.next() -->   PASSED
 Test 161:                                            b0.value() -->   PASSED
 Test 162:                                             b0.next() -->   PASSED
 Test 163:                                            b0.value() -->   PASSED
 Test 164:                                             b0.next() -->   PASSED
 Test 165:                                            b0.value() -->   PASSED
 Test 166:                                             b0.next() -->   PASSED
 Test 167:                                            b0.value() -->   PASSED
 Test 168:                                            b0.count() -->   PASSED
 Test 169:                                           b0.find(99) -->   PASSED
 Test 170:                              CoolAVL_Tree<int> b1(b0) -->   PASSED
 Test 171:                                          b1.remove(3) -->   PASSED
 Test 172:                                            b1.count() -->   PASSED
 Test 173:                                            b1.find(3) -->   PASSED
 Test 174:                                          b0.remove(3) -->   PASSED
 Test 175:                                            b0.count() -->   PASSED
 Test 176:                                            b0.find(3) -->   PASSED
 Test 177:                                            b0.put(-3) -->   PASSED
 Test 178:                                       b0.tree_depth() -->   PASSED
 Test 179:                                            b0.count() -->   PASSED
 Test 180:                                            b0.put(18) -->   PASSED
 Test 181:                                       b0.tree_depth() -->   PASSED
 Test 182:                                            b0.count() -->   PASSED
 Test 183:                                            b0.put(13) -->   PASSED
 Test 184:                                       b0.tree_depth() -->   PASSED
 Test 185:                                            b0.count() -->   PASSED
 Test 186:                                             b0.put(1) -->   PASSED
 Test 187:                                       b0.tree_depth() -->   PASSED
 Test 188:                                            b0.count() -->   PASSED
 Test 189:                                             b0.put(5) -->   PASSED
 Test 190:                                       b0.tree_depth() -->   PASSED
 Test 191:                                            b0.count() -->   PASSED
 Test 192:                                            b0.put(17) -->   PASSED
 Test 193:                                       b0.tree_depth() -->   PASSED
 Test 194:                                            b0.count() -->   PASSED
 Test 195:                                             b0.put(3) -->   PASSED
 Test 196:                                       b0.tree_depth() -->   PASSED
 Test 197:                                            b0.count() -->   PASSED
 Test 198:                                            b0.find(3) -->   PASSED
 Test 199:                                            b0.find(8) -->   PASSED
 Test 200:                                            b0.find(9) -->   PASSED
 Test 201:                                           b0.find(-3) -->   PASSED
 Test 202:                                           b0.find(17) -->   PASSED
 Test 203:                                                 b1=b0 -->   PASSED
 Test 204:                                       b1.tree_depth() -->   PASSED
 Test 205:                                            b1.find(3) -->   PASSED
 Test 206:                                            b1.find(8) -->   PASSED
 Test 207:                                            b1.find(9) -->   PASSED
 Test 208:                                           b1.find(-3) -->   PASSED
 Test 209:                                           b1.find(17) -->   PASSED
 Test 210:                                            b1.put(-4) -->   PASSED
 Test 211:                                       b1.tree_depth() -->   PASSED
 Test 212:                                            b1.count() -->   PASSED
 Test 213:                                            b1.put(-5) -->   PASSED
 Test 214:                                       b1.tree_depth() -->   PASSED
 Test 215:                                            b1.count() -->   PASSED
 Test 216:                                            b1.put(-6) -->   PASSED
 Test 217:                                       b1.tree_depth() -->   PASSED
 Test 218:                                            b1.count() -->   PASSED
 Test 219:                                            b1.put(27) -->   PASSED
 Test 220:                                       b1.tree_depth() -->   PASSED
 Test 221:                                            b1.count() -->   PASSED
 Test 222:                                             b1.put(7) -->   PASSED
 Test 223:                                       b1.tree_depth() -->   PASSED
 Test 224:                                            b1.count() -->   PASSED
 Test 225:                                CoolAVL_Tree<char*> s0 -->   PASSED
 Test 226:                              s0.set_compare(&my_comp) -->   PASSED
 Test 227:                                         s0.put("aaa") -->   PASSED
 Test 228:                                            s0.count() -->   PASSED
 Test 229:                                        s0.find("aaa") -->   PASSED
 Test 230:                                            s0.value() -->   PASSED
 Test 231:                                           s0.remove() -->   PASSED
 Test 232:                                            s0.count() -->   PASSED
 Test 233:                                         s0.put("ddd") -->   PASSED
 Test 234:                                            s0.count() -->   PASSED
 Test 235:                                       s0.tree_depth() -->   PASSED
 Test 236:                                         s0.put("hhh") -->   PASSED
 Test 237:                                            s0.count() -->   PASSED
 Test 238:                                       s0.tree_depth() -->   PASSED
 Test 239:                                         s0.put("ccc") -->   PASSED
 Test 240:                                            s0.count() -->   PASSED
 Test 241:                                       s0.tree_depth() -->   PASSED
 Test 242:                                         s0.put("aaa") -->   PASSED
 Test 243:                                            s0.count() -->   PASSED
 Test 244:                                       s0.tree_depth() -->   PASSED
 Test 245:                                         s0.put("bbb") -->   PASSED
 Test 246:                                            s0.count() -->   PASSED
 Test 247:                                       s0.tree_depth() -->   PASSED
 Test 248:                                         s0.put("fff") -->   PASSED
 Test 249:                                            s0.count() -->   PASSED
 Test 250:                                        s0.find("bbb") -->   PASSED
 Test 251:                                            s0.value() -->   PASSED
 Test 252:                                            s0.reset() -->   PASSED
 Test 253:                                             s0.next() -->   PASSED
 Test 254:                                            s0.value() -->   PASSED
 Test 255:                                             s0.next() -->   PASSED
 Test 256:                                            s0.value() -->   PASSED
 Test 257:                                             s0.next() -->   PASSED
 Test 258:                                            s0.value() -->   PASSED
 Test 259:                                             s0.next() -->   PASSED
 Test 260:                                            s0.value() -->   PASSED
 Test 261:                                             s0.prev() -->   PASSED
 Test 262:                                            s0.value() -->   PASSED
 Test 263:                                             s0.prev() -->   PASSED
 Test 264:                                            s0.value() -->   PASSED
 Test 265:                                             s0.next() -->   PASSED
 Test 266:                                            s0.value() -->   PASSED
 Test 267:                                             s0.next() -->   PASSED
 Test 268:                                            s0.value() -->   PASSED
 Test 269:                                             s0.next() -->   PASSED
 Test 270:                                            s0.value() -->   PASSED
 Test 271:                                             s0.next() -->   PASSED
 Test 272:                                            s0.value() -->   PASSED
 Test 273:                                            s0.count() -->   PASSED
 Test 274:                                       s0.find("ABCD") -->   PASSED
 Test 275:                            CoolAVL_Tree<char*> s1(s0) -->   PASSED
 Test 276:                                      s1.remove("ccc") -->   PASSED
 Test 277:                                            s1.count() -->   PASSED
 Test 278:                                        s1.find("ccc") -->   PASSED
 Test 279:                                      s0.remove("ccc") -->   PASSED
 Test 280:                                            s0.count() -->   PASSED
 Test 281:                                        s0.find("ccc") -->   PASSED
 Test 282:                                         s0.put("XXX") -->   PASSED
 Test 283:                                       s0.tree_depth() -->   PASSED
 Test 284:                                            s0.count() -->   PASSED
 Test 285:                                         s0.put("rrr") -->   PASSED
 Test 286:                                       s0.tree_depth() -->   PASSED
 Test 287:                                            s0.count() -->   PASSED
 Test 288:                                         s0.put("mmm") -->   PASSED
 Test 289:                                       s0.tree_depth() -->   PASSED
 Test 290:                                            s0.count() -->   PASSED
 Test 291:                                         s0.put("aaa") -->   PASSED
 Test 292:                                       s0.tree_depth() -->   PASSED
 Test 293:                                            s0.count() -->   PASSED
 Test 294:                                         s0.put("eee") -->   PASSED
 Test 295:                                       s0.tree_depth() -->   PASSED
 Test 296:                                            s0.count() -->   PASSED
 Test 297:                                         s0.put("qqq") -->   PASSED
 Test 298:                                       s0.tree_depth() -->   PASSED
 Test 299:                                            s0.count() -->   PASSED
 Test 300:                                         s0.put("ccc") -->   PASSED
 Test 301:                                       s0.tree_depth() -->   PASSED
 Test 302:                                            s0.count() -->   PASSED
 Test 303:                                        s0.find("ccc") -->   PASSED
 Test 304:                                        s0.find("hhh") -->   PASSED
 Test 305:                                        s0.find("iii") -->   PASSED
 Test 306:                                        s0.find("XXX") -->   PASSED
 Test 307:                                        s0.find("qqq") -->   PASSED
 Test 308:                                                 s1=s0 -->   PASSED
 Test 309:                                       s1.tree_depth() -->   PASSED
 Test 310:                                        s1.find("ccc") -->   PASSED
 Test 311:                                        s1.find("hhh") -->   PASSED
 Test 312:                                        s1.find("iii") -->   PASSED
 Test 313:                                        s1.find("XXX") -->   PASSED
 Test 314:                                        s1.find("qqq") -->   PASSED
 Test 315:                                         s1.put("WWW") -->   PASSED
 Test 316:                                       s1.tree_depth() -->   PASSED
 Test 317:                                            s1.count() -->   PASSED
 Test 318:                                         s1.put("VVV") -->   PASSED
 Test 319:                                       s1.tree_depth() -->   PASSED
 Test 320:                                            s1.count() -->   PASSED
 Test 321:                                         s1.put("UUU") -->   PASSED
 Test 322:                                       s1.tree_depth() -->   PASSED
 Test 323:                                            s1.count() -->   PASSED
 Test 324:                                         s1.put("zzz") -->   PASSED
 Test 325:                                       s1.tree_depth() -->   PASSED
 Test 326:                                            s1.count() -->   PASSED
 Test 327:                                         s1.put("ggg") -->   PASSED
 Test 328:                                       s1.tree_depth() -->   PASSED
 Test 329:                                            s1.count() -->   PASSED
 Test 330:                           CoolAVL_Tree<CoolString> s0 -->   PASSED
 Test 331:                            s0.set_compare(&my_strcmp) -->   PASSED
 Test 332:                             s0.put(CoolString("aaa")) -->   PASSED
 Test 333:                                            s0.count() -->   PASSED
 Test 334:                            s0.find(CoolString("aaa")) -->   PASSED
 Test 335:                                            s0.value() -->   PASSED
 Test 336:                                           s0.remove() -->   PASSED
 Test 337:                                            s0.count() -->   PASSED
 Test 338:                             s0.put(CoolString("ddd")) -->   PASSED
 Test 339:                                            s0.count() -->   PASSED
 Test 340:                                       s0.tree_depth() -->   PASSED
 Test 341:                             s0.put(CoolString("hhh")) -->   PASSED
 Test 342:                                            s0.count() -->   PASSED
 Test 343:                                       s0.tree_depth() -->   PASSED
 Test 344:                             s0.put(CoolString("ccc")) -->   PASSED
 Test 345:                                            s0.count() -->   PASSED
 Test 346:                                       s0.tree_depth() -->   PASSED
 Test 347:                             s0.put(CoolString("aaa")) -->   PASSED
 Test 348:                                            s0.count() -->   PASSED
 Test 349:                                       s0.tree_depth() -->   PASSED
 Test 350:                             s0.put(CoolString("bbb")) -->   PASSED
 Test 351:                                            s0.count() -->   PASSED
 Test 352:                                       s0.tree_depth() -->   PASSED
 Test 353:                             s0.put(CoolString("fff")) -->   PASSED
 Test 354:                                            s0.count() -->   PASSED
 Test 355:                            s0.find(CoolString("bbb")) -->   PASSED
 Test 356:                                            s0.value() -->   PASSED
 Test 357:                                            s0.reset() -->   PASSED
 Test 358:                                             s0.next() -->   PASSED
 Test 359:                                            s0.value() -->   PASSED
 Test 360:                                             s0.next() -->   PASSED
 Test 361:                                            s0.value() -->   PASSED
 Test 362:                                             s0.next() -->   PASSED
 Test 363:                                            s0.value() -->   PASSED
 Test 364:                                             s0.next() -->   PASSED
 Test 365:                                            s0.value() -->   PASSED
 Test 366:                                             s0.prev() -->   PASSED
 Test 367:                                            s0.value() -->   PASSED
 Test 368:                                             s0.prev() -->   PASSED
 Test 369:                                            s0.value() -->   PASSED
 Test 370:                                             s0.next() -->   PASSED
 Test 371:                                            s0.value() -->   PASSED
 Test 372:                                             s0.next() -->   PASSED
 Test 373:                                            s0.value() -->   PASSED
 Test 374:                                             s0.next() -->   PASSED
 Test 375:                                            s0.value() -->   PASSED
 Test 376:                                             s0.next() -->   PASSED
 Test 377:                                            s0.value() -->   PASSED
 Test 378:                                            s0.count() -->   PASSED
 Test 379:                           s0.find(CoolString("ABCD")) -->   PASSED
 Test 380:                       CoolAVL_Tree<CoolString> s1(s0) -->   PASSED
 Test 381:                          s1.remove(CoolString("ccc")) -->   PASSED
 Test 382:                                            s1.count() -->   PASSED
 Test 383:                            s1.find(CoolString("ccc")) -->   PASSED
 Test 384:                          s0.remove(CoolString("ccc")) -->   PASSED
 Test 385:                                            s0.count() -->   PASSED
 Test 386:                            s0.find(CoolString("ccc")) -->   PASSED
 Test 387:                             s0.put(CoolString("XXX")) -->   PASSED
 Test 388:                                       s0.tree_depth() -->   PASSED
 Test 389:                                            s0.count() -->   PASSED
 Test 390:                             s0.put(CoolString("rrr")) -->   PASSED
 Test 391:                                       s0.tree_depth() -->   PASSED
 Test 392:                                            s0.count() -->   PASSED
 Test 393:                             s0.put(CoolString("mmm")) -->   PASSED
 Test 394:                                       s0.tree_depth() -->   PASSED
 Test 395:                                            s0.count() -->   PASSED
 Test 396:                             s0.put(CoolString("aaa")) -->   PASSED
 Test 397:                                       s0.tree_depth() -->   PASSED
 Test 398:                                            s0.count() -->   PASSED
 Test 399:                             s0.put(CoolString("eee")) -->   PASSED
 Test 400:                                       s0.tree_depth() -->   PASSED
 Test 401:                                            s0.count() -->   PASSED
 Test 402:                             s0.put(CoolString("qqq")) -->   PASSED
 Test 403:                                       s0.tree_depth() -->   PASSED
 Test 404:                                            s0.count() -->   PASSED
 Test 405:                             s0.put(CoolString("ccc")) -->   PASSED
 Test 406:                                       s0.tree_depth() -->   PASSED
 Test 407:                                            s0.count() -->   PASSED
 Test 408:                            s0.find(CoolString("ccc")) -->   PASSED
 Test 409:                            s0.find(CoolString("hhh")) -->   PASSED
 Test 410:                            s0.find(CoolString("iii")) -->   PASSED
 Test 411:                            s0.find(CoolString("XXX")) -->   PASSED
 Test 412:                            s0.find(CoolString("qqq")) -->   PASSED
 Test 413:                                                 s1=s0 -->   PASSED
 Test 414:                                       s1.tree_depth() -->   PASSED
 Test 415:                            s1.find(CoolString("ccc")) -->   PASSED
 Test 416:                            s1.find(CoolString("hhh")) -->   PASSED
 Test 417:                            s1.find(CoolString("iii")) -->   PASSED
 Test 418:                            s1.find(CoolString("XXX")) -->   PASSED
 Test 419:                            s1.find(CoolString("qqq")) -->   PASSED
 Test 420:                             s1.put(CoolString("WWW")) -->   PASSED
 Test 421:                                       s1.tree_depth() -->   PASSED
 Test 422:                                            s1.count() -->   PASSED
 Test 423:                             s1.put(CoolString("VVV")) -->   PASSED
 Test 424:                                       s1.tree_depth() -->   PASSED
 Test 425:                                            s1.count() -->   PASSED
 Test 426:                             s1.put(CoolString("UUU")) -->   PASSED
 Test 427:                                       s1.tree_depth() -->   PASSED
 Test 428:                                            s1.count() -->   PASSED
 Test 429:                             s1.put(CoolString("zzz")) -->   PASSED
 Test 430:                                       s1.tree_depth() -->   PASSED
 Test 431:                                            s1.count() -->   PASSED
 Test 432:                             s1.put(CoolString("ggg")) -->   PASSED
 Test 433:                                       s1.tree_depth() -->   PASSED
 Test 434:                                            s1.count() -->   PASSED
 Test 435:                                              b0 == b1 -->   PASSED
 Test 436:                                              b0 != b1 -->   PASSED
-----------------------------------------------------------------------------
CoolAVL_Tree Test Summary: 436 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_avl
PASS compiling test_big
-----------------------------------------------------------------------------
Start Testing CoolBignum:
-----------------------------------------------------------------------------

CoolBignum constructor tests:
long constructor:
 Test 001:                               CoolBignum b2(long(0)); -->   PASSED
 Test 002:                               CoolBignum b3(long(1)); -->   PASSED
 Test 003:                              CoolBignum b4(long(-1)); -->   PASSED
 Test 004:                        CoolBignum b5(long(MAXSHORT)); -->   PASSED
 Test 005:                       CoolBignum b6(long(-MAXSHORT)); -->   PASSED
 Test 006:                          CoolBignum b7(long(MAXINT)); -->   PASSED
 Test 007:                         CoolBignum b8(long(-MAXINT)); -->   PASSED
 Test 008:                         CoolBignum b9(long(MAXLONG)); -->   PASSED
 Test 009:                       CoolBignum b10(long(-MAXLONG)); -->   PASSED
 Test 010:                     CoolBignum b10l(long(0xF00000l)); -->   PASSED
double constructor:
 Test 011:                                  CoolBignum b11(0.0); -->   PASSED
 Test 012:                                  CoolBignum b12(1.0); -->   PASSED
 Test 013:                                 CoolBignum b13(-1.0); -->   PASSED
 Test 014:                            CoolBignum b14(MAXDOUBLE); -->   PASSED
 Test 015:                           CoolBignum b15(-MAXDOUBLE); -->   PASSED
 Test 016:                            CoolBignum b16(1234567.0); -->   PASSED
 Test 017:                           CoolBignum b17(-1234567.0); -->   PASSED
 Test 018:                         CoolBignum b18(1234567000.0); -->   PASSED
 Test 019:                        CoolBignum b19(-1234567000.0); -->   PASSED
 Test 020:                     CoolBignum b20(double(0xF00000)); -->   PASSED
char* constructor:
 Test 021:                                 CoolBignum b21("-1"); -->   PASSED
 Test 022:                                 CoolBignum b22("+1"); -->   PASSED
 Test 023:                                  CoolBignum b23("1"); -->   PASSED
 Test 024:                                CoolBignum b24("123"); -->   PASSED
 Test 025:                             CoolBignum b25("123e12"); -->   PASSED
 Test 026:                            CoolBignum b26("123e120"); -->   PASSED
 Test 027:                                CoolBignum b27("0x0"); -->   PASSED
 Test 028:                                CoolBignum b28("0x9"); -->   PASSED
 Test 029:                                CoolBignum b29("0xa"); -->   PASSED
 Test 030:                                CoolBignum b30("0xf"); -->   PASSED
 Test 031:                                CoolBignum b31("0xA"); -->   PASSED
 Test 032:                                CoolBignum b32("0xF"); -->   PASSED
 Test 033:                              CoolBignum b33("0x1aF"); -->   PASSED
 Test 034:                                  CoolBignum b34("0"); -->   PASSED
 Test 035:                                 CoolBignum b35("00"); -->   PASSED
 Test 036:                          CoolBignum b36("012334567"); -->   PASSED
 Test 037:                                  CoolBignum b37("9"); -->   PASSED
 Test 038:                                CoolBignum b38("011"); -->   PASSED
 Test 039:                                CoolBignum b40("0XF"); -->   PASSED
CoolBignum& constructor:
 Test 040:                       CoolBignum b50(CoolBignum(0l)); -->   PASSED
 Test 041:                     CoolBignum b51(CoolBignum(100l)); -->   PASSED

Conversion operator tests:
short conversion operator:
 Test 042:                            short(CoolBignum(0l)) == 0 -->   PASSED
 Test 043:         short(CoolBignum(long(MAXSHORT))) == MAXSHORT -->   PASSED
 Test 044:       short(CoolBignum(long(-MAXSHORT))) == -MAXSHORT -->   PASSED
 Test 045: short(CoolBignum(long(-MAXSHORT+1))) == short(-MAXSHORT+1) -->   PASSED
int conversion operator:
 Test 046:                              int(CoolBignum(0l)) == 0 -->   PASSED
 Test 047:               int(CoolBignum(long(MAXINT))) == MAXINT -->   PASSED
 Test 048:             int(CoolBignum(long(-MAXINT))) == -MAXINT -->   PASSED
 Test 049: CoolBignum b(long(MAXINT); b++; b=-b; ++b; (int)b == int(-MAXINT) -->   PASSED
long conversion operator:
 Test 050:                             long(CoolBignum(0l)) == 0 -->   PASSED
 Test 051:                  long(CoolBignum(MAXLONG)) == MAXLONG -->   PASSED
 Test 052:                long(CoolBignum(-MAXLONG)) == -MAXLONG -->   PASSED
 Test 053: CoolBignum b; b =(long(MAXLONG); b--; (long)b == long(MAXLONG-1) -->   PASSED
 Test 054: CoolBignum b = (long(MAXLONG); b--; b=-b; (long)b == long(-(MAXLONG-1)) -->   PASSED
float conversion operator:
 Test 055:                         float(CoolBignum(0.0)) == 0.0 -->   PASSED
 Test 056:                 float(CoolBignum(99999.0)) == 99999.0 -->   PASSED
 Test 057:               float(CoolBignum(MAXFLOAT)) == MAXFLOAT -->   PASSED
 Test 058:             float(CoolBignum(-MAXFLOAT)) == -MAXFLOAT -->   PASSED
double conversion operator:
 Test 059:                        double(CoolBignum(0.0)) == 0.0 -->   PASSED
 Test 060:                double(CoolBignum(99999.0)) == 99999.0 -->   PASSED
 Test 061:                    double(CoolBignum(1e300)) == 1e300 -->   PASSED
 Test 062:                  double(CoolBignum(-1e300)) == -1e300 -->   PASSED
 Test 063:              double(CoolBignum(MAXFLOAT)) == MAXFLOAT -->   PASSED
 Test 064:            double(CoolBignum(-MAXFLOAT)) == -MAXFLOAT -->   PASSED
 Test 065:            double(CoolBignum(MAXDOUBLE)) == MAXDOUBLE -->   PASSED
 Test 066:          double(CoolBignum(-MAXDOUBLE)) == -MAXDOUBLE -->   PASSED
 Test 067: CoolBignum b = MAXDOUBLE; b--; ++b; b/=2; (double)b == double(MAXDOUBLE/2) -->   PASSED
 Test 068: CoolBignum b =MAXDOUBLE; b--, ++b; b/=2; b=-b; (double)b == double(-(MAXDOUBLE/2)) -->   PASSED

Starting assignment tests:
 Test 069:                           CoolBignum b1; b1 = 0xffff; -->   PASSED
 Test 070:                                 double(b1) == -1.23e6 -->   PASSED
 Test 071:                                    long(b1) = -MAXINT -->   PASSED
 Test 072:                                  long(b1) = 0x1FFFFFl -->   PASSED
 Test 073:                                               b1 = b5 -->   PASSED

Starting addition, subtraction tests:
 for (i = 1; i < 0xFFFFFFF;  i *= 3) 
   for (j = 1; j < 0xFFFFFFF; j *= 3) 
      ..................
 Test 074:                          bi + bj == CoolBignum(i + j) -->   PASSED
 Test 075:                          bi - bj == CoolBignum(i - j) -->   PASSED
 Test 076:                                             -b0 == b0 -->   PASSED
 Test 077:                       -b1000 == CoolBignum(-1l)*b1000 -->   PASSED
 Test 078:                              -(-b1000000) == b1000000 -->   PASSED
 Test 079:                                   b0 + b1000 == b1000 -->   PASSED
 Test 080:                             b0 + b1000000 == b1000000 -->   PASSED
 Test 081:                                   b1000 + b0 == b1000 -->   PASSED
 Test 082:                             b1000000 + b0 == b1000000 -->   PASSED
 Test 083:                               b0 + (-b1000) == -b1000 -->   PASSED
 Test 084:                                 -b1000 + b0 == -b1000 -->   PASSED
 Test 085:        -b1000 + (-b1000) == (CoolBignum(2l)*(-b1000)) -->   PASSED
 Test 086: -b1000000 + (-b1000000) == (CoolBignum(2l)*(-b1000000)) -->   PASSED
 Test 087:                          b1000000 + (-b1000000) == b0 -->   PASSED
 Test 088:                            zillion + (-zillion) == b0 -->   PASSED
 Test 089: zillion + b1000 == b1000000*b1000000*b1000000 + b1000 -->   PASSED
 Test 090:                                             -b0 == b0 -->   PASSED
 Test 091:                       -b1000 == CoolBignum(-1l)*b1000 -->   PASSED
 Test 092:                              -(-b1000000) == b1000000 -->   PASSED
 Test 093:                                  b0 - b1000 == -b1000 -->   PASSED
 Test 094:                            b0 - b1000000 == -b1000000 -->   PASSED
 Test 095:                                   b1000 - b0 == b1000 -->   PASSED
 Test 096:                             b1000000 - b0 == b1000000 -->   PASSED
 Test 097:                                b0 - (-b1000) == b1000 -->   PASSED
 Test 098:                                 -b1000 - b0 == -b1000 -->   PASSED
 Test 099:                               -b1000 - (-b1000) == b0 -->   PASSED
 Test 100:                -b1000 - (-zillion) == zillion - b1000 -->   PASSED
 Test 101:                         -b1000000 - (-b1000000) == b0 -->   PASSED
 Test 102:    -b1000000 - (b1000000) == -CoolBignum(2l)*b1000000 -->   PASSED
 Test 103:     b1000000 - (-b1000000) == CoolBignum(2l)*b1000000 -->   PASSED
 Test 104:        zillion - (-zillion) == CoolBignum(2l)*zillion -->   PASSED
 Test 105: zillion - b1000 == b1000000*b1000000*b1000000 - b1000 -->   PASSED
 Test 106: -zillion - b1000 == -b1000000*b1000000*b1000000 - b1000 -->   PASSED
 Test 107:                                     (b2+b3) - b2 = b3 -->   PASSED
 Test 108:                                     (b2+b3) - b3 = b2 -->   PASSED

Starting multiplication tests:
 Test 109:                                           b0*b0 == b0 -->   PASSED
 Test 110:                                        b0*b1000 == b0 -->   PASSED
 Test 111:                                        b1000*b0 == b0 -->   PASSED
 Test 112:                               b1000*b1000 == b1000000 -->   PASSED
 Test 113:                      b1000*b1000000 == b1000000*b1000 -->   PASSED
 Test 114:               -b1000000*b1000000*b1000000 == -zillion -->   PASSED
 Test 115:                      zillion*-b1000 == b1000*-zillion -->   PASSED

Starting division tests:
 Test 116:                   long(CoolBignum(0l)/CoolBignum(1l)) -->   PASSED
 Test 117:                  long(CoolBignum(-1l)/CoolBignum(1l)) -->   PASSED
 for (i = 0xFFFFFF; i > 0; i /= 0x10) 
   for (j = 0x7FFFFFF; j > 0; j /= 0x10) 
     for (k = 1; k < 17; k++) 
       for (l = 1; l < 17; l++) 
         ......
 Test 118: (CoolBignum(i+k)/CoolBignum(j+l)) == CoolBignum(long((i+k)/(j+l))) -->   PASSED
 Test 119: (CoolBignum(i+k)%CoolBignum(j+l)) == CoolBignum(long((i+k)%(j+l))) -->   PASSED

Check example in book:
 Test 120:                                     (b2*b3) / b3 = b2 -->   PASSED
 Test 121:                                     (b2*b3) / b2 = b3 -->   PASSED
 Test 122:                         ((b3/b2) * b2) + (b3%b2) = b3 -->   PASSED

Starting shift tests:
 Test 123:                                          int(b1) == 1 -->   PASSED
 Test 124:                                    long(b1 << 1) == 2 -->   PASSED
 Test 125:                                    long(b1 << 2) == 4 -->   PASSED
 Test 126:                                    long(b1 << 3) == 8 -->   PASSED
 Test 127:                                   long(b1 << 4) == 16 -->   PASSED
 Test 128:                                   long(b1 << 5) == 32 -->   PASSED
 Test 129:                                   long(b1 << 6) == 64 -->   PASSED
 Test 130:                                  long(b1 << 7) == 128 -->   PASSED
 Test 131:                                  long(b1 << 8) == 256 -->   PASSED
 Test 132:                                  long(b1 << 9) == 512 -->   PASSED
 Test 133:                                long(b1 << 10) == 1024 -->   PASSED
 Test 134:                                long(b1 << 11) == 2048 -->   PASSED
 Test 135:                                long(b1 << 12) == 4096 -->   PASSED
 Test 136:                                long(b1 << 13) == 8192 -->   PASSED
 Test 137:                               long(b1 << 14) == 16384 -->   PASSED
 Test 138:                               long(b1 << 15) == 32768 -->   PASSED
 Test 139:                               long(b1 << 16) == 65536 -->   PASSED
 Test 140:                (b1 << 32) == CoolBignum("4294967296") -->   PASSED
 Test 141:                                  long(-b1 << 1) == -2 -->   PASSED
 Test 142:                                  long(-b1 << 2) == -4 -->   PASSED
 Test 143:                                  long(-b1 << 3) == -8 -->   PASSED
 Test 144:                                 long(-b1 << 4) == -16 -->   PASSED
 Test 145:                                 long(-b1 << 5) == -32 -->   PASSED
 Test 146:                                 long(-b1 << 6) == -64 -->   PASSED
 Test 147:                                long(-b1 << 7) == -128 -->   PASSED
 Test 148:                                long(-b1 << 8) == -256 -->   PASSED
 Test 149:                                long(-b1 << 9) == -512 -->   PASSED
 Test 150:                              long(-b1 << 10) == -1024 -->   PASSED
 Test 151:                              long(-b1 << 11) == -2048 -->   PASSED
 Test 152:                              long(-b1 << 12) == -4096 -->   PASSED
 Test 153:                              long(-b1 << 13) == -8192 -->   PASSED
 Test 154:                             long(-b1 << 14) == -16384 -->   PASSED
 Test 155:                             long(-b1 << 15) == -32768 -->   PASSED
 Test 156:                             long(-b1 << 16) == -65536 -->   PASSED
 Test 157:              (-b1 << 32) == CoolBignum("-4294967296") -->   PASSED
 Test 158:                                  long(b1 << -16) == 0 -->   PASSED
 Test 159:                                 long(-b1 << -16) == 0 -->   PASSED
 Test 160:                        b2 == CoolBignum("4294967296") -->   PASSED
 Test 161:                 (b2 >> 1) == CoolBignum("2147483648") -->   PASSED
 Test 162:                           long(b2 >> 2) == 1073741824 -->   PASSED
 Test 163:                            long(b2 >> 3) == 536870912 -->   PASSED
 Test 164:                            long(b2 >> 4) == 268435456 -->   PASSED
 Test 165:                            long(b2 >> 5) == 134217728 -->   PASSED
 Test 166:                             long(b2 >> 6) == 67108864 -->   PASSED
 Test 167:                             long(b2 >> 7) == 33554432 -->   PASSED
 Test 168:                             long(b2 >> 8) == 16777216 -->   PASSED
 Test 169:                              long(b2 >> 9) == 8388608 -->   PASSED
 Test 170:                             long(b2 >> 10) == 4194304 -->   PASSED
 Test 171:                             long(b2 >> 11) == 2097152 -->   PASSED
 Test 172:                             long(b2 >> 12) == 1048576 -->   PASSED
 Test 173:                              long(b2 >> 13) == 524288 -->   PASSED
 Test 174:                              long(b2 >> 14) == 262144 -->   PASSED
 Test 175:                              long(b2 >> 15) == 131072 -->   PASSED
 Test 176:                               long(b2 >> 16) == 65536 -->   PASSED
 Test 177:                                   long(b2 >> 32) == 1 -->   PASSED
 Test 178:                                   long(b2 >> 33) == 0 -->   PASSED
 Test 179:                                   long(b2 >> 67) == 0 -->   PASSED
 Test 180:               (-b2 >> 1) == CoolBignum("-2147483648") -->   PASSED
 Test 181:                         long(-b2 >> 2) == -1073741824 -->   PASSED
 Test 182:                          long(-b2 >> 3) == -536870912 -->   PASSED
 Test 183:                          long(-b2 >> 4) == -268435456 -->   PASSED
 Test 184:                          long(-b2 >> 5) == -134217728 -->   PASSED
 Test 185:                           long(-b2 >> 6) == -67108864 -->   PASSED
 Test 186:                           long(-b2 >> 7) == -33554432 -->   PASSED
 Test 187:                           long(-b2 >> 8) == -16777216 -->   PASSED
 Test 188:                            long(-b2 >> 9) == -8388608 -->   PASSED
 Test 189:                           long(-b2 >> 10) == -4194304 -->   PASSED
 Test 190:                           long(-b2 >> 11) == -2097152 -->   PASSED
 Test 191:                           long(-b2 >> 12) == -1048576 -->   PASSED
 Test 192:                            long(-b2 >> 13) == -524288 -->   PASSED
 Test 193:                            long(-b2 >> 14) == -262144 -->   PASSED
 Test 194:                            long(-b2 >> 15) == -131072 -->   PASSED
 Test 195:                             long(-b2 >> 16) == -65536 -->   PASSED
 Test 196:                                 long(-b2 >> 32) == -1 -->   PASSED
 Test 197:                                 long(-b2 >> 33) == -0 -->   PASSED
 Test 198:                                 long(-b2 >> 67) == -0 -->   PASSED

Starting logical comparison tests:
 Test 199:                                              b0 == b0 -->   PASSED
 Test 200:                                              b0 == b1 -->   PASSED
 Test 201:                                              b0 == b2 -->   PASSED
 Test 202:                                              b0 == b3 -->   PASSED
 Test 203:                                              b1 == b2 -->   PASSED
 Test 204:                                              b1 == b3 -->   PASSED
 Test 205:                                              b2 == b3 -->   PASSED
 Test 206:                                              b0 != b0 -->   PASSED
 Test 207:                                              b0 != b1 -->   PASSED
 Test 208:                                              b0 != b2 -->   PASSED
 Test 209:                                              b0 != b3 -->   PASSED
 Test 210:                                              b1 != b2 -->   PASSED
 Test 211:                                              b1 != b3 -->   PASSED
 Test 212:                                              b2 != b3 -->   PASSED
 Test 213:                                               b0 < b0 -->   PASSED
 Test 214:                                               b0 < b1 -->   PASSED
 Test 215:                                               b0 < b2 -->   PASSED
 Test 216:                                               b0 < b3 -->   PASSED
 Test 217:                                               b1 < b2 -->   PASSED
 Test 218:                                               b1 < b3 -->   PASSED
 Test 219:                                               b2 < b3 -->   PASSED
 Test 220:                                               b0 > b0 -->   PASSED
 Test 221:                                               b0 > b1 -->   PASSED
 Test 222:                                               b0 > b2 -->   PASSED
 Test 223:                                               b0 > b3 -->   PASSED
 Test 224:                                               b1 > b2 -->   PASSED
 Test 225:                                               b1 > b3 -->   PASSED
 Test 226:                                               b2 > b3 -->   PASSED
 Test 227:                                              b3 != b2 -->   PASSED
 Test 228:                                              b3 != b3 -->   PASSED
 Test 229:                                               b3 < b2 -->   PASSED
 Test 230:                                              b3 <= b2 -->   PASSED
 Test 231:                                              b3 <= b3 -->   PASSED
 Test 232:                                               b3 > b3 -->   PASSED
 Test 233:                                               b3 > b2 -->   PASSED
 Test 234:                                              b3 >= b2 -->   PASSED
 Test 235:                                              b3 >= b3 -->   PASSED
 Test 236:                                              b2 >= b2 -->   PASSED
-----------------------------------------------------------------------------
CoolBignum Test Summary: 236 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_big
PASS compiling test_bit
-----------------------------------------------------------------------------
Start Testing CoolBit_Set:
-----------------------------------------------------------------------------
 Test 001:                                        CoolBit_Set b0 -->   PASSED
 Test 002:                                         b0.capacity() -->   PASSED
 Test 003:                                         b0.is_empty() -->   PASSED
 Test 004:                                    CoolBit_Set b1(12) -->   PASSED
 Test 005:                                         b1.capacity() -->   PASSED
 Test 006:                                         b1.is_empty() -->   PASSED
 Test 007:                                            b1.find(4) -->   PASSED
 Test 008:                                              b1[4]==0 -->   PASSED
 Test 009:                                             b0.put(3) -->   PASSED
 Test 010:                                           b0.length() -->   PASSED
 Test 011:                                         b0.is_empty() -->   PASSED
 Test 012:                                            b0.find(3) -->   PASSED
 Test 013:                                            b0.value() -->   PASSED
 Test 014:                                              b0[3]==1 -->   PASSED
 Test 015:                                             b1.put(4) -->   PASSED
 Test 016:                                            b1.find(4) -->   PASSED
 Test 017:                                              b1[4]==1 -->   PASSED
 Test 018:                                         b1.resize(18) -->   PASSED
 Test 019:                                         b1.capacity() -->   PASSED
 Test 020:                                           b1.find(20) -->   PASSED
 Test 021:                                           b0.put(2,5) -->   PASSED
 Test 022:                                            b0.find(2) -->   PASSED
 Test 023:                                            b0.value() -->   PASSED
 Test 024:                                            b0.find(3) -->   PASSED
 Test 025:                                            b0.value() -->   PASSED
 Test 026:                                            b0.find(4) -->   PASSED
 Test 027:                                            b0.value() -->   PASSED
 Test 028:                                            b0.find(5) -->   PASSED
 Test 029:                                            b0.value() -->   PASSED
 Test 030:                                           b0.length() -->   PASSED
 Test 031:                                          b0.remove(3) -->   PASSED
 Test 032:                                            b0.find(3) -->   PASSED
 Test 033:                                        b0[3] == FALSE -->   PASSED
 Test 034:                                    CoolBit_Set b2(b0) -->   PASSED
 Test 035:                                           b2.length() -->   PASSED
 Test 036:                                              b0 == b2 -->   PASSED
 Test 037:                                              b0 != b2 -->   PASSED
 Test 038:                                              b0 == b1 -->   PASSED
 Test 039:                                              b0 != b1 -->   PASSED
 Test 040:                                            b2.clear() -->   PASSED
 Test 041:                                               b2 = b1 -->   PASSED
 Test 042:                                            b0.reset() -->   PASSED
 Test 043:                                             b0.next() -->   PASSED
 Test 044:                                            b0.value() -->   PASSED
 Test 045:                                             b0.next() -->   PASSED
 Test 046:                                            b0.value() -->   PASSED
 Test 047:                                             b0.next() -->   PASSED
 Test 048:                                            b0.value() -->   PASSED
 Test 049:                                             b0.prev() -->   PASSED
 Test 050:                                            b0.value() -->   PASSED
 Test 051:                                             b0.next() -->   PASSED
 Test 052:                                            b0.value() -->   PASSED
 Test 053:                                             b0.next() -->   PASSED
 Test 054:                                             b0.put(9) -->   PASSED
 Test 055:                                         b0.capacity() -->   PASSED
 Test 056:                                            b0.find(5) -->   PASSED
 Test 057:                                           b0.remove() -->   PASSED
 Test 058:                                           b0.length() -->   PASSED
 Test 059:                                        b0.remove(2,9) -->   PASSED
 Test 060:                                           b0.length() -->   PASSED
 Test 061:                                            b0.find(9) -->   PASSED
 Test 062:                                            b0.value() -->   PASSED
 Test 063:                                          b0.put(3,11) -->   PASSED
 Test 064:                                            b1.clear() -->   PASSED
 Test 065:                                           b0.length() -->   PASSED
 Test 066:                                           b1.put(4,9) -->   PASSED
 Test 067:                                         b0.search(b1) -->   PASSED
 Test 068:                                            b1.put(19) -->   PASSED
 Test 069:                                         b0.search(b1) -->   PASSED
 Test 070:                                                b2=~b0 -->   PASSED
 Test 071:                                    CoolBit_Set b3(16) -->   PASSED
 Test 072:                                          b3.put(0,15) -->   PASSED
 Test 073:                                     ((b0 | b2) == b3) -->   PASSED
 Test 074:                                    ((b0 & b2) == -b3) -->   PASSED
 Test 075:                                               b1 = b0 -->   PASSED
 Test 076:                                              b0 |= b2 -->   PASSED
 Test 077:                                               b0 = b1 -->   PASSED
 Test 078:                          (b0.set_union(b2), b0 == b3) -->   PASSED
 Test 079:                                               b0 = b1 -->   PASSED
 Test 080:                                              b0 &= b2 -->   PASSED
 Test 081:                                               b0 = b1 -->   PASSED
 Test 082:                  (b0.set_intersection(b2), b0 == -b3) -->   PASSED
 Test 083:                                            b0.clear() -->   PASSED
 Test 084:                                            b1.clear() -->   PASSED
 Test 085:                                            b2.clear() -->   PASSED
 Test 086:                                            b3.clear() -->   PASSED
 Test 087:                                    CoolBit_Set b5(16) -->   PASSED
 Test 088:                                           b5.put(0,1) -->   PASSED
 Test 089:                                           b5.put(6,7) -->   PASSED
 Test 090:                                    CoolBit_Set b6(16) -->   PASSED
 Test 091:                                           b6.put(0,1) -->   PASSED
 Test 092:                                    CoolBit_Set b7(16) -->   PASSED
 Test 093:                                           b7.put(6,7) -->   PASSED
 Test 094:                                           b0.put(0,5) -->   PASSED
 Test 095:                                           b2.put(2,7) -->   PASSED
 Test 096:                                      b1 = b0, b3 = b2 -->   PASSED
 Test 097:                                     ((b0 ^ b2) == b5) -->   PASSED
 Test 098:                                     ((b0 - b2) == b6) -->   PASSED
 Test 099:                                     ((b2 - b0) == b7) -->   PASSED
 Test 100:                                              b0 ^= b2 -->   PASSED
 Test 101:                                               b0 = b1 -->   PASSED
 Test 102:                                              b0 -= b2 -->   PASSED
 Test 103:                                               b0 = b1 -->   PASSED
 Test 104:                                              b2 -= b0 -->   PASSED
 Test 105:                                               b2 = b3 -->   PASSED
 Test 106:                                        b0.set_xor(b2) -->   PASSED
 Test 107:                                               b0 = b1 -->   PASSED
 Test 108:                                 b0.set_difference(b2) -->   PASSED
 Test 109:                                               b0 = b1 -->   PASSED
 Test 110:                                 b2.set_difference(b0) -->   PASSED
 Test 111:                                        CoolBit_Set b8 -->   PASSED
 Test 112:                                           b8.put(2,4) -->   PASSED
 Test 113:                                        CoolBit_Set b9 -->   PASSED
 Test 114:                                           b9.put(3,5) -->   PASSED
 Test 115:                                b8.reset(), b9.reset() -->   PASSED
 Test 116:                                     b8.next_union(b9) -->   PASSED
 Test 117:                                            b8.value() -->   PASSED
 Test 118:                                     b8.next_union(b9) -->   PASSED
 Test 119:                                            b8.value() -->   PASSED
 Test 120:                                     b8.next_union(b9) -->   PASSED
 Test 121:                                            b8.value() -->   PASSED
 Test 122:                                     b8.next_union(b9) -->   PASSED
 Test 123:                                            b8.value() -->   PASSED
 Test 124:                                     b8.next_union(b9) -->   PASSED
 Test 125:                                b8.reset(), b9.reset() -->   PASSED
 Test 126:                              b8.next_intersection(b9) -->   PASSED
 Test 127:                                            b8.value() -->   PASSED
 Test 128:                              b8.next_intersection(b9) -->   PASSED
 Test 129:                                            b8.value() -->   PASSED
 Test 130:                              b8.next_intersection(b9) -->   PASSED
 Test 131:                                b8.reset(), b9.reset() -->   PASSED
 Test 132:                                b8.next_difference(b9) -->   PASSED
 Test 133:                                            b8.value() -->   PASSED
 Test 134:                                b8.next_difference(b9) -->   PASSED
 Test 135:                                b8.reset(), b9.reset() -->   PASSED
 Test 136:                                       b8.next_xor(b9) -->   PASSED
 Test 137:                                            b8.value() -->   PASSED
 Test 138:                                       b8.next_xor(b9) -->   PASSED
 Test 139:                                            b8.value() -->   PASSED
 Test 140:                                       b8.next_xor(b9) -->   PASSED
 Test 141:                                     CoolBit_Set b(10) -->   PASSED
[ 10000000 ]

[ 11000000 ]

[ 11100000 ]

[ 11110000 ]

[ 11111000 ]

[ 11111100 ]

[ 11111110 ]

[ 11111111 ]

[ 11111111 10000000 ]

[ 11111111 11000000 ]

 Test 142:                       for (int i=0;i<10;i++) b.put(i) -->   PASSED
-----------------------------------------------------------------------------
CoolBit_Set Test Summary: 142 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_bit
PASS compiling test_bt
-----------------------------------------------------------------------------
Start Testing CoolBinary_Tree:
-----------------------------------------------------------------------------
 Test 001:                                            b0.put(10) -->   PASSED
 Test 002:                                       b0.tree_depth() -->   PASSED
 Test 003:                                             b0.put(7) -->   PASSED
 Test 004:                                       b0.tree_depth() -->   PASSED
 Test 005:                                            b0.put(15) -->   PASSED
 Test 006:                                       b0.tree_depth() -->   PASSED
 Test 007:                                             b0.put(8) -->   PASSED
 Test 008:                                       b0.tree_depth() -->   PASSED
 Test 009:                                             b0.put(2) -->   PASSED
 Test 010:                                       b0.tree_depth() -->   PASSED
 Test 011:                                            b0.put(12) -->   PASSED
 Test 012:                                       b0.tree_depth() -->   PASSED
 Test 013:                                             b0.put(4) -->   PASSED
 Test 014:                                       b0.tree_depth() -->   PASSED
 Test 015:                                             b0.put(6) -->   PASSED
 Test 016:                                       b0.tree_depth() -->   PASSED
 Test 017:                                             b0.put(5) -->   PASSED
 Test 018:                                       b0.tree_depth() -->   PASSED
 Test 019:                                            b0.put(14) -->   PASSED
 Test 020:                                       b0.tree_depth() -->   PASSED
 Test 021:                                            b0.put(11) -->   PASSED
 Test 022:                                       b0.tree_depth() -->   PASSED
 Test 023:                                            b0.count() -->   PASSED
 Test 024:                       b0.find(5),b0.node()->is_leaf() -->   PASSED
 Test 025:                       b0.find(8),b0.node()->is_leaf() -->   PASSED
 Test 026:                      b0.find(11),b0.node()->is_leaf() -->   PASSED
 Test 027:                      b0.find(14),b0.node()->is_leaf() -->   PASSED
 Test 028:                b0.find(10),b0.node() == b0.get_root() -->   PASSED
 Test 029:                                          b0.remove(7) -->   PASSED
 Test 030:                                            b0.find(7) -->   PASSED
 Test 031:                                            b0.count() -->   PASSED
 Test 032:                                       b0.tree_depth() -->   PASSED
 Test 033:                                            b0.find(6) -->   PASSED
 Test 034:             (b0.node() == b0.get_root()->get_ltree()) -->   PASSED
 Test 035:                                            b0.find(5) -->   PASSED
 Test 036:           (n0 == (b0.find(4),b0.node()->get_rtree())) -->   PASSED
 Test 037:                                            b0.find(8) -->   PASSED
 Test 038:           (n0 == (b0.find(6),b0.node()->get_rtree())) -->   PASSED
 Test 039:                                         b0.remove(12) -->   PASSED
 Test 040:                                           b0.find(12) -->   PASSED
 Test 041:                                            b0.count() -->   PASSED
 Test 042:                                       b0.tree_depth() -->   PASSED
 Test 043:                                           b0.find(11) -->   PASSED
 Test 044:          (n0 == (b0.find(15),b0.node()->get_ltree())) -->   PASSED
 Test 045:                                           b0.find(14) -->   PASSED
 Test 046:          (n0 == (b0.find(11),b0.node()->get_rtree())) -->   PASSED
 Test 047:                                         b0.remove(10) -->   PASSED
 Test 048:                                            b0.count() -->   PASSED
 Test 049:                                       b0.tree_depth() -->   PASSED
 Test 050:                                           b0.find(10) -->   PASSED
 Test 051:               b0.get_root() == (b0.find(8),b0.node()) -->   PASSED
 Test 052:                                            b0.find(6) -->   PASSED
 Test 053:           (n0 == (b0.find(8),b0.node()->get_ltree())) -->   PASSED
 Test 054:                                          b0.remove(5) -->   PASSED
 Test 055:                                            b0.count() -->   PASSED
 Test 056:                                       b0.tree_depth() -->   PASSED
 Test 057:                                          b0.remove(2) -->   PASSED
 Test 058:                                            b0.count() -->   PASSED
 Test 059:                                       b0.tree_depth() -->   PASSED
 Test 060:                                            b0.find(4) -->   PASSED
 Test 061:           (n0 == (b0.find(6),b0.node()->get_ltree())) -->   PASSED
 Test 062:                                         b0.remove(15) -->   PASSED
 Test 063:                                            b0.count() -->   PASSED
 Test 064:                                           b0.find(11) -->   PASSED
 Test 065:           ((b0.node())==(b0.get_root()->get_rtree())) -->   PASSED
 Test 066:                                         b0.remove(14) -->   PASSED
 Test 067:                                            b0.count() -->   PASSED
 Test 068:                                       b0.tree_depth() -->   PASSED
 Test 069:                      b0.find(11),b0.node()->is_leaf() -->   PASSED
 Test 070:                                          b0.remove(8) -->   PASSED
 Test 071:                                            b0.count() -->   PASSED
 Test 072:                                       b0.tree_depth() -->   PASSED
 Test 073:                 b0.get_root()==(b0.find(6),b0.node()) -->   PASSED
 Test 074:                                            b0.find(4) -->   PASSED
 Test 075:             (n0==(b0.find(6),b0.node()->get_ltree())) -->   PASSED
 Test 076:                                         b0.remove(11) -->   PASSED
 Test 077:                                            b0.count() -->   PASSED
 Test 078:                                       b0.tree_depth() -->   PASSED
 Test 079:                                          b0.remove(6) -->   PASSED
 Test 080:                                            b0.count() -->   PASSED
 Test 081:                                       b0.tree_depth() -->   PASSED
 Test 082:                 b0.get_root()==(b0.find(4),b0.node()) -->   PASSED
 Test 083:                              b0.get_root()->is_leaf() -->   PASSED
 Test 084:                                          b0.remove(4) -->   PASSED
 Test 085:                                            b0.count() -->   PASSED
 Test 086:                                       b0.tree_depth() -->   PASSED
 Test 087:                                   b0.get_root()==NULL -->   PASSED
 Test 088:                               CoolBinary_Tree<int> b0 -->   PASSED
 Test 089:                                             b0.put(1) -->   PASSED
 Test 090:                                            b0.count() -->   PASSED
 Test 091:                                            b0.find(1) -->   PASSED
 Test 092:                                            b0.value() -->   PASSED
 Test 093:                                           b0.remove() -->   PASSED
 Test 094:                                            b0.count() -->   PASSED
 Test 095:                                             b0.put(4) -->   PASSED
 Test 096:                                            b0.count() -->   PASSED
 Test 097:                                             b0.put(8) -->   PASSED
 Test 098:                                            b0.count() -->   PASSED
 Test 099:                                             b0.put(3) -->   PASSED
 Test 100:                                            b0.count() -->   PASSED
 Test 101:                                             b0.put(1) -->   PASSED
 Test 102:                                            b0.count() -->   PASSED
 Test 103:                                             b0.put(2) -->   PASSED
 Test 104:                                            b0.count() -->   PASSED
 Test 105:                                             b0.put(6) -->   PASSED
 Test 106:                                            b0.count() -->   PASSED
 Test 107:                                            b0.find(2) -->   PASSED
 Test 108:                                            b0.value() -->   PASSED
 Test 109:                                            b0.reset() -->   PASSED
 Test 110:                                             b0.next() -->   PASSED
 Test 111:                                            b0.value() -->   PASSED
 Test 112:                                             b0.next() -->   PASSED
 Test 113:                                            b0.value() -->   PASSED
 Test 114:                                             b0.next() -->   PASSED
 Test 115:                                            b0.value() -->   PASSED
 Test 116:                                             b0.next() -->   PASSED
 Test 117:                                            b0.value() -->   PASSED
 Test 118:                                             b0.prev() -->   PASSED
 Test 119:                                            b0.value() -->   PASSED
 Test 120:                                             b0.prev() -->   PASSED
 Test 121:                                            b0.value() -->   PASSED
 Test 122:                                             b0.next() -->   PASSED
 Test 123:                                            b0.value() -->   PASSED
 Test 124:                                             b0.next() -->   PASSED
 Test 125:                                            b0.value() -->   PASSED
 Test 126:                                             b0.next() -->   PASSED
 Test 127:                                            b0.value() -->   PASSED
 Test 128:                                             b0.next() -->   PASSED
 Test 129:                                            b0.value() -->   PASSED
 Test 130:                                            b0.count() -->   PASSED
 Test 131:                                           b0.find(99) -->   PASSED
 Test 132:                           CoolBinary_Tree<int> b1(b0) -->   PASSED
 Test 133:                                          b1.remove(3) -->   PASSED
 Test 134:                                            b1.count() -->   PASSED
 Test 135:                                            b1.find(3) -->   PASSED
 Test 136:                                          b0.balance() -->   PASSED
 Test 137:                                          b0.remove(3) -->   PASSED
 Test 138:                                            b0.count() -->   PASSED
 Test 139:                                            b0.find(3) -->   PASSED
 Test 140:                                            b0.put(-3) -->   PASSED
 Test 141:                                            b0.count() -->   PASSED
 Test 142:                                            b0.put(18) -->   PASSED
 Test 143:                                            b0.count() -->   PASSED
 Test 144:                                            b0.put(13) -->   PASSED
 Test 145:                                            b0.count() -->   PASSED
 Test 146:                                             b0.put(1) -->   PASSED
 Test 147:                                            b0.count() -->   PASSED
 Test 148:                                             b0.put(5) -->   PASSED
 Test 149:                                            b0.count() -->   PASSED
 Test 150:                                            b0.put(17) -->   PASSED
 Test 151:                                            b0.count() -->   PASSED
 Test 152:                                             b0.put(3) -->   PASSED
 Test 153:                                            b0.count() -->   PASSED
 Test 154:                                          b0.balance() -->   PASSED
 Test 155:                                            b0.find(3) -->   PASSED
 Test 156:                                            b0.find(8) -->   PASSED
 Test 157:                                            b0.find(9) -->   PASSED
 Test 158:                                           b0.find(-3) -->   PASSED
 Test 159:                                           b0.find(17) -->   PASSED
 Test 160:                                                 b1=b0 -->   PASSED
 Test 161:                                            b1.find(3) -->   PASSED
 Test 162:                                            b1.find(8) -->   PASSED
 Test 163:                                            b1.find(9) -->   PASSED
 Test 164:                                           b1.find(-3) -->   PASSED
 Test 165:                                           b1.find(17) -->   PASSED
 Test 166:                             CoolBinary_Tree<char*> s0 -->   PASSED
 Test 167:                              s0.set_compare(&my_comp) -->   PASSED
 Test 168:                                         s0.put("LLL") -->   PASSED
 Test 169:                                            s0.count() -->   PASSED
 Test 170:                                        s0.find("LLL") -->   PASSED
 Test 171:                                            s0.value() -->   PASSED
 Test 172:                                           s0.remove() -->   PASSED
 Test 173:                                            s0.count() -->   PASSED
 Test 174:                                         s0.put("DDD") -->   PASSED
 Test 175:                                            s0.count() -->   PASSED
 Test 176:                                         s0.put("HHH") -->   PASSED
 Test 177:                                            s0.count() -->   PASSED
 Test 178:                                         s0.put("CCC") -->   PASSED
 Test 179:                                            s0.count() -->   PASSED
 Test 180:                                         s0.put("LLL") -->   PASSED
 Test 181:                                            s0.count() -->   PASSED
 Test 182:                                         s0.put("BBB") -->   PASSED
 Test 183:                                            s0.count() -->   PASSED
 Test 184:                                         s0.put("FFF") -->   PASSED
 Test 185:                                            s0.count() -->   PASSED
 Test 186:                                        s0.find("BBB") -->   PASSED
 Test 187:                                            s0.value() -->   PASSED
 Test 188:                                            s0.reset() -->   PASSED
 Test 189:                                             s0.next() -->   PASSED
 Test 190:                                            s0.value() -->   PASSED
 Test 191:                                             s0.next() -->   PASSED
 Test 192:                                            s0.value() -->   PASSED
 Test 193:                                             s0.next() -->   PASSED
 Test 194:                                            s0.value() -->   PASSED
 Test 195:                                             s0.next() -->   PASSED
 Test 196:                                            s0.value() -->   PASSED
 Test 197:                                             s0.prev() -->   PASSED
 Test 198:                                            s0.value() -->   PASSED
 Test 199:                                             s0.prev() -->   PASSED
 Test 200:                                            s0.value() -->   PASSED
 Test 201:                                             s0.next() -->   PASSED
 Test 202:                                            s0.value() -->   PASSED
 Test 203:                                             s0.next() -->   PASSED
 Test 204:                                            s0.value() -->   PASSED
 Test 205:                                             s0.next() -->   PASSED
 Test 206:                                            s0.value() -->   PASSED
 Test 207:                                             s0.next() -->   PASSED
 Test 208:                                            s0.value() -->   PASSED
 Test 209:                                            s0.count() -->   PASSED
 Test 210:                                        s0.find("JJJ") -->   PASSED
 Test 211:                         CoolBinary_Tree<char*> s1(s0) -->   PASSED
 Test 212:                                          s0.balance() -->   PASSED
 Test 213:                                      s1.remove("CCC") -->   PASSED
 Test 214:                                            s1.count() -->   PASSED
 Test 215:                                        s1.find("CCC") -->   PASSED
 Test 216:                                      s0.remove("CCC") -->   PASSED
 Test 217:                                            s0.count() -->   PASSED
 Test 218:                                        s0.find("CCC") -->   PASSED
 Test 219:                                         s0.put("KKK") -->   PASSED
 Test 220:                                            s0.count() -->   PASSED
 Test 221:                                         s0.put("MMM") -->   PASSED
 Test 222:                                            s0.count() -->   PASSED
 Test 223:                                         s0.put("NNN") -->   PASSED
 Test 224:                                            s0.count() -->   PASSED
 Test 225:                                         s0.put("LLL") -->   PASSED
 Test 226:                                            s0.count() -->   PASSED
 Test 227:                                         s0.put("EEE") -->   PASSED
 Test 228:                                            s0.count() -->   PASSED
 Test 229:                                         s0.put("GGG") -->   PASSED
 Test 230:                                            s0.count() -->   PASSED
 Test 231:                                         s0.put("CCC") -->   PASSED
 Test 232:                                            s0.count() -->   PASSED
 Test 233:                                          s0.balance() -->   PASSED
 Test 234:                                        s0.find("CCC") -->   PASSED
 Test 235:                                        s0.find("HHH") -->   PASSED
 Test 236:                                        s0.find("III") -->   PASSED
 Test 237:                                        s0.find("KKK") -->   PASSED
 Test 238:                                        s0.find("GGG") -->   PASSED
 Test 239:                                                 s1=s0 -->   PASSED
 Test 240:                                        s1.find("CCC") -->   PASSED
 Test 241:                                        s1.find("HHH") -->   PASSED
 Test 242:                                        s1.find("III") -->   PASSED
 Test 243:                                        s1.find("KKK") -->   PASSED
 Test 244:                                        s1.find("GGG") -->   PASSED
 Test 245:                        CoolBinary_Tree<CoolString> s0 -->   PASSED
 Test 246:                            s0.set_compare(&my_strcmp) -->   PASSED
 Test 247:                             s0.put(CoolString("LLL")) -->   PASSED
 Test 248:                                            s0.count() -->   PASSED
 Test 249:                            s0.find(CoolString("LLL")) -->   PASSED
 Test 250:                                            s0.value() -->   PASSED
 Test 251:                                           s0.remove() -->   PASSED
 Test 252:                                            s0.count() -->   PASSED
 Test 253:                             s0.put(CoolString("DDD")) -->   PASSED
 Test 254:                                            s0.count() -->   PASSED
 Test 255:                             s0.put(CoolString("HHH")) -->   PASSED
 Test 256:                                            s0.count() -->   PASSED
 Test 257:                             s0.put(CoolString("CCC")) -->   PASSED
 Test 258:                                            s0.count() -->   PASSED
 Test 259:                             s0.put(CoolString("LLL")) -->   PASSED
 Test 260:                                            s0.count() -->   PASSED
 Test 261:                             s0.put(CoolString("BBB")) -->   PASSED
 Test 262:                                            s0.count() -->   PASSED
 Test 263:                             s0.put(CoolString("FFF")) -->   PASSED
 Test 264:                                            s0.count() -->   PASSED
 Test 265:                            s0.find(CoolString("BBB")) -->   PASSED
 Test 266:                                            s0.value() -->   PASSED
 Test 267:                                            s0.reset() -->   PASSED
 Test 268:                                             s0.next() -->   PASSED
 Test 269:                                            s0.value() -->   PASSED
 Test 270:                                             s0.next() -->   PASSED
 Test 271:                                            s0.value() -->   PASSED
 Test 272:                                             s0.next() -->   PASSED
 Test 273:                                            s0.value() -->   PASSED
 Test 274:                                             s0.next() -->   PASSED
 Test 275:                                            s0.value() -->   PASSED
 Test 276:                                             s0.prev() -->   PASSED
 Test 277:                                            s0.value() -->   PASSED
 Test 278:                                             s0.prev() -->   PASSED
 Test 279:                                            s0.value() -->   PASSED
 Test 280:                                             s0.next() -->   PASSED
 Test 281:                                            s0.value() -->   PASSED
 Test 282:                                             s0.next() -->   PASSED
 Test 283:                                            s0.value() -->   PASSED
 Test 284:                                             s0.next() -->   PASSED
 Test 285:                                            s0.value() -->   PASSED
 Test 286:                                             s0.next() -->   PASSED
 Test 287:                                            s0.value() -->   PASSED
 Test 288:                                            s0.count() -->   PASSED
 Test 289:                            s0.find(CoolString("JJJ")) -->   PASSED
 Test 290:                    CoolBinary_Tree<CoolString> s1(s0) -->   PASSED
 Test 291:                                          s0.balance() -->   PASSED
 Test 292:                          s1.remove(CoolString("CCC")) -->   PASSED
 Test 293:                                            s1.count() -->   PASSED
 Test 294:                            s1.find(CoolString("CCC")) -->   PASSED
 Test 295:                          s0.remove(CoolString("CCC")) -->   PASSED
 Test 296:                                            s0.count() -->   PASSED
 Test 297:                            s0.find(CoolString("CCC")) -->   PASSED
 Test 298:                             s0.put(CoolString("KKK")) -->   PASSED
 Test 299:                                            s0.count() -->   PASSED
 Test 300:                             s0.put(CoolString("MMM")) -->   PASSED
 Test 301:                                            s0.count() -->   PASSED
 Test 302:                             s0.put(CoolString("NNN")) -->   PASSED
 Test 303:                                            s0.count() -->   PASSED
 Test 304:                             s0.put(CoolString("LLL")) -->   PASSED
 Test 305:                                            s0.count() -->   PASSED
 Test 306:                             s0.put(CoolString("EEE")) -->   PASSED
 Test 307:                                            s0.count() -->   PASSED
 Test 308:                             s0.put(CoolString("GGG")) -->   PASSED
 Test 309:                                            s0.count() -->   PASSED
 Test 310:                             s0.put(CoolString("CCC")) -->   PASSED
 Test 311:                                            s0.count() -->   PASSED
 Test 312:                                          s0.balance() -->   PASSED
 Test 313:                            s0.find(CoolString("CCC")) -->   PASSED
 Test 314:                            s0.find(CoolString("HHH")) -->   PASSED
 Test 315:                            s0.find(CoolString("III")) -->   PASSED
 Test 316:                            s0.find(CoolString("KKK")) -->   PASSED
 Test 317:                            s0.find(CoolString("GGG")) -->   PASSED
 Test 318:                                                 s1=s0 -->   PASSED
 Test 319:                            s1.find(CoolString("CCC")) -->   PASSED
 Test 320:                            s1.find(CoolString("HHH")) -->   PASSED
 Test 321:                            s1.find(CoolString("III")) -->   PASSED
 Test 322:                            s1.find(CoolString("KKK")) -->   PASSED
 Test 323:                            s1.find(CoolString("GGG")) -->   PASSED
 Test 324:                                              b0 == b1 -->   PASSED
 Test 325:                                              b0 != b1 -->   PASSED
-----------------------------------------------------------------------------
CoolBinary_Tree Test Summary: 325 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_bt
PASS compiling test_cha
-----------------------------------------------------------------------------
Start Testing char:
-----------------------------------------------------------------------------
 Test 001:                   strfind(s, "*thing*", &start, &end) -->   PASSED
 Test 002:                                                 start -->   PASSED
 Test 003:                                                   end -->   PASSED
 Test 004:                  strfind(s, "*???m *",  &start, &end) -->   PASSED
 Test 005:                                                 start -->   PASSED
 Test 006:                                                   end -->   PASSED
 Test 007:                      strfind(s, "*\**", &start, &end) -->   PASSED
 Test 008:                                                 start -->   PASSED
 Test 009:                                                   end -->   PASSED
 Test 010:                      strfind(s, "*\?*", &start, &end) -->   PASSED
 Test 011:                                                 start -->   PASSED
 Test 012:                                                   end -->   PASSED
 Test 013:                      strfind(s,"*ook?t*",&start,&end) -->   PASSED
 Test 014:                                                 start -->   PASSED
 Test 015:                                                   end -->   PASSED
 Test 016:                 strfind(s, "*p*\*hed*", &start, &end) -->   PASSED
 Test 017:                                                 start -->   PASSED
 Test 018:                                                   end -->   PASSED
 Test 019:                   strfind(s, "*\*hed*", &start, &end) -->   PASSED
 Test 020:                                                 start -->   PASSED
 Test 021:                                                   end -->   PASSED
 Test 022:                  strfind(s, "*d*bb*\**", &start,&end) -->   PASSED
 Test 023:                                                 start -->   PASSED
 Test 024:                                                   end -->   PASSED
 Test 025:                  strrfind(s, "*thing*", &start, &end) -->   PASSED
 Test 026:                                                 start -->   PASSED
 Test 027:                                                   end -->   PASSED
 Test 028:                 strrfind(s, "*???m *",  &start, &end) -->   PASSED
 Test 029:                                                 start -->   PASSED
 Test 030:                                                   end -->   PASSED
 Test 031:                     strrfind(s, "*\**", &start, &end) -->   PASSED
 Test 032:                                                 start -->   PASSED
 Test 033:                                                   end -->   PASSED
 Test 034:                     strrfind(s, "*\?*", &start, &end) -->   PASSED
 Test 035:                                                 start -->   PASSED
 Test 036:                                                   end -->   PASSED
 Test 037:                     strrfind(s,"*ook?t*",&start,&end) -->   PASSED
 Test 038:                                                 start -->   PASSED
 Test 039:                                                   end -->   PASSED
 Test 040:                strrfind(s, "*p*\*hed*", &start, &end) -->   PASSED
 Test 041:                                                 start -->   PASSED
 Test 042:                                                   end -->   PASSED
 Test 043:                  strrfind(s, "*\*hed*", &start, &end) -->   PASSED
 Test 044:                                                 start -->   PASSED
 Test 045:                                                   end -->   PASSED
 Test 046:                 strrfind(s, "*d*bb*\**", &start,&end) -->   PASSED
 Test 047:                                                 start -->   PASSED
 Test 048:                                                   end -->   PASSED
-----------------------------------------------------------------------------
char Test Summary: 48 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_cha
PASS compiling test_com
-----------------------------------------------------------------------------
Start Testing CoolComplex:
-----------------------------------------------------------------------------
 Test 001:                                            Complex c1 -->   PASSED
 Test 002:                                            c1.modulus -->   PASSED
 Test 003:                                   Complex c2(3.0,5.0) -->   PASSED
 Test 004:                                             c2.real() -->   PASSED
 Test 005:                                        c2.imaginary() -->   PASSED
 Test 006:                                              c1 != c2 -->   PASSED
 Test 007:                                            c2.modulus -->   PASSED
 Test 008:                                           c2.argument -->   PASSED
 Test 009:                                       Complex c3(9.0) -->   PASSED
 Test 010:                                             c3.real() -->   PASSED
 Test 011:                                        c3.imaginary() -->   PASSED
 Test 012:                                            c3.modulus -->   PASSED
 Test 013:                                           c3.argument -->   PASSED
 Test 014:                                      Complex c4(6,10) -->   PASSED
 Test 015:                                             c4.real() -->   PASSED
 Test 016:                                        c4.imaginary() -->   PASSED
 Test 017:                                              c2 == c4 -->   PASSED
 Test 018:                                               c1 = c2 -->   PASSED
 Test 019:                                           c1.status() -->   PASSED
 Test 020:                                             c1.real() -->   PASSED
 Test 021:                                        c1.imaginary() -->   PASSED
 Test 022:                                              c1 == c4 -->   PASSED
 Test 023:                                                   -c3 -->   PASSED
 Test 024:                                              c1 = -c3 -->   PASSED
 Test 025:                                        Complex c5(c4) -->   PASSED
 Test 026:                                                   !c5 -->   PASSED
 Test 027:                                               c5 = c2 -->   PASSED
 Test 028:                                                  --c5 -->   PASSED
 Test 029:                                                  ++c5 -->   PASSED
 Test 030:                                     c5 = c5.invert () -->   PASSED
 Test 031:                                              c1=c2+c4 -->   PASSED
 Test 032:                                              c1=c2-c4 -->   PASSED
 Test 033:                                              c1=c2*c4 -->   PASSED
 Test 034:                                              c1=c2/c4 -->   PASSED
 Test 035:                                                c2+=c4 -->   PASSED
 Test 036:                                                c2-=c4 -->   PASSED
 Test 037:                                                c2*=c4 -->   PASSED
 Test 038:                                                c2/=c4 -->   PASSED
 Test 039:                                                 0*x+0 --> Homogenous has infinite number of roots.
  PASSED
 Test 040:                                                 0*x+1 --> Inconsistent equation. No root.
  PASSED
 Test 041:                                                 3*x+0 -->   PASSED
 Test 042:                                                 3*x+2 -->   PASSED
 Test 043:                                           0*x^2+0*x+0 --> Homogenous has infinite number of roots.
  PASSED
 Test 044:                                           0*x^2+0*x+1 --> Inconsistent equation. No root.
  PASSED
 Test 045:                                           3*x^2+2*x+0 -->   PASSED
 Test 046:                                             x^2+2*x+1 -->   PASSED
 Test 047:                                             x^2+3*x+2 -->   PASSED
 Test 048:                                             x^2-2*x+2 -->   PASSED
 Test 049:                                                 x^2+1 -->   PASSED
 Test 050:                                     0*x^3+0*x^2+0*x+0 --> Homogenous has infinite number of roots.
  PASSED
 Test 051:                                     0*x^3+0*x^2+0*x+1 --> Inconsistent equation. No root.
  PASSED
 Test 052:                                         x^3+3*x^2+2*x -->   PASSED
 Test 053:                                                 x^3+x -->   PASSED
 Test 054:                                       x^3-3*x^2+3*x-1 -->   PASSED
 Test 055:                                       x^3-4*x^2+5*x-2 -->   PASSED
 Test 056:                                         x^3-2*x^2-x+2 -->   PASSED
 Test 057:                                           x^3-x^2+x-1 -->   PASSED
 Test 058:                                             x^3-x^2+2 -->   PASSED
 Test 059:                               0*x^4+0*x^3+0*x^2+0*x+0 --> Homogenous has infinite number of roots.
  PASSED
 Test 060:                               0*x^4+0*x^3+0*x^2+0*x+1 --> Inconsistent equation. No root.
  PASSED
 Test 061:                                     x^4-2*x^3-x^2+2*x -->   PASSED
 Test 062:                                               x^4+x^2 -->   PASSED
 Test 063:                                 x^4+4*x^3+6*x^2+4*x+1 -->   PASSED
 Test 064:                                 x^4-4*x^3+6*x^2-4*x+1 -->   PASSED
 Test 065:                                 x^4-2*x^3+2*x^2-2*x+1 -->   PASSED
 Test 066:                                 8x^4+2x^3-4*x^2+4*x+8 -->   PASSED
-----------------------------------------------------------------------------
CoolComplex Test Summary: 66 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_com
PASS compiling test_dt
-----------------------------------------------------------------------------
Start Testing CoolDate_Time:
-----------------------------------------------------------------------------
 Test 001:                               set_default_country(US) -->   PASSED
 Test 002:                            set_default_time_zone(CST) -->   PASSED
 Test 003:                         d1.set_country(UNITED_STATES) -->   PASSED
 Test 004:                          d1.set_time_zone(US_CENTRAL) -->   PASSED
 Test 005:                                      03/10/90, 4:30am -->   PASSED
 Test 006:                                     03/10/90, 4:30 pm -->   PASSED
 Test 007:                                      03/10/20, 4:30pm -->   PASSED
 Test 008:                                               4/21/90 -->   PASSED
 Test 009:                                            90 5:15Am  -->   PASSED
 Test 010:                                               3 pM 90 -->   PASSED
 Test 011:                                            4pm 1 5 94 -->   PASSED
 Test 012:                                            4pm 1 5 94 -->   PASSED
 Test 013:                                            4pm 94 1 5 -->   PASSED
 Test 014:                                            4pm 94 1 5 -->   PASSED
 Test 015:                                             1984 4 23 -->   PASSED
 Test 016:                                             3 22 1975 -->   PASSED
 Test 017:                                             24 3 1987 -->   PASSED
 Test 018:                                           4 2 3 4 5pm -->   PASSED
 Test 019:                                                4 pm 4 -->   PASSED
 Test 020:                                        05 05 05 05 05 -->   PASSED
 Test 021:                                                2 22 3 -->   PASSED
 Test 022:                                    05 05 05 FEB 05 05 -->   PASSED
 Test 023:                                   Jun 4 1991, 4:40 pm -->   PASSED
 Test 024:                                        30 NovEMber 91 -->   PASSED
 Test 025:                                              march 10 -->   PASSED
 Test 026:                                    d1.get_time_zone() -->   PASSED
 Test 027:                                        5:44pm 6 15 90 -->   PASSED
 Test 028:                                    d1.get_time_zone() -->   PASSED
 Test 029:                             5:44pm US/Central10 15 86 -->   PASSED
 Test 030:                                    d1.get_time_zone() -->   PASSED
 Test 031:                                      04/21/63, 4:30am -->   PASSED
 Test 032:                                  24 May 1965, 4:30 pm -->   PASSED
 Test 033:                                      5:44pm 6 15 1890 -->   PASSED
 Test 034:                                          d1.get_sec() -->   PASSED
 Test 035:                                          d1.get_min() -->   PASSED
 Test 036:                                         d1.get_hour() -->   PASSED
 Test 037:                                          d1.get_mon() -->   PASSED
 Test 038:                                         d1.get_mday() -->   PASSED
 Test 039:                                         d1.get_year() -->   PASSED
 Test 040:                                         d1.get_yday() -->   PASSED
 Test 041:                             d1.is_day_light_savings() -->   PASSED
 Test 042:                                   d1.set_local_time() -->   PASSED
 Test 043:                                 CoolDate_Time d2 = d1 -->   PASSED
 Test 044:                                            d1+=SECOND -->   PASSED
 Test 045:                                            d1+=MINUTE -->   PASSED
 Test 046:                                              d1+=HOUR -->   PASSED
 Test 047:                                               d1+=DAY -->   PASSED
 Test 048:                                              d1+=WEEK -->   PASSED
 Test 049:                                              d1+=YEAR -->   PASSED
 Test 050:                                            d1-=SECOND -->   PASSED
 Test 051:                                            d1-=MINUTE -->   PASSED
 Test 052:                                              d1-=HOUR -->   PASSED
 Test 053:                                               d1-=DAY -->   PASSED
 Test 054:                                              d1-=WEEK -->   PASSED
 Test 055:                                              d1-=YEAR -->   PASSED
 Test 056:                                        d1.incr_sec(5) -->   PASSED
 Test 057:                                        d1.incr_min(5) -->   PASSED
 Test 058:                                       d1.incr_hour(5) -->   PASSED
 Test 059:                                        d1.incr_day(5) -->   PASSED
 Test 060:                                       d1.incr_week(5) -->   PASSED
 Test 061:                                        d1.decr_sec(5) -->   PASSED
 Test 062:                                        d1.decr_min(5) -->   PASSED
 Test 063:                                       d1.decr_hour(5) -->   PASSED
 Test 064:                                        d1.decr_day(5) -->   PASSED
 Test 065:                                       d1.decr_week(5) -->   PASSED
 Test 066:                                              d1 == d2 -->   PASSED
 Test 067:                                              d1 != d2 -->   PASSED
 Test 068:                                               d1 < d2 -->   PASSED
 Test 069:                                              d1 <= d2 -->   PASSED
 Test 070:                                               d1 > d2 -->   PASSED
 Test 071:                                              d1 >= d2 -->   PASSED
 Test 072:                                 d1.ascii_duration(d2) -->   PASSED
-----------------------------------------------------------------------------
CoolDate_Time Test Summary: 72 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_dt
PASS compiling test_gs
-----------------------------------------------------------------------------
Start Testing CoolGen_String:
-----------------------------------------------------------------------------
 Test 001:                                     CoolGen_String s1 -->   PASSED
 Test 002:                                       strlen(s1) == 0 -->   PASSED
 Test 003:                                          s1 = "Hello" -->   PASSED
 Test 004:                                       strlen(s1) == 5 -->   PASSED
 Test 005:                                    strcmp(s1,"Hello") -->   PASSED
 Test 006:                            CoolGen_String s2("World") -->   PASSED
 Test 007:                                       strlen(s2) == 5 -->   PASSED
 Test 008:                                    strcmp(s2,"World") -->   PASSED
 Test 009:                                         s2 = s2 + '!' -->   PASSED
 Test 010:                                       strcat(s1, " ") -->   PASSED
 Test 011:                                              s1 += s2 -->   PASSED
 Test 012:                            strcmp (s1,"Hello World!") -->   PASSED
 Test 013:                                  s1 == "Hello World!" -->   PASSED
 Test 014:                        is_equal(s2,"WORLD",SENSITIVE) -->   PASSED
 Test 015:                     is_equal(s2,"WORLD!",INSENSITIVE) -->   PASSED
 Test 016:                                     strlen (s1) == 12 -->   PASSED
 Test 017:                                          s1[6] == 'W' -->   PASSED
 Test 018:                                              s1 != s2 -->   PASSED
 Test 019:                                              s1 != s2 -->   PASSED
 Test 020:                                               s3 = s2 -->   PASSED
 Test 021:                                          s1.reverse() -->   PASSED
 Test 022:                                           upcase (s2) -->   PASSED
 Test 023:                                         downcase (s2) -->   PASSED
 Test 024:                                  is_lt (s2, "WORLD!") -->   PASSED
 Test 025:                                  is_le (s2, "WORLD!") -->   PASSED
 Test 026:                                         downcase (s1) -->   PASSED
 Test 027:                                       capitalize (s1) -->   PASSED
 Test 028:                              left_trim (s1, "Hello ") -->   PASSED
 Test 029:                                  right_trim (s1, "!") -->   PASSED
 Test 030:                     is_equal (s1, "world", SENSITIVE) -->   PASSED
 Test 031:                                       trim (s1, "or") -->   PASSED
 Test 032:                                            s1.clear() -->   PASSED
 Test 033:                                         s1 += "12345" -->   PASSED
 Test 034:                                           strtol (s1) -->   PASSED
 Test 035:                                             atol (s1) -->   PASSED
 Test 036:                                             itol (s1) -->   PASSED
 Test 037:                                             s1 += '.' -->   PASSED
 Test 038:                                         s1 = s1 + "7" -->   PASSED
 Test 039:                                             atof (s1) -->   PASSED
 Test 040:                                           strtod (s1) -->   PASSED
 Test 041:                                    s1.insert("big",3) -->   PASSED
 Test 042:                                          return value -->   PASSED
 Test 043:                                      s33=="my string" -->   PASSED
 Test 044:                                          return value -->   PASSED
 Test 045:                                          return value -->   PASSED
 Test 046:                                   s1.insert("big",13) -->   PASSED
 Test 047:                                          return value -->   PASSED
 Test 048:                                        s1.remove(3,5) -->   PASSED
 Test 049:                                          return value -->   PASSED
 Test 050:                                      s32=="my string" -->   PASSED
 Test 051:                                        s1.remove(5,7) -->   PASSED
 Test 052:                                          return value -->   PASSED
 Test 053:                                        s1.remove(0,1) -->   PASSED
 Test 054:                                          return value -->   PASSED
 Test 055:                                       s1.replace(3,5) -->   PASSED
 Test 056:                                          return value -->   PASSED
 Test 057:                                      s31=="my string" -->   PASSED
 Test 058:                                       s1.replace(2,3) -->   PASSED
 Test 059:                                          return value -->   PASSED
 Test 060:                                       s1.replace(3,7) -->   PASSED
 Test 061:                                          return value -->   PASSED
 Test 062:                                     s1.replace(10,13) -->   PASSED
 Test 063:                                          return value -->   PASSED
 Test 064:                                       s1.replace(0,1) -->   PASSED
 Test 065:                                          return value -->   PASSED
 Test 066:                                          s1.yank(3,5) -->   PASSED
 Test 067:                                          return value -->   PASSED
 Test 068:                                      s30=="my string" -->   PASSED
 Test 069:                                          s1.yank(5,7) -->   PASSED
 Test 070:                                          return value -->   PASSED
 Test 071:                                          s1.yank(0,1) -->   PASSED
 Test 072:                                          return value -->   PASSED
 Test 073:                                    s1.sub_string(3,5) -->   PASSED
 Test 074:                                          return value -->   PASSED
 Test 075:                                      s20=="my string" -->   PASSED
 Test 076:                                    s1.sub_string(5,7) -->   PASSED
 Test 077:                                          return value -->   PASSED
 Test 078:                                    s1.sub_string(0,1) -->   PASSED
 Test 079:                                          return value -->   PASSED
 Test 080:                                                 hello -->   PASSED
 Test 081:                                          strncpy(3,5) -->   PASSED
 Test 082:                                          return value -->   PASSED
 Test 083:                          s19=="garbage to be deleted" -->   PASSED
 Test 084:                                                 hello -->   PASSED
 Test 085:                                    strncpy(s1,"hi",5) -->   PASSED
 Test 086:                                          return value -->   PASSED
 Test 087:                                         r1.is_valid() -->   PASSED
 Test 088:                                r1.compile("Hi There") -->   PASSED
 Test 089:                                             r1.find() -->   PASSED
 Test 090:                                            r1.start() -->   PASSED
 Test 091:                                                r1.end -->   PASSED
 Test 092:                                    r1.compile("^ABC") -->   PASSED
 Test 093:                                             r1.find() -->   PASSED
 Test 094:                                          r1="ABCDEFG" -->   PASSED
 Test 095:                                    r1.compile("^ABC") -->   PASSED
 Test 096:                                             r1.find() -->   PASSED
 Test 097:                                            r1.start() -->   PASSED
 Test 098:                                              r1.end() -->   PASSED
 Test 099:                                    r1.compile("EFG$") -->   PASSED
 Test 100:                                             r1.find() -->   PASSED
 Test 101:                                            r1.start() -->   PASSED
 Test 102:                                              r1.end() -->   PASSED
 Test 103:                                      r1="ab123QQ59ba" -->   PASSED
 Test 104:                                r1.compile("[^ab1-9]") -->   PASSED
 Test 105:                                  r1.find(ab123QQ59ba) -->   PASSED
 Test 106:                                            r1.start() -->   PASSED
 Test 107:                                              r1.end() -->   PASSED
 Test 108:                                        r1="A B C D E" -->   PASSED
 Test 109:                                   r1.compile("B . D") -->   PASSED
 Test 110:                                             r1.find() -->   PASSED
 Test 111:                                            r1.start() -->   PASSED
 Test 112:                                              r1.end() -->   PASSED
 Test 113:                                         r1="<<<AE>>>" -->   PASSED
 Test 114:                                             r1.find() -->   PASSED
-----------------------------------------------------------------------------
CoolGen_String Test Summary: 114 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_gs
PASS compiling test_has
-----------------------------------------------------------------------------
Start Testing CoolHash_Table:
-----------------------------------------------------------------------------
 Test 001:                         CoolHash_Table<int,double> h0 -->   PASSED
 Test 002:                     CoolHash_Table<int,double> h1(20) -->   PASSED
 Test 003:                     CoolHash_Table<int,double> h2(25) -->   PASSED
 Test 004:                     CoolHash_Table<int,double> h3(h2) -->   PASSED
 Test 005:                                                h2==h3 -->   PASSED
 Test 006:                                              h2 == h3 -->   PASSED
 Test 007:                                              h1 == h2 -->   PASSED
 Test 008:                                              h1 != h3 -->   PASSED
 Test 009:                                            h0.reset() -->   PASSED
 Test 010:                                         h0.put(1,2.5) -->   PASSED
 Test 011:                                            h0.value() -->   PASSED
 Test 012:                                           h0.get(1,d) -->   PASSED
 Test 013:                                           h0.length() -->   PASSED
 Test 014:                                            h0.value() -->   PASSED
 Test 015:                                         h0.put(2,3.5) -->   PASSED
 Test 016:                                           h0.get(2,d) -->   PASSED
 Test 017:                                         h0.put(3,4.5) -->   PASSED
 Test 018:                                           h0.get(3,d) -->   PASSED
 Test 019:                                         h0.put(4,5.5) -->   PASSED
 Test 020:                                            h0.value() -->   PASSED
 Test 021:                                           h0.get(4,d) -->   PASSED
 Test 022:                                            h0.value() -->   PASSED
 Test 023:                                         h0.put(5,9.5) -->   PASSED
 Test 024:                                           h0.get(5,d) -->   PASSED
 Test 025:                                            h0.value() -->   PASSED
 Test 026:                                         h0.put(6,7.5) -->   PASSED
 Test 027:                                           h0.get(6,d) -->   PASSED
 Test 028:                                     h0.get_key(7.5,i) -->   PASSED
 Test 029:                                                i == 6 -->   PASSED
 Test 030:                                         h0.put(7,8.5) -->   PASSED
 Test 031:                                           h0.get(7,d) -->   PASSED
 Test 032:                                         h0.put(8,9.5) -->   PASSED
 Test 033:                                           h0.get(8,d) -->   PASSED
 Test 034:                                        h0.put(9,10.5) -->   PASSED
 Test 035:                                           h0.get(9,d) -->   PASSED
 Test 036:                                 h0.get_bucket_count() -->   PASSED
 Test 037:                                           h0.length() -->   PASSED
 Test 038:                                          h0.remove(1) -->   PASSED
 Test 039:                                           h0.length() -->   PASSED
 Test 040:                                            h0.reset() -->   PASSED
 Test 041:                                             h0.next() -->   PASSED
 Test 042:                                             h0.next() -->   PASSED
 Test 043:                                             h0.next() -->   PASSED
 Test 044:                                             h0.next() -->   PASSED
 Test 045:                                             h0.next() -->   PASSED
 Test 046:                                             h0.next() -->   PASSED
 Test 047:                                             h0.next() -->   PASSED
 Test 048:                                             h0.next() -->   PASSED
 Test 049:                                             h0.next() -->   PASSED
 Test 050:                                             h0.prev() -->   PASSED
 Test 051:                                             h0.prev() -->   PASSED
 Test 052:                                             h0.prev() -->   PASSED
 Test 053:                                             h0.prev() -->   PASSED
 Test 054:                                             h0.prev() -->   PASSED
 Test 055:                                             h0.prev() -->   PASSED
 Test 056:                                             h0.prev() -->   PASSED
 Test 057:                                             h0.prev() -->   PASSED
 Test 058:                                             h0.prev() -->   PASSED
 Test 059:                                                 h1=h0 -->   PASSED
 Test 060:                                           h1.get(7,d) -->   PASSED
 Test 061:                                            h1.value() -->   PASSED
 Test 062:                                           h1.get(3,d) -->   PASSED
 Test 063:                                            h1.value() -->   PASSED
 Test 064:                                           h1.get(9,d) -->   PASSED
 Test 065:                                            h1.value() -->   PASSED
 Test 066:                                 h1.get_bucket_count() -->   PASSED
 Test 067:                                           h1.length() -->   PASSED
 Test 068:                                     h0.set_ratio(1.0) -->   PASSED
 Test 069:                                 h0.get_bucket_count() -->   PASSED
 Test 070:                                           h0.get(2,d) -->   PASSED
 Test 071:                                           h0.get(4,d) -->   PASSED
 Test 072:                                           h0.get(6,d) -->   PASSED
 Test 073:                                           h0.get(8,d) -->   PASSED
 Test 074:                                 h0.get_bucket_count() -->   PASSED
 Test 075:                                           h0.get(2,d) -->   PASSED
 Test 076:                                            h0.value() -->   PASSED
 Test 077:                                           h0.get(4,d) -->   PASSED
 Test 078:                                            h0.value() -->   PASSED
 Test 079:                                           h0.get(6,d) -->   PASSED
 Test 080:                                            h0.value() -->   PASSED
 Test 081:                                           h0.get(8,d) -->   PASSED
 Test 082:                                     h0.get_key(9.5,i) -->   PASSED
 Test 083:                                                i == 8 -->   PASSED
 Test 084:                                            h0.value() -->   PASSED
 Test 085:                                            h0.clear() -->   PASSED
 Test 086:                                            h1.clear() -->   PASSED
 Test 087:                                            h3.clear() -->   PASSED
 Test 088:                for(i=0;i<100;i++) h3.put(i,double(i)) -->   PASSED
 Test 089:                         for(i=0;i<100;i++) h3.find(i) -->   PASSED
 Test 090:                  CoolHash_Table<double,CoolString> h0 -->   PASSED
 Test 091:              CoolHash_Table<double,CoolString> h1(20) -->   PASSED
 Test 092:              CoolHash_Table<double,CoolString> h2(25) -->   PASSED
 Test 093:              CoolHash_Table<double,CoolString> h3(h2) -->   PASSED
 Test 094:                                                h2==h3 -->   PASSED
 Test 095:                                              h2 == h3 -->   PASSED
 Test 096:                                              h1 == h2 -->   PASSED
 Test 097:                                              h1 != h3 -->   PASSED
 Test 098:                        h0.put(1.0,CoolString("ABCD")) -->   PASSED
 Test 099:                                         h0.get(1.0,s) -->   PASSED
 Test 100:                                           h0.length() -->   PASSED
 Test 101:                        h0.put(2.0,CoolString("EFGH")) -->   PASSED
 Test 102:                                         h0.get(2.0,s) -->   PASSED
 Test 103:                        h0.put(3.0,CoolString("IJKL")) -->   PASSED
 Test 104:                                         h0.get(3.0,s) -->   PASSED
 Test 105:                        h0.put(4.0,CoolString("MNOP")) -->   PASSED
 Test 106:                                         h0.get(4.0,s) -->   PASSED
 Test 107:                        h0.put(5.0,CoolString("QRsT")) -->   PASSED
 Test 108:                                         h0.get(5.0,s) -->   PASSED
 Test 109:                        h0.put(6.0,CoolString("UVWX")) -->   PASSED
 Test 110:                                         h0.get(6.0,s) -->   PASSED
 Test 111:                        h0.put(7.0,CoolString("YZab")) -->   PASSED
 Test 112:                                         h0.get(7.0,s) -->   PASSED
 Test 113:                        h0.put(8.0,CoolString("cdef")) -->   PASSED
 Test 114:                                         h0.get(8.0,s) -->   PASSED
 Test 115:                        h0.put(9.0,CoolString("ghij")) -->   PASSED
 Test 116:                                         h0.get(9.0,s) -->   PASSED
 Test 117:                                 h0.get_bucket_count() -->   PASSED
 Test 118:                                           h0.length() -->   PASSED
 Test 119:                                        h0.remove(1.0) -->   PASSED
 Test 120:                                           h0.length() -->   PASSED
 Test 121:                                                 h1=h0 -->   PASSED
 Test 122:                                         h1.get(7.0,s) -->   PASSED
 Test 123:                                         h1.get(3.0,s) -->   PASSED
 Test 124:                                         h1.get(9.0,s) -->   PASSED
 Test 125:                                 h1.get_bucket_count() -->   PASSED
 Test 126:                                           h1.length() -->   PASSED
 Test 127:                                     h0.set_ratio(1.0) -->   PASSED
 Test 128:                                 h0.get_bucket_count() -->   PASSED
 Test 129:                                         h0.get(2.0,s) -->   PASSED
 Test 130:                                         h0.get(4.0,s) -->   PASSED
 Test 131:                                         h0.get(6.0,s) -->   PASSED
 Test 132:                                         h0.get(8.0,s) -->   PASSED
 Test 133:                                 h0.get_bucket_count() -->   PASSED
 Test 134:                                         h0.get(2.0,s) -->   PASSED
 Test 135:                                         h0.get(4.0,s) -->   PASSED
 Test 136:                                         h0.get(6.0,s) -->   PASSED
 Test 137:                                         h0.get(8.0,s) -->   PASSED
 Test 138:                                            h0.clear() -->   PASSED
 Test 139:                                            h1.clear() -->   PASSED
 Test 140:                          CoolString s1("Hello World") -->   PASSED
 Test 141:                    CoolString s2("Up, up, and away!") -->   PASSED
 Test 142:                               CoolVector<int> v1(5,1) -->   PASSED
 Test 143:                                 CoolVector<int> v2(8) -->   PASSED
 Test 144:                                      v2.set_length(8) -->   PASSED
 Test 145:         CoolHash_Table<CoolVector<int>,CoolString> h1 -->   PASSED
 Test 146:                                         h1.put(v1,s1) -->   PASSED
 Test 147:                                          h1.get(v1,s) -->   PASSED
 Test 148:                                           h1.length() -->   PASSED
 Test 149:                                         h1.put(v2,s2) -->   PASSED
 Test 150:                                   h1.put(v2,s2) again -->   PASSED
 Test 151:                                          h1.get(v2,s) -->   PASSED
 Test 152:                                           h1.length() -->   PASSED
-----------------------------------------------------------------------------
CoolHash_Table Test Summary: 152 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_has
PASS compiling test_lis
-----------------------------------------------------------------------------
Start Testing CoolList:
-----------------------------------------------------------------------------

*** Testing CoolList of Int ***

 Test 001:                                      CoolList<int> l0 -->   PASSED
 Test 002:                                   CoolList<int> l1(3) -->   PASSED
 Test 003:                                CoolList<int> l2(2,l1) -->   PASSED
 Test 004:                                CoolList<int> l3(1,l2) -->   PASSED
 Test 005:                             CoolList<int> l4(3,1,2,3) -->   PASSED
 Test 006:                               CoolList<int> l41(1, 0) -->   PASSED
 Test 007:                            CoolList<int> l42(2, 0, 1) -->   PASSED
 Test 008:                         CoolList<int> l43(3, 0, 1, 2) -->   PASSED
 Test 009:                                  CoolList<int> l5(l4) -->   PASSED
 Test 010:                                              l3 == l4 -->   PASSED
 Test 011:                                                 l5[2] -->   PASSED
 Test 012:                                             l5.get(1) -->   PASSED
 Test 013:                                              l5[1]=43 -->   PASSED
 Test 014:                                          l5.put(55,1) -->   PASSED
 Test 015:                                       l5.tail(ltemp1) -->   PASSED
 Test 016:                                     l5.tail(ltemp1,0) -->   PASSED
 Test 017:                                     l5.tail(ltemp1,3) -->   PASSED
 Test 018:                                     l5.tail(ltemp1,5) -->   PASSED
 Test 019:                                    l5.last(ltemp1, 0) -->   PASSED
 Test 020:                                       l5.last(ltemp1) -->   PASSED
 Test 021:                                     l5.last(ltemp1,2) -->   PASSED
 Test 022:                                     l5.last(ltemp1,3) -->   PASSED
 Test 023:                                     l5.last(ltemp1,5) -->   PASSED
 Test 024:                                         l2.is_empty() -->   PASSED
 Test 025:                                           l3.length() -->   PASSED
****warning: copy from argument into *this****
 Test 026:                                l6.but_last(ltemp2, 0) -->   PASSED
 Test 027:                                   l6.but_last(ltemp2) -->   PASSED
 Test 028:                                l6.but_last(ltemp2, 2) -->   PASSED
 Test 029:                                l6.but_last(ltemp2, 4) -->   PASSED
 Test 030:                                l6.but_last(ltemp2, 5) -->   PASSED
 Test 031:                                            l6.clear() -->   PASSED
 Test 032:                                         l6.is_empty() -->   PASSED
 Test 033:                                           l6.length() -->   PASSED
****warning: copy from argument into *this****
 Test 034:                                       l6.position(33) -->   PASSED
 Test 035:                                        l6.position(2) -->   PASSED
****warning: copy from argument into *this****
 Test 036:                                           l9.copy(l4) -->   PASSED
 Test 037:                                               l9 = l4 -->   PASSED
 Test 038:                                          l6.reverse() -->   PASSED
 Test 039:                                       l6.push_end(66) -->   PASSED
 Test 040:                                           l6.push(77) -->   PASSED
 Test 041:                                       l6.push_new(88) -->   PASSED
 Test 042:                                       l6.push_new(22) -->   PASSED
 Test 043:                                              l6.pop() -->   PASSED
 Test 044:                                         l6.append(l2) -->   PASSED
 Test 045:                                        l6.prepend(l4) -->   PASSED
****warning: copy from argument into *this****
 Test 046:                                   l6.set_tail(l2, 14) -->   PASSED
 Test 047:                                l6.set_tail(l2, 14) == -->   PASSED
 Test 048:                                     l6.set_tail(l2,4) -->   PASSED
 Test 049:                                  l6.set_tail(l2,4) == -->   PASSED
 Test 050:                               l6.set_tail(l2,4) value -->   PASSED
 Test 051:                                       l6.set_tail(l2) -->   PASSED
 Test 052:                                     l6.set_tail(l2,0) -->   PASSED
****warning: copy from argument into *this****
 Test 053:                                         l8.remove(77) -->   PASSED
 Test 054:                                         l8.remove(44) -->   PASSED
 Test 055:                               l11.remove_duplicates() -->   PASSED
****warning: copy from argument into *this****
 Test 056:                                     l8.replace(66,22) -->   PASSED
 Test 057:                                     l8.replace(22,55) -->   PASSED
****warning: copy from argument into *this****
 Test 058:                                 l8.replace_all(66,22) -->   PASSED
 Test 059:                                 l8.replace_all(55,22) -->   PASSED
****warning: copy from argument into *this****
 Test 060:                               l8.insert_after(111,44) -->   PASSED
 Test 061:                               l8.insert_after(111,22) -->   PASSED
****warning: copy from argument into *this****
 Test 062:                              l8.insert_before(222,44) -->   PASSED
 Test 063:                              l8.insert_before(222,22) -->   PASSED
 Test 064:                              l8.insert_before(333,11) -->   PASSED
 Test 065:                                           l2.find(33) -->   PASSED
 Test 066:                                            l2.find(2) -->   PASSED
 Test 067:                                         l2.search(l3) -->   PASSED
 Test 068:                                         l2.search(l1) -->   PASSED
 Test 069:                                         l2.search(l4) -->   PASSED
 Test 070:                                         l4.search(l2) -->   PASSED
 Test 071:                                         l1.search(l2) -->   PASSED
 Test 072:                                 l2.member(ltemp1, 22) -->   PASSED
 Test 073:                                 l2.member(ltemp1, 44) -->   PASSED
 Test 074:                                  l2.member(ltemp1, 3) -->   PASSED
 Test 075:                                l2.sublist(ltemp1, l3) -->   PASSED
 Test 076:                                l2.sublist(ltemp1, l1) -->   PASSED
 Test 077:                                l2.sublist(ltemp1, l4) -->   PASSED
 Test 078:                                l4.sublist(ltemp1, l2) -->   PASSED
 Test 079:                                l1.sublist(ltemp1, l2) -->   PASSED
 Test 080:                               l5.set_intersection(l6) -->   PASSED
 Test 081:                                      l5.set_union(l6) -->   PASSED
 Test 082:                                 l5.set_difference(l6) -->   PASSED
****warning: copy from argument into *this****
 Test 083:                                        l5.set_xor(l6) -->   PASSED
****warning: copy from argument into *this****
 Test 084:                                          l9 = l7 + l8 -->   PASSED
 Test 085:                                             l7 += l10 -->   PASSED
 Test 086:                                            l11 &= l12 -->   PASSED
 Test 087:                                            l11 |= l12 -->   PASSED
 Test 088:                                            l11 -= l12 -->   PASSED
****warning: copy from argument into *this****
 Test 089:                                            l11 ^= l12 -->   PASSED
****warning: copy from argument into *this****
 Test 090:                                       l13 = l11 & l12 -->   PASSED
****warning: copy from argument into *this****
 Test 091:                                       l13 = l11 | l12 -->   PASSED
****warning: copy from argument into *this****
 Test 092:                                       l13 = l11 - l12 -->   PASSED
****warning: copy from argument into *this****
****warning: copy from argument into *this****
 Test 093:                                       l13 = l11 ^ l12 -->   PASSED
 Test 094:                          l1.merge(l2,&my_compare_int) -->   PASSED
 Test 095:                          l4.merge(l2,&my_compare_int) -->   PASSED
 Test 096:                              l2.sort(&my_compare_int) -->   PASSED
 Test 097:                              l3.sort(&my_compare_int) -->   PASSED
 Test 098:                                             l1.next() -->   PASSED
 Test 099:                                   l1.insert_after(55) -->   PASSED
 Test 100:                                             l1.prev() -->   PASSED
 Test 101:                                  l1.insert_before(66) -->   PASSED
 Test 102:                                           l1.remove() -->   PASSED
 Test 103:                                           l1.remove() -->   PASSED
 Test 104:                                         l1.position() -->   PASSED
 Test 105:                                     l1.next_union(l2) -->   PASSED
 Test 106:                                     l1.next_union(l2) -->   PASSED
 Test 107:                                     l1.next_union(l2) -->   PASSED
 Test 108:                                     l1.next_union(l2) -->   PASSED
 Test 109:                              l1.next_intersection(l2) -->   PASSED
 Test 110:                              l1.next_intersection(l2) -->   PASSED
 Test 111:                              l1.next_intersection(l2) -->   PASSED
 Test 112:                                l1.next_difference(l2) -->   PASSED
 Test 113:                                l1.next_difference(l2) -->   PASSED
 Test 114:                                       l1.next_xor(l2) -->   PASSED
 Test 115:                                       l1.next_xor(l2) -->   PASSED
 Test 116:                                       l1.next_xor(l2) -->   PASSED

*** Testing List of Double ***

 Test 117:                                   CoolList<double> l0 -->   PASSED
 Test 118:                    CoolList<double> l4(3,1.0,2.0,3.0) -->   PASSED
 Test 119:                               CoolList<double> l5(l4) -->   PASSED
 Test 120:                                                 l5[2] -->   PASSED
 Test 121:                                             l5.get(1) -->   PASSED
 Test 122:                                            l5[1]=43.0 -->   PASSED
 Test 123:                                        l5.put(55.0,1) -->   PASSED
 Test 124:                                       l5.tail(ltemp1) -->   PASSED
 Test 125:                                     l5.tail(ltemp1,0) -->   PASSED
 Test 126:                                     l5.tail(ltemp1,3) -->   PASSED
 Test 127:                                     l5.tail(ltemp1,5) -->   PASSED
 Test 128:                                     l5.last(ltemp1,0) -->   PASSED
 Test 129:                                       l5.last(ltemp1) -->   PASSED
 Test 130:                                     l5.last(ltemp1,2) -->   PASSED
 Test 131:                                     l5.last(ltemp1,3) -->   PASSED
 Test 132:                                     l5.last(ltemp1,5) -->   PASSED
 Test 133:                              CoolList<double> l1(3.0) -->   PASSED
 Test 134:                           CoolList<double> l2(2.0,l1) -->   PASSED
 Test 135:                           CoolList<double> l3(1.0,l2) -->   PASSED
 Test 136:                    CoolList<double> l4(3,1.0,2.0,3.0) -->   PASSED
 Test 137:                                              l3 == l4 -->   PASSED
****warning: copy from argument into *this****
 Test 138:                                l6.but_last(ltemp2, 0) -->   PASSED
 Test 139:                                   l6.but_last(ltemp2) -->   PASSED
 Test 140:                               l6.but_last(ltemps2, 2) -->   PASSED
 Test 141:                                l6.but_last(ltemp2, 4) -->   PASSED
 Test 142:                                l6.but_last(ltemp2, 5) -->   PASSED
 Test 143:                                            l6.clear() -->   PASSED
 Test 144:                                         l6.is_empty() -->   PASSED
 Test 145:                                         l2.is_empty() -->   PASSED
 Test 146:                                           l6.length() -->   PASSED
 Test 147:                                           l3.length() -->   PASSED
****warning: copy from argument into *this****
 Test 148:                                     l6.position(33.0) -->   PASSED
 Test 149:                                      l6.position(2.0) -->   PASSED
****warning: copy from argument into *this****
 Test 150:                                           l9.copy(l4) -->   PASSED
 Test 151:                                               l9 = l4 -->   PASSED
 Test 152:                                          l6.reverse() -->   PASSED
 Test 153:                                     l6.push_end(66.0) -->   PASSED
 Test 154:                                         l6.push(77.0) -->   PASSED
 Test 155:                                     l6.push_new(88.0) -->   PASSED
 Test 156:                                     l6.push_new(22.0) -->   PASSED
 Test 157:                                              l6.pop() -->   PASSED
 Test 158:                                         l6.append(l2) -->   PASSED
 Test 159:                                        l6.prepend(l4) -->   PASSED
****warning: copy from argument into *this****
 Test 160:                                   l6.set_tail(l2, 14) -->   PASSED
 Test 161:                                     l6.set_tail(l2,4) -->   PASSED
 Test 162:                                       l6.set_tail(l2) -->   PASSED
 Test 163:                                     l6.set_tail(l2,0) -->   PASSED
****warning: copy from argument into *this****
 Test 164:                                       l8.remove(77.0) -->   PASSED
 Test 165:                                       l8.remove(44.0) -->   PASSED
 Test 166:                               l11.remove_duplicates() -->   PASSED
****warning: copy from argument into *this****
 Test 167:                                 l8.replace(66.0,22.0) -->   PASSED
****warning: copy from argument into *this****
 Test 168:                                 l8.replace(22.0,55.0) -->   PASSED
****warning: copy from argument into *this****
 Test 169:                             l8.replace_all(66.0,22.0) -->   PASSED
****warning: copy from argument into *this****
 Test 170:                             l8.replace_all(55.0,22.0) -->   PASSED
****warning: copy from argument into *this****
 Test 171:                           l8.insert_after(111.0,44.0) -->   PASSED
****warning: copy from argument into *this****
 Test 172:                           l8.insert_after(111.0,22.0) -->   PASSED
****warning: copy from argument into *this****
 Test 173:                          l8.insert_before(222.0,44.0) -->   PASSED
 Test 174:                          l8.insert_before(222.0,22.0) -->   PASSED
 Test 175:                          l8.insert_before(333.0,11.0) -->   PASSED
 Test 176:                                         l2.find(33.0) -->   PASSED
 Test 177:                                          l2.find(2.0) -->   PASSED
 Test 178:                                         l2.search(l3) -->   PASSED
 Test 179:                                         l2.search(l1) -->   PASSED
 Test 180:                                         l2.search(l4) -->   PASSED
 Test 181:                                         l4.search(l2) -->   PASSED
 Test 182:                                         l1.search(l2) -->   PASSED
 Test 183:                               l2.member(ltemp1, 22.0) -->   PASSED
 Test 184:                               l2.member(ltemp1, 44.0) -->   PASSED
 Test 185:                                l2.member(ltemp1, 3.0) -->   PASSED
 Test 186:                                 l2.sublist(ltemp, l3) -->   PASSED
 Test 187:                                l2.sublist(ltemp1, l1) -->   PASSED
 Test 188:                                l2.sublist(ltemp1, l4) -->   PASSED
 Test 189:                                l4.sublist(ltemp1, l2) -->   PASSED
 Test 190:                                l1.sublist(ltemp1, l2) -->   PASSED
 Test 191:                               l5.set_intersection(l6) -->   PASSED
 Test 192:                                      l5.set_union(l6) -->   PASSED
 Test 193:                                 l5.set_difference(l6) -->   PASSED
****warning: copy from argument into *this****
 Test 194:                                        l5.set_xor(l6) -->   PASSED
****warning: copy from argument into *this****
 Test 195:                                          l9 = l7 + l8 -->   PASSED
 Test 196:                                             l7 += l10 -->   PASSED
 Test 197:                                            l11 &= l12 -->   PASSED
 Test 198:                                            l11 |= l12 -->   PASSED
 Test 199:                                            l11 -= l12 -->   PASSED
****warning: copy from argument into *this****
 Test 200:                                            l11 ^= l12 -->   PASSED
****warning: copy from argument into *this****
 Test 201:                                       l13 = l11 & l12 -->   PASSED
****warning: copy from argument into *this****
 Test 202:                                       l13 = l11 | l12 -->   PASSED
****warning: copy from argument into *this****
 Test 203:                                       l13 = l11 - l12 -->   PASSED
****warning: copy from argument into *this****
****warning: copy from argument into *this****
 Test 204:                                       l13 = l11 ^ l12 -->   PASSED
 Test 205:                       l1.merge(l2,&my_compare_double) -->   PASSED
 Test 206:                           l2.sort(&my_compare_double) -->   PASSED
 Test 207:                           l3.sort(&my_compare_double) -->   PASSED
 Test 208:                                             l1.next() -->   PASSED
 Test 209:                                 l1.insert_after(55.0) -->   PASSED
 Test 210:                                             l1.prev() -->   PASSED
 Test 211:                                l1.insert_before(66.0) -->   PASSED
 Test 212:                                           l1.remove() -->   PASSED
 Test 213:                                           l1.remove() -->   PASSED
 Test 214:                                         l1.position() -->   PASSED
 Test 215:                                     l1.next_union(l2) -->   PASSED
 Test 216:                                     l1.next_union(l2) -->   PASSED
 Test 217:                                     l1.next_union(l2) -->   PASSED
 Test 218:                                     l1.next_union(l2) -->   PASSED
 Test 219:                              l1.next_intersection(l2) -->   PASSED
 Test 220:                              l1.next_intersection(l2) -->   PASSED
 Test 221:                              l1.next_intersection(l2) -->   PASSED
 Test 222:                                l1.next_difference(l2) -->   PASSED
 Test 223:                                l1.next_difference(l2) -->   PASSED
 Test 224:                                       l1.next_xor(l2) -->   PASSED
 Test 225:                                       l1.next_xor(l2) -->   PASSED
 Test 226:                                       l1.next_xor(l2) -->   PASSED

*** Testing List of Char* ***

 Test 227:                                    CoolList<char*> l0 -->   PASSED
 Test 228:                                 CoolList<char*> l1(c) -->   PASSED
 Test 229:                              CoolList<char*> l2(b,l1) -->   PASSED
 Test 230:                              CoolList<char*> l3(a,l2) -->   PASSED
 Test 231:                           CoolList<char*> l4(3,a,b,c) -->   PASSED
 Test 232:                                CoolList<char*> l5(l4) -->   PASSED
 Test 233:                                                l3==l4 -->   PASSED
 Test 234:                                               l4[2]=d -->   PASSED

*** Testing List of Char ***

 Test 235:                                     CoolList<char> l0 -->   PASSED
 Test 236:                                  CoolList<char> l1(c) -->   PASSED
 Test 237:                               CoolList<char> l2(b,l1) -->   PASSED
 Test 238:                               CoolList<char> l3(a,l2) -->   PASSED
 Test 239:                                 CoolList<char> l5(l3) -->   PASSED
 Test 240:                                                l3==l5 -->   PASSED
(a b c)(a b c)
 Test 241:                                               l5[2]=d -->   PASSED

*** Testing List of Vector of Int ***

 Test 242:                         CoolList<CoolVector<int> > l0 -->   PASSED
 Test 243:                     CoolList<CoolVector<int> > l1(v1) -->   PASSED
 Test 244:             CoolList<CoolVector<int>*> l2(2,&v1,&v2); -->   PASSED
 Test 245:               CoolList<CoolVector<int> > l3(2,v1,v2); -->   PASSED

*** Testing List of List ***

 Test 246:                       CoolList<CoolList<int> > l2(l1) -->   PASSED
 Test 247:                      CoolList<CoolList<int>*> l4(&l1) -->   PASSED
 Test 248:                       CoolList<CoolList<int>*> l6(l5) -->   PASSED
 Test 249:                  CoolList<CoolList<int> > l3(2,l1,l1) -->   PASSED
-----------------------------------------------------------------------------
CoolList Test Summary: 249 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_lis
PASS compiling test_mat
-----------------------------------------------------------------------------
Start Testing CoolMatrix:
-----------------------------------------------------------------------------
 Test 001:                               CoolMatrix<int> m0(2,2) -->   PASSED
 Test 002:                               CoolMatrix<int> m1(3,4) -->   PASSED
 Test 003:                             CoolMatrix<int> m2(2,2,2) -->   PASSED
 Test 004:                                                  m0=2 -->   PASSED
 Test 005:                                              m0 == m2 -->   PASSED
 Test 006:                                            (m0 == m2) -->   PASSED
 Test 007:                                         m2.put(1,1,3) -->   PASSED
 Test 008:                                           m2.get(1,1) -->   PASSED
 Test 009:                                              m0 == m2 -->   PASSED
 Test 010:                                              m0 != m2 -->   PASSED
 Test 011:                                            (m0 == m2) -->   PASSED
 Test 012:                                            m1.fill(3) -->   PASSED
 Test 013:                                            m2.fill(2) -->   PASSED
 Test 014:                                       m3(1,3,3,1,2,3) -->   PASSED
 Test 015:                                CoolMatrix<int> m4(m3) -->   PASSED
 Test 016:                                                 m0=m2 -->   PASSED
 Test 017:                                               m0=m2+3 -->   PASSED
 Test 018:                                               m0=3+m2 -->   PASSED
 Test 019:                                              m0+=(-3) -->   PASSED
 Test 020:                                              m0-=(-3) -->   PASSED
 Test 021:                                               m0=m2-3 -->   PASSED
 Test 022:                                               m0=3-m2 -->   PASSED
 Test 023:                                               m0= -m2 -->   PASSED
 Test 024:                                              m5=m0+m2 -->   PASSED
 Test 025:                                              m5=m0-m2 -->   PASSED
 Test 026:                                                m0+=m2 -->   PASSED
 Test 027:                                                m0-=m2 -->   PASSED
 Test 028:                                               m4=m3*5 -->   PASSED
 Test 029:                                               m4=5*m3 -->   PASSED
 Test 030:                                                 m3*=5 -->   PASSED
 Test 031:                                               m4=m3/5 -->   PASSED
 Test 032:                                                 m3/=5 -->   PASSED
 Test 033:                     CoolMatrix<int> m6(2,2,4,1,2,3,4) -->   PASSED
 Test 034:                     CoolMatrix<int> m7(2,2,4,5,6,7,8) -->   PASSED
 Test 035:                                              m5=m6*m7 -->   PASSED
 Test 036:                                                m6*=m7 -->   PASSED
 Test 037:                                              c1=m6*c0 -->   PASSED
 Test 038:                                              r1=r0*m6 -->   PASSED
 Test 039:                                                r0*=m6 -->   PASSED
 Test 040:                                                m6*=c0 -->   PASSED
 Test 041:                                                m(i,j) -->   PASSED
 Test 042:                                         m.transpose() -->   PASSED
 Test 043:                                               m.abs() -->   PASSED
 Test 044:                                              m.sign() -->   PASSED
 Test 045:                                  element_product(m,m) -->   PASSED
 Test 046:                               element_quotient(m,[2]) -->   PASSED
 Test 047:                                     m.update(m.abs()) -->   PASSED
 Test 048:                                    m.extract(1,1,1,1) -->   PASSED
 Test 049:                                     m.update([4],1,1) -->   PASSED
 Test 050:                                                  v(i) -->   PASSED
 Test 051:                                    dot_product(v1,v2) -->   PASSED
 Test 052:                                             4d-v=3d-v -->   PASSED
 Test 053:                                       cross_3d(v1,v2) -->   PASSED
 Test 054:                                       cross_3d(v2,v3) -->   PASSED
 Test 055:                                       cross_3d(v1,v3) -->   PASSED
 Test 056:                                       cross_2d(v1,v2) -->   PASSED
 Test 057:                            CoolMatrix<double> d0(2,2) -->   PASSED
 Test 058:                            CoolMatrix<double> d1(3,4) -->   PASSED
 Test 059:                        CoolMatrix<double> d2(2,2,2.0) -->   PASSED
 Test 060:                                                d0=2.0 -->   PASSED
 Test 061:                                        d0.set_compare -->   PASSED
 Test 062:                                              d0 == d2 -->   PASSED
 Test 063:                                            (d0 == d2) -->   PASSED
 Test 064:                                       d2.put(1,1,3.0) -->   PASSED
 Test 065:                                           d2.get(1,1) -->   PASSED
 Test 066:                                              d0 == d2 -->   PASSED
 Test 067:                                              d0 != d2 -->   PASSED
 Test 068:                                            (d0 == d2) -->   PASSED
 Test 069:                                          d1.fill(3.0) -->   PASSED
 Test 070:                                          d2.fill(3.0) -->   PASSED
 Test 071:                                 d3(1,3,3,1.0,2.0,3.0) -->   PASSED
 Test 072:                             CoolMatrix<double> d4(d3) -->   PASSED
 Test 073:                                                 d0=d2 -->   PASSED
 Test 074:                                             d0=d2+3.0 -->   PASSED
 Test 075:                                            d0+=(-3.0) -->   PASSED
 Test 076:                                              d5=d0+d2 -->   PASSED
 Test 077:                                                d0+=d2 -->   PASSED
 Test 078:                                             d4=d3*5.0 -->   PASSED
 Test 079:                                               d3*=5.0 -->   PASSED
 Test 080:          CoolMatrix<double> d6(2,2,4,1.0,2.0,3.0,4.0) -->   PASSED
 Test 081:          CoolMatrix<double> d7(2,2,4,5.0,6.0,7.0,8.0) -->   PASSED
 Test 082:                                              d5=d6*d7 -->   PASSED
 Test 083:                                                d6*=d7 -->   PASSED
19 22 
43 50 
=19 22 
43 50 

 Test 084:                                                    << -->   PASSED
 Test 085:                                             operator+ -->   PASSED
 Test 086:                                             operator* -->   PASSED
 Test 087:                                        m1.determinant -->   PASSED
 Test 088:                                        m2.determinant -->   PASSED
 Test 089:                                   (m1*m2).determinant -->   PASSED
 Test 090:                                        d0.determinant -->   PASSED
 Test 091:                                        d1.determinant -->   PASSED
 Test 092:                                        d2.determinant -->   PASSED
 Test 093:                             (const int*) m.data_block -->   PASSED
 Test 094:                              matrix(i,j)==block[i][j] -->   PASSED
 Test 095:                                    (const int*) block -->   PASSED
 Test 096:                              block[i][j]==matrix(i,j) -->   PASSED
 Test 097:                          (const double*) m.data_block -->   PASSED
 Test 098:                              matrix(i,j)==block[i][j] -->   PASSED
 Test 099:                                 (const double*) block -->   PASSED
 Test 100:                              block[i][j]==matrix(i,j) -->   PASSED
-----------------------------------------------------------------------------
CoolMatrix Test Summary: 100 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_mat
PASS compiling test_nod
-----------------------------------------------------------------------------
Start Testing CoolN_Node and CoolD_Node:
-----------------------------------------------------------------------------
 Test 001:                                CoolN_Node<short,3> n0 -->   PASSED
 Test 002:                                             n0.set(4) -->   PASSED
 Test 003:                             CoolN_Node<short,3> n1(3) -->   PASSED
 Test 004:                                              n1.get() -->   PASSED
 Test 005:                            CoolN_Node<short,3> n2(n1) -->   PASSED
 Test 006:                             CoolN_Node<short,3> n3(5) -->   PASSED
 Test 007:                                              n3.get() -->   PASSED
 Test 008:                                             n1.set(4) -->   PASSED
 Test 009:                                           n0[0] = &n1 -->   PASSED
 Test 010:                                          n0.is_leaf() -->   PASSED
 Test 011:                                n0.insert_before(n2,0) -->   PASSED
 Test 012:                                          n0[0] == &n2 -->   PASSED
 Test 013:                                          n0[1] == &n1 -->   PASSED
 Test 014:                                 n0.insert_after(n3,0) -->   PASSED
 Test 015:                                          n0[0] == &n2 -->   PASSED
 Test 016:                                          n0[1] == &n3 -->   PASSED
 Test 017:                                          n0[2] == &n1 -->   PASSED
 Test 018:                            CoolN_Node<CoolString,3> n -->   PASSED
 Test 019:                             n8.set(CoolString("AAA")) -->   PASSED
 Test 020:        CoolN_Node<CoolString,3> n9(CoolString("BBB")) -->   PASSED
 Test 021:                                              n9.get() -->   PASSED
 Test 022:                      CoolN_Node<CoolString,3> n10(n9) -->   PASSED
 Test 023:       CoolN_Node<CoolString,3> n11(CoolString("CCC")) -->   PASSED
 Test 024:                                             n11.get() -->   PASSED
 Test 025:                             n9.set(CoolString("DDD")) -->   PASSED
 Test 026:                                           n8[0] = &n9 -->   PASSED
 Test 027:                                          n8.is_leaf() -->   PASSED
 Test 028:                               n8.insert_before(n10,0) -->   PASSED
 Test 029:                                         n8[0] == &n10 -->   PASSED
 Test 030:                                          n8[1] == &n9 -->   PASSED
 Test 031:                                n8.insert_after(n11,0) -->   PASSED
 Test 032:                                         n8[0] == &n10 -->   PASSED
 Test 033:                                         n8[1] == &n11 -->   PASSED
 Test 034:                                          n8[2] == &n9 -->   PASSED
 Test 035:                                CoolD_Node<short,3> d0 -->   PASSED
 Test 036:                                             d0.set(4) -->   PASSED
 Test 037:                             CoolD_Node<short,3> d1(3) -->   PASSED
 Test 038:                                              d1.get() -->   PASSED
 Test 039:                            CoolD_Node<short,3> d2(d1) -->   PASSED
 Test 040:                             CoolD_Node<short,3> d3(5) -->   PASSED
 Test 041:                                              d3.get() -->   PASSED
 Test 042:                                             d1.set(4) -->   PASSED
 Test 043:                                           d0[0] = &d1 -->   PASSED
 Test 044:                                          d0.is_leaf() -->   PASSED
 Test 045:                                d0.insert_before(d2,0) -->   PASSED
 Test 046:                                          d0[0] == &d2 -->   PASSED
 Test 047:                                          d0[1] == &d1 -->   PASSED
 Test 048:                                 d0.insert_after(d3,0) -->   PASSED
 Test 049:                                          d0[0] == &d2 -->   PASSED
 Test 050:                                          d0[1] == &d3 -->   PASSED
 Test 051:                                          d0[2] == &d1 -->   PASSED
 Test 052:                            CoolD_Node<CoolString,3> n -->   PASSED
 Test 053:                             d8.set(CoolString("AAA")) -->   PASSED
 Test 054:        CoolD_Node<CoolString,3> d9(CoolString("BBB")) -->   PASSED
 Test 055:                                              d9.get() -->   PASSED
 Test 056:                      CoolD_Node<CoolString,3> d10(d9) -->   PASSED
 Test 057:       CoolD_Node<CoolString,3> d11(CoolString("CCC")) -->   PASSED
 Test 058:                                             d11.get() -->   PASSED
 Test 059:                             d9.set(CoolString("DDD")) -->   PASSED
 Test 060:                                           d8[0] = &d9 -->   PASSED
 Test 061:                                          d8.is_leaf() -->   PASSED
 Test 062:                               d8.insert_before(d10,0) -->   PASSED
 Test 063:                                         d8[0] == &d10 -->   PASSED
 Test 064:                                          d8[1] == &d9 -->   PASSED
 Test 065:                                d8.insert_after(d11,0) -->   PASSED
 Test 066:                                         d8[0] == &d10 -->   PASSED
 Test 067:                                         d8[1] == &d11 -->   PASSED
 Test 068:                                          d8[2] == &d9 -->   PASSED
 Test 069:                                 CoolN_Node<char*,4> n -->   PASSED
 Test 070:                                         n4.set("AAA") -->   PASSED
 Test 071:                         CoolN_Node<char*,4> n5("BBB") -->   PASSED
 Test 072:                                              n5.get() -->   PASSED
 Test 073:                            CoolN_Node<char*,4> n6(n5) -->   PASSED
 Test 074:                         CoolN_Node<char*,4> n7("CCC") -->   PASSED
 Test 075:                                              n7.get() -->   PASSED
 Test 076:                                         n5.set("DDD") -->   PASSED
 Test 077:                                           n4[0] = &n5 -->   PASSED
 Test 078:                                          n4.is_leaf() -->   PASSED
 Test 079:                                n4.insert_before(n6,0) -->   PASSED
 Test 080:                                          n4[0] == &n6 -->   PASSED
 Test 081:                                          n4[1] == &n5 -->   PASSED
 Test 082:                                 n4.insert_after(n7,0) -->   PASSED
 Test 083:                                          n4[0] == &n6 -->   PASSED
 Test 084:                                          n4[1] == &n7 -->   PASSED
 Test 085:                                          n4[2] == &n5 -->   PASSED
 Test 086:                                 CoolD_Node<char*,4> n -->   PASSED
 Test 087:                                         d4.set("AAA") -->   PASSED
 Test 088:                         CoolD_Node<char*,4> d5("BBB") -->   PASSED
 Test 089:                                              d5.get() -->   PASSED
 Test 090:                            CoolD_Node<char*,4> d6(d5) -->   PASSED
 Test 091:                         CoolD_Node<char*,4> d7("CCC") -->   PASSED
 Test 092:                                              d7.get() -->   PASSED
 Test 093:                                         d5.set("DDD") -->   PASSED
 Test 094:                                           d4[0] = &d5 -->   PASSED
 Test 095:                                          d4.is_leaf() -->   PASSED
 Test 096:                                d4.insert_before(d6,0) -->   PASSED
 Test 097:                                          d4[0] == &d6 -->   PASSED
 Test 098:                                          d4[1] == &d5 -->   PASSED
 Test 099:                                 d4.insert_after(d7,0) -->   PASSED
 Test 100:                                          d4[0] == &d6 -->   PASSED
 Test 101:                                          d4[1] == &d7 -->   PASSED
 Test 102:                                          d4[2] == &d5 -->   PASSED
-----------------------------------------------------------------------------
CoolN_Node and CoolD_Node Test Summary: 102 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_nod
PASS compiling test_nt
-----------------------------------------------------------------------------
Start Testing CoolN_Tree:
-----------------------------------------------------------------------------
 Test 001:                            CoolN_Node<int,3> node1(7) -->   PASSED
 Test 002:                CoolN_Tree<CoolN_Node,int,3> n1(node1) -->   PASSED
 Test 003:                                            n1.reset() -->   PASSED
 Test 004:                                             n1.next() -->   PASSED
 Test 005:                                            n1.value() -->   PASSED
 Test 006:                            CoolN_Node<int,3> node2(3) -->   PASSED
 Test 007:                            CoolN_Node<int,3> node3(8) -->   PASSED
 Test 008:                            CoolN_Node<int,3> node4(9) -->   PASSED
 Test 009:                            CoolN_Node<int,3> node5(4) -->   PASSED
 Test 010:                            CoolN_Node<int,3> node6(2) -->   PASSED
 Test 011:                                          n1[0]=&node6 -->   PASSED
 Test 012:                                          n1[1]=&node3 -->   PASSED
 Test 013:                                          n1[2]=&node4 -->   PASSED
 Test 014:                                       node6[0]=&node2 -->   PASSED
 Test 015:                                       node3[0]=&node5 -->   PASSED
 Test 016:                                            n1.count() -->   PASSED
 Test 017:                               n1.traversal()=PREORDER -->   PASSED
 Test 018:                                            n1.reset() -->   PASSED
 Test 019:                                             n1.next() -->   PASSED
 Test 020:                                            n1.value() -->   PASSED
 Test 021:                                             n1.next() -->   PASSED
 Test 022:                                            n1.value() -->   PASSED
 Test 023:                                             n1.next() -->   PASSED
 Test 024:                                            n1.value() -->   PASSED
 Test 025:                                             n1.next() -->   PASSED
 Test 026:                                            n1.value() -->   PASSED
 Test 027:                                             n1.prev() -->   PASSED
 Test 028:                                            n1.value() -->   PASSED
 Test 029:                                             n1.next() -->   PASSED
 Test 030:                                            n1.value() -->   PASSED
 Test 031:                                             n1.next() -->   PASSED
 Test 032:                                            n1.value() -->   PASSED
 Test 033:                                             n1.next() -->   PASSED
 Test 034:                                            n1.value() -->   PASSED
 Test 035:                                             n1.next() -->   PASSED
 Test 036:                                            n1.reset() -->   PASSED
 Test 037:                                             n1.prev() -->   PASSED
 Test 038:                                            n1.value() -->   PASSED
 Test 039:                                             n1.prev() -->   PASSED
 Test 040:                                            n1.value() -->   PASSED
 Test 041:                                             n1.prev() -->   PASSED
 Test 042:                                            n1.value() -->   PASSED
 Test 043:                                             n1.prev() -->   PASSED
 Test 044:                                            n1.value() -->   PASSED
 Test 045:                                             n1.prev() -->   PASSED
 Test 046:                                            n1.value() -->   PASSED
 Test 047:                                             n1.prev() -->   PASSED
 Test 048:                                            n1.value() -->   PASSED
 Test 049:                                             n1.prev() -->   PASSED
 Test 050:                                n1.traversal()=INORDER -->   PASSED
 Test 051:                                            n1.reset() -->   PASSED
 Test 052:                                             n1.next() -->   PASSED
 Test 053:                                            n1.value() -->   PASSED
 Test 054:                                             n1.next() -->   PASSED
 Test 055:                                            n1.value() -->   PASSED
 Test 056:                                             n1.next() -->   PASSED
 Test 057:                                            n1.value() -->   PASSED
 Test 058:                                             n1.prev() -->   PASSED
 Test 059:                                            n1.value() -->   PASSED
 Test 060:                                             n1.next() -->   PASSED
 Test 061:                                            n1.value() -->   PASSED
 Test 062:                                             n1.next() -->   PASSED
 Test 063:                                            n1.value() -->   PASSED
 Test 064:                                             n1.next() -->   PASSED
 Test 065:                                            n1.value() -->   PASSED
 Test 066:                                             n1.next() -->   PASSED
 Test 067:                                            n1.value() -->   PASSED
 Test 068:                                             n1.next() -->   PASSED
 Test 069:                                            n1.reset() -->   PASSED
 Test 070:                                             n1.prev() -->   PASSED
 Test 071:                                            n1.value() -->   PASSED
 Test 072:                                             n1.prev() -->   PASSED
 Test 073:                                            n1.value() -->   PASSED
 Test 074:                                             n1.prev() -->   PASSED
 Test 075:                                            n1.value() -->   PASSED
 Test 076:                                             n1.prev() -->   PASSED
 Test 077:                                            n1.value() -->   PASSED
 Test 078:                                             n1.prev() -->   PASSED
 Test 079:                                            n1.value() -->   PASSED
 Test 080:                                             n1.prev() -->   PASSED
 Test 081:                                            n1.value() -->   PASSED
 Test 082:                                             n1.prev() -->   PASSED
 Test 083:                              n1.traversal()=POSTORDER -->   PASSED
 Test 084:                                            n1.reset() -->   PASSED
 Test 085:                                             n1.next() -->   PASSED
 Test 086:                                            n1.value() -->   PASSED
 Test 087:                                             n1.next() -->   PASSED
 Test 088:                                            n1.value() -->   PASSED
 Test 089:                                             n1.next() -->   PASSED
 Test 090:                                            n1.value() -->   PASSED
 Test 091:                                             n1.prev() -->   PASSED
 Test 092:                                            n1.value() -->   PASSED
 Test 093:                                             n1.next() -->   PASSED
 Test 094:                                            n1.value() -->   PASSED
 Test 095:                                             n1.next() -->   PASSED
 Test 096:                                            n1.value() -->   PASSED
 Test 097:                                             n1.next() -->   PASSED
 Test 098:                                            n1.value() -->   PASSED
 Test 099:                                             n1.next() -->   PASSED
 Test 100:                                            n1.value() -->   PASSED
 Test 101:                                             n1.next() -->   PASSED
 Test 102:                                            n1.reset() -->   PASSED
 Test 103:                                             n1.prev() -->   PASSED
 Test 104:                                            n1.value() -->   PASSED
 Test 105:                                             n1.prev() -->   PASSED
 Test 106:                                            n1.value() -->   PASSED
 Test 107:                                             n1.prev() -->   PASSED
 Test 108:                                            n1.value() -->   PASSED
 Test 109:                                             n1.prev() -->   PASSED
 Test 110:                                            n1.value() -->   PASSED
 Test 111:                                             n1.prev() -->   PASSED
 Test 112:                                            n1.value() -->   PASSED
 Test 113:                                             n1.prev() -->   PASSED
 Test 114:                                            n1.value() -->   PASSED
 Test 115:                                             n1.prev() -->   PASSED
 Test 116:                            CoolD_Node<int,3> node1(7) -->   PASSED
 Test 117:                CoolN_Tree<CoolD_Node,int,3> d1(node1) -->   PASSED
 Test 118:                                            d1.reset() -->   PASSED
 Test 119:                                             d1.next() -->   PASSED
 Test 120:                                            d1.value() -->   PASSED
 Test 121:                            CoolD_Node<int,3> node2(3) -->   PASSED
 Test 122:                            CoolD_Node<int,3> node3(8) -->   PASSED
 Test 123:                            CoolD_Node<int,3> node4(9) -->   PASSED
 Test 124:                            CoolD_Node<int,3> node5(4) -->   PASSED
 Test 125:                            CoolD_Node<int,3> node6(2) -->   PASSED
 Test 126:                                          d1[0]=&node6 -->   PASSED
 Test 127:                                          d1[1]=&node3 -->   PASSED
 Test 128:                                          d1[2]=&node4 -->   PASSED
 Test 129:                                       node6[0]=&node2 -->   PASSED
 Test 130:                                       node3[0]=&node5 -->   PASSED
 Test 131:                                            d1.count() -->   PASSED
 Test 132:                               d1.traversal()=PREORDER -->   PASSED
 Test 133:                                            d1.reset() -->   PASSED
 Test 134:                                             d1.next() -->   PASSED
 Test 135:                                            d1.value() -->   PASSED
 Test 136:                                             d1.next() -->   PASSED
 Test 137:                                            d1.value() -->   PASSED
 Test 138:                                             d1.next() -->   PASSED
 Test 139:                                            d1.value() -->   PASSED
 Test 140:                                             d1.next() -->   PASSED
 Test 141:                                            d1.value() -->   PASSED
 Test 142:                                             d1.next() -->   PASSED
 Test 143:                                            d1.value() -->   PASSED
 Test 144:                                             d1.next() -->   PASSED
 Test 145:                                            d1.value() -->   PASSED
 Test 146:                                             d1.next() -->   PASSED
 Test 147:                                d1.traversal()=INORDER -->   PASSED
 Test 148:                                            d1.reset() -->   PASSED
 Test 149:                                             d1.next() -->   PASSED
 Test 150:                                            d1.value() -->   PASSED
 Test 151:                                             d1.next() -->   PASSED
 Test 152:                                            d1.value() -->   PASSED
 Test 153:                                             d1.next() -->   PASSED
 Test 154:                                            d1.value() -->   PASSED
 Test 155:                                             d1.next() -->   PASSED
 Test 156:                                            d1.value() -->   PASSED
 Test 157:                                             d1.next() -->   PASSED
 Test 158:                                            d1.value() -->   PASSED
 Test 159:                                             d1.next() -->   PASSED
 Test 160:                                            d1.value() -->   PASSED
 Test 161:                                             d1.next() -->   PASSED
 Test 162:                              d1.traversal()=POSTORDER -->   PASSED
 Test 163:                                            d1.reset() -->   PASSED
 Test 164:                                             d1.next() -->   PASSED
 Test 165:                                            d1.value() -->   PASSED
 Test 166:                                             d1.next() -->   PASSED
 Test 167:                                            d1.value() -->   PASSED
 Test 168:                                             d1.next() -->   PASSED
 Test 169:                                            d1.value() -->   PASSED
 Test 170:                                             d1.next() -->   PASSED
 Test 171:                                            d1.value() -->   PASSED
 Test 172:                                             d1.next() -->   PASSED
 Test 173:                                            d1.value() -->   PASSED
 Test 174:                                             d1.next() -->   PASSED
 Test 175:                                            d1.value() -->   PASSED
 Test 176:                                             d1.next() -->   PASSED
 Test 177:                                 d1.clear(),d1.count() -->   PASSED
-----------------------------------------------------------------------------
CoolN_Tree Test Summary: 177 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_nt
PASS compiling test_pai
-----------------------------------------------------------------------------
Start Testing CoolPair:
-----------------------------------------------------------------------------
 Test 001:                                 CoolPair<int,char> p0 -->   PASSED
 Test 002:                          CoolPair<int,char> p1(1,'a') -->   PASSED
 Test 003:                             CoolPair<int,char> p2(p1) -->   PASSED
 Test 004:                                        p1.get_first() -->   PASSED
 Test 005:                                       p2.get_second() -->   PASSED
 Test 006:                                       p1.set_first(2) -->   PASSED
 Test 007:                                    p1.set_second('b') -->   PASSED
 Test 008:                                               p2 = p1 -->   PASSED
 Test 009:                                              p1 == p2 -->   PASSED
 Test 010:                                              p1 != p2 -->   PASSED
 Test 011:                                CoolPair<int,char*> p0 -->   PASSED
 Test 012:                       CoolPair<int,char*> p1(1,"AAA") -->   PASSED
 Test 013:                    p1.set_compare(&compare_int_charP) -->   PASSED
 Test 014:                            CoolPair<int,char*> p2(p1) -->   PASSED
 Test 015:                                        p1.get_first() -->   PASSED
 Test 016:                                       p1.get_second() -->   PASSED
 Test 017:                                       p2.get_second() -->   PASSED
 Test 018:                                       p1.set_first(2) -->   PASSED
 Test 019:                                  p1.set_second("BBB") -->   PASSED
 Test 020:                                               p2 = p1 -->   PASSED
 Test 021:                                              p1 == p2 -->   PASSED
 Test 022:                                              p1 != p2 -->   PASSED
 Test 023:                        CoolPair<double,CoolString> p0 -->   PASSED
 Test 024: CoolPair<double,CoolString> p1(1.0,CoolString("AAA")) -->   PASSED
 Test 025:                    CoolPair<double,CoolString> p2(p1) -->   PASSED
 Test 026:                                        p1.get_first() -->   PASSED
 Test 027:                                       p1.get_second() -->   PASSED
 Test 028:                                       p2.get_second() -->   PASSED
 Test 029:                                     p1.set_first(2.0) -->   PASSED
 Test 030:                      p1.set_second(CoolString("BBB")) -->   PASSED
 Test 031:                                               p2 = p1 -->   PASSED
 Test 032:                                              p1 == p2 -->   PASSED
 Test 033:                                              p1 != p2 -->   PASSED
-----------------------------------------------------------------------------
CoolPair Test Summary: 33 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_pai
PASS compiling test_pro
-----------------------------------------------------------------------------
Start Testing CoolProperty:
-----------------------------------------------------------------------------
 Test 001:                                                   get -->   PASSED
 Test 002:                                                   get -->   PASSED
 Test 003:                                                   put -->   PASSED
 Test 004:                                                   get -->   PASSED
 Test 005:                                                   get -->   PASSED
 Test 006:                                                   put -->   PASSED
 Test 007:                                                   get -->   PASSED
 Test 008:                                                  find -->   PASSED
 Test 009:                                                  find -->   PASSED
 Test 010:                                                   put -->   PASSED
 Test 011:                                                   get -->   PASSED
 Test 012:                                          remove(ints) -->   PASSED
 Test 013:                                          remove(ints) -->   PASSED
 Test 014:                                                   get -->   PASSED
 Test 015:                                                  puts -->   PASSED
 Test 016:                                                   put -->   PASSED
 Test 017:                                                   put -->   PASSED
[ [double (double)-15.6]  [long (long)10000]  [int (int)2]  [void* (void*)0xbeef]  [void2* (void*)0xdead]  ]=[ [double (double)-15.6]  [long (long)10000]  [int (int)2]  [void* (void*)0xbeef]  [void2* (void*)0xdead]  ]
 Test 018:                                                    << -->   PASSED
-----------------------------------------------------------------------------
CoolProperty Test Summary: 18 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_pro
PASS compiling test_que
-----------------------------------------------------------------------------
Start Testing CoolQueue:
-----------------------------------------------------------------------------
 Test 001:                                     CoolQueue<int> q0 -->   PASSED
 Test 002:                                  CoolQueue<int> q1(5) -->   PASSED
 Test 003:                                 CoolQueue<int> q2(10) -->   PASSED
 Test 004:                                           q1.get(foo) -->   PASSED
 Test 005:                                           q1.unget(4) -->   PASSED
 Test 006:                                           q1.length() -->   PASSED
 Test 007:                                              q1.get() -->   PASSED
 Test 008:                                           q1.length() -->   PASSED
 Test 009:                                             q2.put(4) -->   PASSED
 Test 010:                                            q2.unput() -->   PASSED
 Test 011:                                             q1.put(5) -->   PASSED
 Test 012:                                              q1.get() -->   PASSED
 Test 013:                                             q1.put(3) -->   PASSED
 Test 014:                                           q1.unget(2) -->   PASSED
 Test 015:                                             q1.put(4) -->   PASSED
 Test 016:                                           q1.length() -->   PASSED
 Test 017:                                           q1.unget(1) -->   PASSED
 Test 018:                                             q1.put(5) -->   PASSED
 Test 019:                                           q1.length() -->   PASSED
 Test 020:                                             q1.look() -->   PASSED
 Test 021:                                             q2.put(1) -->   PASSED
 Test 022:                                             q2.put(2) -->   PASSED
 Test 023:                                             q2.put(3) -->   PASSED
 Test 024:                                             q2.put(4) -->   PASSED
 Test 025:                                             q2.put(5) -->   PASSED
 Test 026:                                     q1.operator==(q2) -->   PASSED
 Test 027:                                            q1.find(5) -->   PASSED
 Test 028:                                            q2.find(6) -->   PASSED
 Test 029:                                           q1.remove() -->   PASSED
 Test 030:                                           q1.length() -->   PASSED
 Test 031:                                             q1.prev() -->   PASSED
 Test 032:                                            q2.find(5) -->   PASSED
 Test 033:                                             q2.next() -->   PASSED
 Test 034:                                             q2.next() -->   PASSED
 Test 035:                                            q2.value() -->   PASSED
 Test 036:                                          q2.remove(3) -->   PASSED
 Test 037:                                            q2.value() -->   PASSED
 Test 038:                                      q1.operator=(q2) -->   PASSED
 Test 039:                                     q2.operator!=(q1) -->   PASSED
 Test 040:                                            q2.reset() -->   PASSED
 Test 041:                                           q2.length() -->   PASSED
 Test 042:                                            q1.clear() -->   PASSED
 Test 043:                                           q1.length() -->   PASSED
 Test 044:                                         q1.is_empty() -->   PASSED
 Test 045:                                         q1.resize(10) -->   PASSED
 Test 046:                                           q1.length() -->   PASSED
 Test 047:                                         q1.capacity() -->   PASSED
 Test 048:                                CoolQueue<int> q3 = q2 -->   PASSED
 Test 049:                                  CoolQueue<double> q0 -->   PASSED
 Test 050:                               CoolQueue<double> q1(5) -->   PASSED
 Test 051:                              CoolQueue<double> q2(10) -->   PASSED
 Test 052:                                           q1.get(foo) -->   PASSED
 Test 053:                                         q1.unget(4.0) -->   PASSED
 Test 054:                                           q1.length() -->   PASSED
 Test 055:                                              q1.get() -->   PASSED
 Test 056:                                           q1.length() -->   PASSED
 Test 057:                                           q2.put(4.0) -->   PASSED
 Test 058:                                            q2.unput() -->   PASSED
 Test 059:                                           q1.put(5.0) -->   PASSED
 Test 060:                                              q1.get() -->   PASSED
 Test 061:                                           q1.put(3.0) -->   PASSED
 Test 062:                                         q1.unget(2.0) -->   PASSED
 Test 063:                                           q1.put(4.0) -->   PASSED
 Test 064:                                           q1.length() -->   PASSED
 Test 065:                                         q1.unget(1.0) -->   PASSED
 Test 066:                                           q1.put(5.0) -->   PASSED
 Test 067:                                           q1.length() -->   PASSED
 Test 068:                                             q1.look() -->   PASSED
 Test 069:                                             q2.put(1) -->   PASSED
 Test 070:                                             q2.put(2) -->   PASSED
 Test 071:                                             q2.put(3) -->   PASSED
 Test 072:                                             q2.put(4) -->   PASSED
 Test 073:                                             q2.put(5) -->   PASSED
 Test 074:                                     q1.operator==(q2) -->   PASSED
 Test 075:                                          q1.find(5.0) -->   PASSED
 Test 076:                                          q2.find(6.0) -->   PASSED
 Test 077:                                           q1.remove() -->   PASSED
 Test 078:                                           q1.length() -->   PASSED
 Test 079:                                             q1.prev() -->   PASSED
 Test 080:                                          q2.find(5.0) -->   PASSED
 Test 081:                                             q2.next() -->   PASSED
 Test 082:                                             q2.next() -->   PASSED
 Test 083:                                            q2.value() -->   PASSED
 Test 084:                                        q2.remove(3.0) -->   PASSED
 Test 085:                                            q2.value() -->   PASSED
 Test 086:                                      q1.operator=(q2) -->   PASSED
 Test 087:                                     q2.operator!=(q1) -->   PASSED
 Test 088:                                            q2.reset() -->   PASSED
 Test 089:                                           q2.length() -->   PASSED
 Test 090:                                            q1.clear() -->   PASSED
 Test 091:                                           q1.length() -->   PASSED
 Test 092:                                         q1.is_empty() -->   PASSED
 Test 093:                                         q1.resize(10) -->   PASSED
 Test 094:                                           q1.length() -->   PASSED
 Test 095:                                         q1.capacity() -->   PASSED
 Test 096:                             CoolQueue<double> q3 = q2 -->   PASSED
 Test 097:                                   CoolQueue<char*> q0 -->   PASSED
 Test 098:                                CoolQueue<char*> q1(5) -->   PASSED
 Test 099:                               CoolQueue<char*> q2(10) -->   PASSED
 Test 100:                                           q1.get(foo) -->   PASSED
 Test 101:                                       q1.unget("AAA") -->   PASSED
 Test 102:                                              q1.get() -->   PASSED
 Test 103:                                         q2.put("AAA") -->   PASSED
 Test 104:                                            q2.unput() -->   PASSED
 Test 105:                                         q1.put("BBB") -->   PASSED
 Test 106:                                              q1.get() -->   PASSED
 Test 107:                                         q1.put("CCC") -->   PASSED
 Test 108:                                       q1.unget("DDD") -->   PASSED
 Test 109:                                         q1.put("BBB") -->   PASSED
 Test 110:                                       q1.unget("EEE") -->   PASSED
 Test 111:                                         q1.put("AAA") -->   PASSED
 Test 112:                                             q1.look() -->   PASSED
 Test 113:                                         q2.put("EEE") -->   PASSED
 Test 114:                                         q2.put("DDD") -->   PASSED
 Test 115:                                         q2.put("CCC") -->   PASSED
 Test 116:                                         q2.put("BBB") -->   PASSED
 Test 117:                                         q2.put("AAA") -->   PASSED
 Test 118:                                     q1.operator==(q2) -->   PASSED
 Test 119:                                        q1.find("AAA") -->   PASSED
 Test 120:                                        q2.find("FFF") -->   PASSED
 Test 121:                                           q1.remove() -->   PASSED
 Test 122:                                             q1.prev() -->   PASSED
 Test 123:                                        q2.find("AAA") -->   PASSED
 Test 124:                                             q2.next() -->   PASSED
 Test 125:                                             q2.next() -->   PASSED
 Test 126:                                            q2.value() -->   PASSED
 Test 127:                                      q1.operator=(q2) -->   PASSED
 Test 128:                                     q2.operator!=(q1) -->   PASSED
 Test 129:                                            q2.reset() -->   PASSED
 Test 130:                                            q1.clear() -->   PASSED
 Test 131:                                         q1.is_empty() -->   PASSED
 Test 132:                                         q1.resize(10) -->   PASSED
 Test 133:                                         q1.capacity() -->   PASSED
 Test 134:                              CoolQueue<char*> q3 = q2 -->   PASSED
 Test 135:                              CoolQueue<CoolString> q0 -->   PASSED
 Test 136:                           CoolQueue<CoolString> q1(5) -->   PASSED
 Test 137:                          CoolQueue<CoolString> q2(10) -->   PASSED
 Test 138:                           q1.unget(CoolString("AAA")) -->   PASSED
 Test 139:                                              q1.get() -->   PASSED
 Test 140:                             q2.put(CoolString("AAA")) -->   PASSED
 Test 141:                                            q2.unput() -->   PASSED
 Test 142:                             q1.put(CoolString("BBB")) -->   PASSED
 Test 143:                                              q1.get() -->   PASSED
 Test 144:                             q1.put(CoolString("CCC")) -->   PASSED
 Test 145:                           q1.unget(CoolString("DDD")) -->   PASSED
 Test 146:                             q1.put(CoolString("BBB")) -->   PASSED
 Test 147:                           q1.unget(CoolString("EEE")) -->   PASSED
 Test 148:                             q1.put(CoolString("AAA")) -->   PASSED
 Test 149:                                             q1.look() -->   PASSED
 Test 150:                             q2.put(CoolString("EEE")) -->   PASSED
 Test 151:                             q2.put(CoolString("DDD")) -->   PASSED
 Test 152:                             q2.put(CoolString("CCC")) -->   PASSED
 Test 153:                             q2.put(CoolString("BBB")) -->   PASSED
 Test 154:                             q2.put(CoolString("AAA")) -->   PASSED
 Test 155:                                     q1.operator==(q2) -->   PASSED
 Test 156:                            q1.find(CoolString("AAA")) -->   PASSED
 Test 157:                                        q2.find("FFF") -->   PASSED
 Test 158:                                           q1.remove() -->   PASSED
 Test 159:                                             q1.prev() -->   PASSED
 Test 160:                            q2.find(CoolString("AAA")) -->   PASSED
 Test 161:                                             q2.next() -->   PASSED
 Test 162:                                             q2.next() -->   PASSED
 Test 163:                                            q2.value() -->   PASSED
 Test 164:                          q2.remove(CoolString("DDD")) -->   PASSED
 Test 165:                                            q2.value() -->   PASSED
 Test 166:                                      q1.operator=(q2) -->   PASSED
 Test 167:                                     q2.operator!=(q1) -->   PASSED
 Test 168:                                            q2.reset() -->   PASSED
 Test 169:                                           q2.length() -->   PASSED
 Test 170:                                            q1.clear() -->   PASSED
 Test 171:                                         q1.is_empty() -->   PASSED
 Test 172:                                         q1.resize(10) -->   PASSED
 Test 173:                                         q1.capacity() -->   PASSED
 Test 174:                         CoolQueue<CoolString> q3 = q2 -->   PASSED
-----------------------------------------------------------------------------
CoolQueue Test Summary: 174 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_que
PASS compiling test_ran
-----------------------------------------------------------------------------
Start Testing CoolRandom:
-----------------------------------------------------------------------------
 Test 001:                                 CoolRandom r1(SIMPLE) -->   PASSED
 Test 002:                                             r1.next() -->   PASSED
 Test 003:             for(i=0;i<100;i++) r1.next() != r1.next() -->   PASSED
 Test 004:                                CoolRandom r2(SHUFFLE) -->   PASSED
 Test 005:                                             r2.next() -->   PASSED
 Test 006:             for(i=0;i<100;i++) r2.next() != r2.next() -->   PASSED
 Test 007:                       CoolRandom r3(ONE_CONGRUENTIAL) -->   PASSED
 Test 008:                                             r3.next() -->   PASSED
 Test 009:             for(i=0;i<100;i++) r3.next() != r3.next() -->   PASSED
 Test 010:                     CoolRandom r4(THREE_CONGRUENTIAL) -->   PASSED
 Test 011:                                             r4.next() -->   PASSED
 Test 012:             for(i=0;i<100;i++) r4.next() != r4.next() -->   PASSED
 Test 013:                            CoolRandom r5(SUBTRACTIVE) -->   PASSED
 Test 014:                                             r5.next() -->   PASSED
 Test 015:             for(i=0;i<100;i++) r5.next() != r5.next() -->   PASSED
 Test 016:                       CoolRandom r6(SIMPLE,1,3.0,9.0) -->   PASSED
 Test 017:                                             r6.next() -->   PASSED
 Test 018:             for(i=0;i<100;i++) r6.next() != r6.next() -->   PASSED
 Test 019:                      CoolRandom r7(SHUFFLE,1,3.0,9.0) -->   PASSED
 Test 020:                                             r7.next() -->   PASSED
 Test 021:             for(i=0;i<100;i++) r7.next() != r7.next() -->   PASSED
 Test 022:             CoolRandom r8(ONE_CONGRUENTIAL,1,3.0,9.0) -->   PASSED
 Test 023:                                             r8.next() -->   PASSED
 Test 024:             for(i=0;i<100;i++) r8.next() != r8.next() -->   PASSED
 Test 025:           CoolRandom r9(THREE_CONGRUENTIAL,1,3.0,9.0) -->   PASSED
 Test 026:                                             r9.next() -->   PASSED
 Test 027:             for(i=0;i<100;i++) r9.next() != r9.next() -->   PASSED
 Test 028:                  CoolRandom r0(SUBTRACTIVE,1,3.0,9.0) -->   PASSED
 Test 029:                                             r0.next() -->   PASSED
 Test 030:             for(i=0;i<100;i++) r0.next() != r0.next() -->   PASSED
-----------------------------------------------------------------------------
CoolRandom Test Summary: 30 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_ran
PASS compiling test_rat
-----------------------------------------------------------------------------
Start Testing CoolRational:
-----------------------------------------------------------------------------
 Test 001:                                       CoolRational r1 -->   PASSED
 Test 002:                                  CoolRational r2(3,5) -->   PASSED
 Test 003:                                        r2.numerator() -->   PASSED
 Test 004:                                      r2.denominator() -->   PASSED
 Test 005:                                              r1 != r2 -->   PASSED
 Test 006:                                    CoolRational r3(9) -->   PASSED
 Test 007:                                        r3.numerator() -->   PASSED
 Test 008:                                      r3.denominator() -->   PASSED
 Test 009:                                 CoolRational r4(6,10) -->   PASSED
 Test 010:                                        r4.numerator() -->   PASSED
 Test 011:                                      r4.denominator() -->   PASSED
 Test 012:                                              r2 == r4 -->   PASSED
 Test 013:                                               r1 = r2 -->   PASSED
 Test 014:                                           r1.status() -->   PASSED
 Test 015:                                        r1.numerator() -->   PASSED
 Test 016:                                      r1.denominator() -->   PASSED
 Test 017:                                              r1 == r4 -->   PASSED
 Test 018:                                                   -r3 -->   PASSED
 Test 019:                                   CoolRational r5(r1) -->   PASSED
 Test 020:                                                   !r5 -->   PASSED
 Test 021:                                              r3=r1+r2 -->   PASSED
 Test 022:                                                r1+=r2 -->   PASSED
 Test 023:                                           r3.invert() -->   PASSED
 Test 024:                                              r5=r1+r3 -->   PASSED
 Test 025:                                                r1+=r3 -->   PASSED
 Test 026:                                               r4 = r1 -->   PASSED
 Test 027:                                   r5=r2-(r3.invert()) -->   PASSED
 Test 028:                                                r2-=r3 -->   PASSED
 Test 029:                                            short (r1) -->   PASSED
 Test 030:                                              int (r1) -->   PASSED
 Test 031:                                             long (r1) -->   PASSED
 Test 032:                                            float (r1) -->   PASSED
 Test 033:                                           double (r1) -->   PASSED
 Test 034:                                            r1.floor() -->   PASSED
 Test 035:                                          r1.ceiling() -->   PASSED
 Test 036:                                         r1.truncate() -->   PASSED
 Test 037:                                            r1.round() -->   PASSED
 Test 038:                                              r1 *= -1 -->   PASSED
 Test 039:                                            r1.floor() -->   PASSED
 Test 040:                                          r1.ceiling() -->   PASSED
 Test 041:                                         r1.truncate() -->   PASSED
 Test 042:                                            r1.round() -->   PASSED
 Test 043:                                               r4 < r1 -->   PASSED
 Test 044:                                              r4 <= r1 -->   PASSED
 Test 045:                                              r4 <= r4 -->   PASSED
 Test 046:                                               r1 > r4 -->   PASSED
 Test 047:                                              r1 >= r4 -->   PASSED
 Test 048:                                              r1 >= r1 -->   PASSED
 Test 049:                                                  ++r2 -->   PASSED
 Test 050:                                                  --r2 -->   PASSED
 Test 051:                                                 r1=r2 -->   PASSED
 Test 052:                                              r4=r2*r3 -->   PASSED
 Test 053:                                                r2*=r3 -->   PASSED
 Test 054:                                                 r2/r3 -->   PASSED
 Test 055:                                                r2/=r3 -->   PASSED
 Test 056:                                            r4%(r2/r3) -->   PASSED
 Test 057:                                           r4%=(r2/r3) -->   PASSED
-----------------------------------------------------------------------------
CoolRational Test Summary: 57 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_rat
PASS compiling test_reg
-----------------------------------------------------------------------------
Start Testing CoolRegexp:
-----------------------------------------------------------------------------
 Test 001:                                        rd1.is_valid() -->   PASSED
 Test 002:                                        rd1.is_valid() -->   PASSED
 Test 003:                                        rrr.is_valid() -->   PASSED
 Test 004:                                        rrr.is_valid() -->   PASSED
 Test 005:                               CoolRegexp r1(Hi There) -->   PASSED
 Test 006:                               r1.find(It is not here) -->   PASSED
 Test 007:                                        r1.find(strng) -->   PASSED
 Test 008:                                            r1.start() -->   PASSED
 Test 009:                                                r1.end -->   PASSED
 Test 010:                                     CoolRegexp r2(r1) -->   PASSED
 Test 011:                                                r1==r2 -->   PASSED
 Test 012:                                                r2==r1 -->   PASSED
 Test 013:                                     r2.deep_equal(r1) -->   PASSED
 Test 014:                                     r1.deep_equal(r2) -->   PASSED
 Test 015:                                        r2.find(strng) -->   PASSED
 Test 016:                                                r1==r2 -->   PASSED
 Test 017:                                                r2==r1 -->   PASSED
 Test 018:                                     r2.deep_equal(r1) -->   PASSED
 Test 019:                                     r1.deep_equal(r2) -->   PASSED
 Test 020:                                 r2.find(Its not here) -->   PASSED
 Test 021:                                                r1==r2 -->   PASSED
 Test 022:                                                r2==r1 -->   PASSED
 Test 023:                                     r2.deep_equal(r1) -->   PASSED
 Test 024:                                     r1.deep_equal(r2) -->   PASSED
 Test 025:                      r2.find(Another Hi Therestring.) -->   PASSED
 Test 026:                                                r1==r2 -->   PASSED
 Test 027:                                                r2==r1 -->   PASSED
 Test 028:                                                r1!=r2 -->   PASSED
 Test 029:                                                r2!=r1 -->   PASSED
 Test 030:                                     r2.deep_equal(r1) -->   PASSED
 Test 031:                                     r1.deep_equal(r2) -->   PASSED
 Test 032:                                       CoolRegexp r3() -->   PASSED
 Test 033:                                      r3.compile(hELl) -->   PASSED
 Test 034:                                       r3.find(strng2) -->   PASSED
 Test 035:                                                r1==r3 -->   PASSED
 Test 036:                                     r1.deep_equal(r3) -->   PASSED
 Test 037:                                            r3.start() -->   PASSED
 Test 038:                                              r3.end() -->   PASSED
 Test 039:                                       r3.find(strng3) -->   PASSED
 Test 040:                                                r4==r3 -->   PASSED
 Test 041:                                     r4.deep_equal(r3) -->   PASSED
 Test 042:                                  CoolRegexp rxp(^str) -->   PASSED
 Test 043:                                rxp.find(str at front) -->   PASSED
 Test 044:                                           rxp.start() -->   PASSED
 Test 045:                                             rxp.end() -->   PASSED
 Test 046:                             rxp.find(Str not present) -->   PASSED
 Test 047:                            rxp.find(not at str front) -->   PASSED
 Test 048:                                  rxp.find(at end str) -->   PASSED
 Test 049:                                     rxp.compile(str$) -->   PASSED
 Test 050:                                rxp.find(str at front) -->   PASSED
 Test 051:                             rxp.find(Str not present) -->   PASSED
 Test 052:                              rxp.find(not at str end) -->   PASSED
 Test 053:                                   rxp.find(at end str -->   PASSED
 Test 054:                                   rxp.compile(s..t.r) -->   PASSED
 Test 055:                                    rxp.find(so three) -->   PASSED
 Test 056:                               rxp.find(str too close) -->   PASSED
 Test 057:                            rxp.find(dl 32 s*4t0r ugh) -->   PASSED
 Test 058:                             rxp.find(too far s  t  r) -->   PASSED
 Test 059:                                  rxp.compile([ab1-9]) -->   PASSED
 Test 060:                                rxp.find(6 is the num) -->   PASSED
 Test 061:                              rxp.find(ugh b is not 1) -->   PASSED
 Test 062:                                           rxp.start() -->   PASSED
 Test 063:                                             rxp.end() -->   PASSED
 Test 064:                         rxp.find(this will not m'tch) -->   PASSED
 Test 065:                                 rxp.compile([^ab1-9]) -->   PASSED
 Test 066:                                 rxp.find(ab123QQ59ba) -->   PASSED
 Test 067:                                           rxp.start() -->   PASSED
 Test 068:                                             rxp.end() -->   PASSED
 Test 069:                               rxp.find(ab123456789ba) -->   PASSED
 Test 070:                                     rxp.compile(a *l) -->   PASSED
 Test 071:                                        rxp.find(a *l) -->   PASSED
 Test 072:                                           rxp.start() -->   PASSED
 Test 073:                                             rxp.end() -->   PASSED
 Test 074:                                 rxp.find(hello there) -->   PASSED
 Test 075:                                    rxp.find(<<<al>>>) -->   PASSED
 Test 076:                                     rxp.compile(a +l) -->   PASSED
 Test 077:                                        rxp.find(a *l) -->   PASSED
 Test 078:                                           rxp.start() -->   PASSED
 Test 079:                                             rxp.end() -->   PASSED
 Test 080:                                 rxp.find(hello there) -->   PASSED
 Test 081:                                    rxp.find(<<<al>>>) -->   PASSED
 Test 082:                                     rxp.compile(a ?l) -->   PASSED
 Test 083:                                        rxp.find(a *l) -->   PASSED
 Test 084:                                           rxp.start() -->   PASSED
 Test 085:                                             rxp.end() -->   PASSED
 Test 086:                                 rxp.find(hello there) -->   PASSED
 Test 087:                                    rxp.find(<<<al>>>) -->   PASSED
 Test 088:                                   rxp.compile((..p)b) -->   PASSED
 Test 089:                             rxp.find(rep drepa qrepb) -->   PASSED
 Test 090:                                           rxp.start() -->   PASSED
 Test 091:                                             rxp.end() -->   PASSED
 Test 092:                                   rxp.find(repreprep) -->   PASSED
 Test 093:                                   rxp.compile(d(..p)) -->   PASSED
 Test 094:                             rxp.find(rep drepa qrepb) -->   PASSED
 Test 095:                                           rxp.start() -->   PASSED
 Test 096:                                             rxp.end() -->   PASSED
 Test 097:                                   rxp.find(repreprep) -->   PASSED
 Test 098:                                                  find -->   PASSED
-----------------------------------------------------------------------------
CoolRegexp Test Summary: 98 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_reg
PASS compiling test_rng
-----------------------------------------------------------------------------
Start Testing CoolRange:
-----------------------------------------------------------------------------
 Test 001:                                 CoolRange<int,2,8> r1 -->   PASSED
 Test 002:                                           r1.low()==2 -->   PASSED
 Test 003:                                          r1.high()==8 -->   PASSED
 Test 004:                                             r1.set(4) -->   PASSED
 Test 005:                                                  r1() -->   PASSED
 Test 006:                                          int i = 2+r1 -->   PASSED
 Test 007:                             CoolRange<int,2,8> r2(r1) -->   PASSED
 Test 008:                          CoolRange<double,2.5,8.8> r1 -->   PASSED
 Test 009:                                         r1.low()==2.5 -->   PASSED
 Test 010:                                        r1.high()==8.8 -->   PASSED
 Test 011:                                           r1.set(4.3) -->   PASSED
 Test 012:                                                  r1() -->   PASSED
 Test 013:                                     double d = 2.8+r1 -->   PASSED
 Test 014:                      CoolRange<double,2.5,8.8> r2(r1) -->   PASSED
 Test 015:                           CoolRange<char*,"D","K"> r1 -->   PASSED
 Test 016:                                         r1.low()=="D" -->   PASSED
 Test 017:                                        r1.high()=="K" -->   PASSED
 Test 018:                                         r1.set("EFG") -->   PASSED
 Test 019:                                                  r1() -->   PASSED
 Test 020:                                     CoolString s1(r1) -->   PASSED
 Test 021:                       CoolRange<char*,"D","K"> r2(r1) -->   PASSED
-----------------------------------------------------------------------------
CoolRange Test Summary: 21 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_rng
PASS compiling test_set
-----------------------------------------------------------------------------
Start Testing CoolSet:
-----------------------------------------------------------------------------
 Test 001:                                       CoolSet<int> s0 -->   PASSED
 Test 002:                                         s0.capacity() -->   PASSED
 Test 003:                                   CoolSet<int> s1(20) -->   PASSED
 Test 004:                                         s1.capacity() -->   PASSED
 Test 005:                                   CoolSet<int> s2(25) -->   PASSED
 Test 006:                                         s2.capacity() -->   PASSED
 Test 007:                                   CoolSet<int> s3(s2) -->   PASSED
 Test 008:                                                s2==s3 -->   PASSED
 Test 009:                                              s2 == s3 -->   PASSED
 Test 010:                                              s1 == s2 -->   PASSED
 Test 011:                                              s1 != s3 -->   PASSED
 Test 012:                                            s0.reset() -->   PASSED
 Test 013:                                             s0.put(1) -->   PASSED
 Test 014:                                            s0.find(1) -->   PASSED
 Test 015:                                            s0.value() -->   PASSED
 Test 016:                                           s0.length() -->   PASSED
 Test 017:                                             s0.put(2) -->   PASSED
 Test 018:                                            s0.find(2) -->   PASSED
 Test 019:                                             s0.put(3) -->   PASSED
 Test 020:                                            s0.find(3) -->   PASSED
 Test 021:                                             s0.put(4) -->   PASSED
 Test 022:                                            s0.value() -->   PASSED
 Test 023:                                            s0.find(4) -->   PASSED
 Test 024:                                            s0.value() -->   PASSED
 Test 025:                                             s0.put(5) -->   PASSED
 Test 026:                                            s0.find(5) -->   PASSED
 Test 027:                                             s0.put(6) -->   PASSED
 Test 028:                                            s0.find(6) -->   PASSED
 Test 029:                                             s0.put(7) -->   PASSED
 Test 030:                                            s0.find(7) -->   PASSED
 Test 031:                                             s0.put(8) -->   PASSED
 Test 032:                                            s0.find(8) -->   PASSED
 Test 033:                                             s0.put(9) -->   PASSED
 Test 034:                                            s0.find(9) -->   PASSED
 Test 035:                                 s0.get_bucket_count() -->   PASSED
 Test 036:                                           s0.length() -->   PASSED
 Test 037:                                          s0.remove(1) -->   PASSED
 Test 038:                                           s0.length() -->   PASSED
 Test 039:                                            s0.reset() -->   PASSED
 Test 040:                                             s0.next() -->   PASSED
 Test 041:                                             s0.next() -->   PASSED
 Test 042:                                             s0.next() -->   PASSED
 Test 043:                                             s0.next() -->   PASSED
 Test 044:                                             s0.next() -->   PASSED
 Test 045:                                             s0.next() -->   PASSED
 Test 046:                                             s0.next() -->   PASSED
 Test 047:                                             s0.next() -->   PASSED
 Test 048:                                             s0.next() -->   PASSED
 Test 049:                                             s0.prev() -->   PASSED
 Test 050:                                             s0.prev() -->   PASSED
 Test 051:                                             s0.prev() -->   PASSED
 Test 052:                                             s0.prev() -->   PASSED
 Test 053:                                             s0.prev() -->   PASSED
 Test 054:                                             s0.prev() -->   PASSED
 Test 055:                                             s0.prev() -->   PASSED
 Test 056:                                             s0.prev() -->   PASSED
 Test 057:                                             s0.prev() -->   PASSED
 Test 058:                                                 s1=s0 -->   PASSED
 Test 059:                                         s1.resize(30) -->   PASSED
 Test 060:                                            s1.find(7) -->   PASSED
 Test 061:                                            s1.value() -->   PASSED
 Test 062:                                            s1.find(3) -->   PASSED
 Test 063:                                            s1.value() -->   PASSED
 Test 064:                                            s1.find(9) -->   PASSED
 Test 065:                                            s1.value() -->   PASSED
 Test 066:                                 s1.get_bucket_count() -->   PASSED
 Test 067:                                           s1.length() -->   PASSED
 Test 068:                                     s0.set_ratio(1.0) -->   PASSED
 Test 069:                                         s0.resize(30) -->   PASSED
 Test 070:                                 s0.get_bucket_count() -->   PASSED
 Test 071:                                            s0.find(2) -->   PASSED
 Test 072:                                            s0.find(4) -->   PASSED
 Test 073:                                            s0.find(6) -->   PASSED
 Test 074:                                            s0.find(8) -->   PASSED
 Test 075:                                         s0.resize(60) -->   PASSED
 Test 076:                                 s0.get_bucket_count() -->   PASSED
 Test 077:                                            s0.find(2) -->   PASSED
 Test 078:                                            s0.value() -->   PASSED
 Test 079:                                            s0.find(4) -->   PASSED
 Test 080:                                            s0.value() -->   PASSED
 Test 081:                                            s0.find(6) -->   PASSED
 Test 082:                                            s0.value() -->   PASSED
 Test 083:                                            s0.find(8) -->   PASSED
 Test 084:                                            s0.value() -->   PASSED
 Test 085:                                           s0.remove() -->   PASSED
 Test 086:                                            s0.find(8) -->   PASSED
 Test 087:                                   CoolSet<int> S4(s1) -->   PASSED
 Test 088:                                          s4.remove(6) -->   PASSED
 Test 089:                                         s1.search(s4) -->   PASSED
 Test 090:                                            s0.clear() -->   PASSED
 Test 091:                                            s1.clear() -->   PASSED
 Test 092:                                       (s0 - s1) == s2 -->   PASSED
 Test 093:                                       (s1 - s0) == s3 -->   PASSED
 Test 094:                                       (s0 | s1) == s4 -->   PASSED
 Test 095:                                       (s1 | s0) == s4 -->   PASSED
 Test 096:                                       (s0 & s1) == s5 -->   PASSED
 Test 097:                                       (s1 & s0) == s5 -->   PASSED
 Test 098:                                       (s0 ^ s1) == s6 -->   PASSED
 Test 099:                                       (s1 ^ s0) == s6 -->   PASSED
 Test 100:                                              s0 -= s1 -->   PASSED
 Test 101:                                              s1 -= s0 -->   PASSED
 Test 102:                                              s0 |= s1 -->   PASSED
 Test 103:                                              s1 |= s0 -->   PASSED
 Test 104:                                              s0 &= s1 -->   PASSED
 Test 105:                                              s1 &= s0 -->   PASSED
 Test 106:                                              s0 ^= s1 -->   PASSED
 Test 107:                                              s1 ^= s0 -->   PASSED
 Test 108:                                 s0.set_difference(s1) -->   PASSED
 Test 109:                                      s0.set_union(s1) -->   PASSED
 Test 110:                               s0.set_intersection(s1) -->   PASSED
 Test 111:                                        s0.set_xor(s1) -->   PASSED
 Test 112:                              s0.next_intersection(s1) -->   PASSED
 Test 113:                                s0.next_difference(s1) -->   PASSED
 Test 114:                                     s0.next_union(s1) -->   PASSED
 Test 115:                                       s0.next_xor(s1) -->   PASSED
 Test 116:                                    CoolSet<double> d0 -->   PASSED
 Test 117:                                         d0.capacity() -->   PASSED
 Test 118:                                CoolSet<double> d1(20) -->   PASSED
 Test 119:                                         d1.capacity() -->   PASSED
 Test 120:                                CoolSet<double> d2(25) -->   PASSED
 Test 121:                                         d2.capacity() -->   PASSED
 Test 122:                                CoolSet<double> d3(d2) -->   PASSED
 Test 123:                                                d2==d3 -->   PASSED
 Test 124:                                              d2 == d3 -->   PASSED
 Test 125:                                              d1 == d2 -->   PASSED
 Test 126:                                              d1 != d3 -->   PASSED
 Test 127:                                            d0.reset() -->   PASSED
 Test 128:                                           d0.put(1.0) -->   PASSED
 Test 129:                                          d0.find(1.0) -->   PASSED
 Test 130:                                            d0.value() -->   PASSED
 Test 131:                                           d0.length() -->   PASSED
 Test 132:                                           d0.put(2.0) -->   PASSED
 Test 133:                                          d0.find(2.0) -->   PASSED
 Test 134:                                           d0.put(3.0) -->   PASSED
 Test 135:                                          d0.find(3.0) -->   PASSED
 Test 136:                                           d0.put(4.0) -->   PASSED
 Test 137:                                            d0.value() -->   PASSED
 Test 138:                                          d0.find(4.0) -->   PASSED
 Test 139:                                            d0.value() -->   PASSED
 Test 140:                                           d0.put(5.0) -->   PASSED
 Test 141:                                          d0.find(5.0) -->   PASSED
 Test 142:                                           d0.put(6.0) -->   PASSED
 Test 143:                                          d0.find(6.0) -->   PASSED
 Test 144:                                           d0.put(7.0) -->   PASSED
 Test 145:                                          d0.find(7.0) -->   PASSED
 Test 146:                                           d0.put(8.0) -->   PASSED
 Test 147:                                          d0.find(8.0) -->   PASSED
 Test 148:                                           d0.put(9.0) -->   PASSED
 Test 149:                                          d0.find(9.0) -->   PASSED
 Test 150:                                 d0.get_bucket_count() -->   PASSED
 Test 151:                                           d0.length() -->   PASSED
 Test 152:                                        d0.remove(1.0) -->   PASSED
 Test 153:                                           d0.length() -->   PASSED
 Test 154:                                            d0.reset() -->   PASSED
 Test 155:                                             d0.next() -->   PASSED
 Test 156:                                             d0.next() -->   PASSED
 Test 157:                                             d0.next() -->   PASSED
 Test 158:                                             d0.next() -->   PASSED
 Test 159:                                             d0.next() -->   PASSED
 Test 160:                                             d0.next() -->   PASSED
 Test 161:                                             d0.next() -->   PASSED
 Test 162:                                             d0.next() -->   PASSED
 Test 163:                                             d0.next() -->   PASSED
 Test 164:                                             d0.prev() -->   PASSED
 Test 165:                                             d0.prev() -->   PASSED
 Test 166:                                             d0.prev() -->   PASSED
 Test 167:                                             d0.prev() -->   PASSED
 Test 168:                                             d0.prev() -->   PASSED
 Test 169:                                             d0.prev() -->   PASSED
 Test 170:                                             d0.prev() -->   PASSED
 Test 171:                                             d0.prev() -->   PASSED
 Test 172:                                             d0.prev() -->   PASSED
 Test 173:                                                 d1=d0 -->   PASSED
 Test 174:                                         d1.resize(30) -->   PASSED
 Test 175:                                          d1.find(7.0) -->   PASSED
 Test 176:                                            d1.value() -->   PASSED
 Test 177:                                          d1.find(3.0) -->   PASSED
 Test 178:                                            d1.value() -->   PASSED
 Test 179:                                          d1.find(9.0) -->   PASSED
 Test 180:                                            d1.value() -->   PASSED
 Test 181:                                 d1.get_bucket_count() -->   PASSED
 Test 182:                                           d1.length() -->   PASSED
 Test 183:                                     d0.set_ratio(1.0) -->   PASSED
 Test 184:                                         d0.resize(30) -->   PASSED
 Test 185:                                 d0.get_bucket_count() -->   PASSED
 Test 186:                                          d0.find(2.0) -->   PASSED
 Test 187:                                          d0.find(4.0) -->   PASSED
 Test 188:                                          d0.find(6.0) -->   PASSED
 Test 189:                                          d0.find(8.0) -->   PASSED
 Test 190:                                         d0.resize(60) -->   PASSED
 Test 191:                                 d0.get_bucket_count() -->   PASSED
 Test 192:                                          d0.find(2.0) -->   PASSED
 Test 193:                                            d0.value() -->   PASSED
 Test 194:                                          d0.find(4.0) -->   PASSED
 Test 195:                                            d0.value() -->   PASSED
 Test 196:                                          d0.find(6.0) -->   PASSED
 Test 197:                                            d0.value() -->   PASSED
 Test 198:                                          d0.find(8.0) -->   PASSED
 Test 199:                                            d0.value() -->   PASSED
 Test 200:                                           d0.remove() -->   PASSED
 Test 201:                                          d0.find(8.0) -->   PASSED
 Test 202:                                CoolSet<double> D4(d1) -->   PASSED
 Test 203:                                        d4.remove(6.0) -->   PASSED
 Test 204:                                         d1.search(d4) -->   PASSED
 Test 205:                                            d0.clear() -->   PASSED
 Test 206:                                            d1.clear() -->   PASSED
 Test 207:                                       (d0 - d1) == d2 -->   PASSED
 Test 208:                                       (d1 - d0) == d3 -->   PASSED
 Test 209:                                       (d0 | d1) == d4 -->   PASSED
 Test 210:                                       (d1 | d0) == d4 -->   PASSED
 Test 211:                                       (d0 & d1) == d5 -->   PASSED
 Test 212:                                       (d1 & d0) == d5 -->   PASSED
 Test 213:                                       (d0 ^ d1) == d6 -->   PASSED
 Test 214:                                       (d1 ^ d0) == d6 -->   PASSED
 Test 215:                                              d0 -= d1 -->   PASSED
 Test 216:                                              d1 -= d0 -->   PASSED
 Test 217:                                              d0 |= d1 -->   PASSED
 Test 218:                                              d1 |= d0 -->   PASSED
 Test 219:                                              d0 &= d1 -->   PASSED
 Test 220:                                              d1 &= d0 -->   PASSED
 Test 221:                                              d0 ^= d1 -->   PASSED
 Test 222:                                              d1 ^= d0 -->   PASSED
 Test 223:                                 d0.set_difference(d1) -->   PASSED
 Test 224:                                      d0.set_union(d1) -->   PASSED
 Test 225:                               d0.set_intersection(d1) -->   PASSED
 Test 226:                                        d0.set_xor(d1) -->   PASSED
 Test 227:                              d0.next_intersection(d1) -->   PASSED
 Test 228:                                d0.next_difference(d1) -->   PASSED
 Test 229:                                     d0.next_union(d1) -->   PASSED
 Test 230:                                       d0.next_xor(d1) -->   PASSED
 Test 231:                                 CoolSet<char*> color1 -->   PASSED
 Test 232:                                     color1.capacity() -->   PASSED
 Test 233:                             CoolSet<char*> color2(20) -->   PASSED
 Test 234:                                     color2.capacity() -->   PASSED
 Test 235:                             CoolSet<char*> color3(25) -->   PASSED
 Test 236:                                     color3.capacity() -->   PASSED
 Test 237:                         CoolSet<char*> color4(color3) -->   PASSED
 Test 238:                                        color3==color4 -->   PASSED
 Test 239:                                      color3 == color4 -->   PASSED
 Test 240:                                      color2 == color3 -->   PASSED
 Test 241:                                      color2 != color4 -->   PASSED
 Test 242:                                        color1.reset() -->   PASSED
 Test 243:                                     color1.put("RED") -->   PASSED
 Test 244:                                    color1.find("RED") -->   PASSED
 Test 245:                                        color1.value() -->   PASSED
 Test 246:                                       color1.length() -->   PASSED
 Test 247:                                  color1.put("YELLOW") -->   PASSED
 Test 248:                                 color1.find("YELLOW") -->   PASSED
 Test 249:                                 color1.put("MAGENTA") -->   PASSED
 Test 250:                                color1.find("MAGENTA") -->   PASSED
 Test 251:                                    color1.put("BLUE") -->   PASSED
 Test 252:                                        color1.value() -->   PASSED
 Test 253:                                   color1.find("BLUE") -->   PASSED
 Test 254:                                        color1.value() -->   PASSED
 Test 255:                                  color1.put("ORANGE") -->   PASSED
 Test 256:                                 color1.find("ORANGE") -->   PASSED
 Test 257:                                   color1.put("WHITE") -->   PASSED
 Test 258:                                  color1.find("WHITE") -->   PASSED
 Test 259:                                   color1.put("BROWN") -->   PASSED
 Test 260:                                  color1.find("BROWN") -->   PASSED
 Test 261:                                   color1.put("BLACK") -->   PASSED
 Test 262:                                  color1.find("BLACK") -->   PASSED
 Test 263:                                    color1.put("GREY") -->   PASSED
 Test 264:                                   color1.find("GREY") -->   PASSED
 Test 265:                             color1.get_bucket_count() -->   PASSED
 Test 266:                                       color1.length() -->   PASSED
 Test 267:                                  color1.remove("RED") -->   PASSED
 Test 268:                                       color1.length() -->   PASSED
 Test 269:                                        color1.reset() -->   PASSED
 Test 270:                                         color1.next() -->   PASSED
 Test 271:                                         color1.next() -->   PASSED
 Test 272:                                         color1.next() -->   PASSED
 Test 273:                                         color1.next() -->   PASSED
 Test 274:                                         color1.next() -->   PASSED
 Test 275:                                         color1.next() -->   PASSED
 Test 276:                                         color1.next() -->   PASSED
 Test 277:                                         color1.next() -->   PASSED
 Test 278:                                         color1.next() -->   PASSED
 Test 279:                                         color1.prev() -->   PASSED
 Test 280:                                         color1.prev() -->   PASSED
 Test 281:                                         color1.prev() -->   PASSED
 Test 282:                                         color1.prev() -->   PASSED
 Test 283:                                         color1.prev() -->   PASSED
 Test 284:                                         color1.prev() -->   PASSED
 Test 285:                                         color1.prev() -->   PASSED
 Test 286:                                         color1.prev() -->   PASSED
 Test 287:                                         color1.prev() -->   PASSED
 Test 288:                                         color2=color1 -->   PASSED
 Test 289:                                     color2.resize(30) -->   PASSED
 Test 290:                                  color2.find("BROWN") -->   PASSED
 Test 291:                                        color2.value() -->   PASSED
 Test 292:                                color2.find("MAGENTA") -->   PASSED
 Test 293:                                        color2.value() -->   PASSED
 Test 294:                                   color2.find("GREY") -->   PASSED
 Test 295:                                        color2.value() -->   PASSED
 Test 296:                             color2.get_bucket_count() -->   PASSED
 Test 297:                                       color2.length() -->   PASSED
 Test 298:                                 color1.set_ratio(1.0) -->   PASSED
 Test 299:                                     color1.resize(30) -->   PASSED
 Test 300:                             color1.get_bucket_count() -->   PASSED
 Test 301:                                 color1.find("YELLOW") -->   PASSED
 Test 302:                                   color1.find("BLUE") -->   PASSED
 Test 303:                                  color1.find("WHITE") -->   PASSED
 Test 304:                                  color1.find("BLACK") -->   PASSED
 Test 305:                                     color1.resize(60) -->   PASSED
 Test 306:                             color1.get_bucket_count() -->   PASSED
 Test 307:                                 color1.find("YELLOW") -->   PASSED
 Test 308:                                        color1.value() -->   PASSED
 Test 309:                                   color1.find("BLUE") -->   PASSED
 Test 310:                                        color1.value() -->   PASSED
 Test 311:                                  color1.find("WHITE") -->   PASSED
 Test 312:                                        color1.value() -->   PASSED
 Test 313:                                  color1.find("BLACK") -->   PASSED
 Test 314:                                        color1.value() -->   PASSED
 Test 315:                                       color1.remove() -->   PASSED
 Test 316:                                  color1.find("BLACK") -->   PASSED
 Test 317:                         CoolSet<char*> Color5(color2) -->   PASSED
 Test 318:                                color5.remove("WHITE") -->   PASSED
 Test 319:                                 color2.search(color5) -->   PASSED
 Test 320:                                        color1.clear() -->   PASSED
 Test 321:                                        color2.clear() -->   PASSED
 Test 322:                           (color0 - color1) == color2 -->   PASSED
 Test 323:                           (color1 - color0) == color3 -->   PASSED
 Test 324:                           (color0 | color1) == color4 -->   PASSED
 Test 325:                           (color1 | color0) == color4 -->   PASSED
 Test 326:                           (color0 & color1) == color5 -->   PASSED
 Test 327:                           (color1 & color0) == color5 -->   PASSED
 Test 328:                           (color0 ^ color1) == color6 -->   PASSED
 Test 329:                           (color1 ^ color0) == color6 -->   PASSED
 Test 330:                                      color0 -= color1 -->   PASSED
 Test 331:                                      color1 -= color0 -->   PASSED
 Test 332:                                      color0 |= color1 -->   PASSED
 Test 333:                                      color1 |= color0 -->   PASSED
 Test 334:                                      color0 &= color1 -->   PASSED
 Test 335:                                      color1 &= color0 -->   PASSED
 Test 336:                                      color0 ^= color1 -->   PASSED
 Test 337:                                      color1 ^= color0 -->   PASSED
 Test 338:                         color0.set_difference(color1) -->   PASSED
 Test 339:                              color0.set_union(color1) -->   PASSED
 Test 340:                       color0.set_intersection(color1) -->   PASSED
 Test 341:                                color0.set_xor(color1) -->   PASSED
 Test 342:                      color0.next_intersection(color1) -->   PASSED
 Test 343:                                        color0.value() -->   PASSED
 Test 344:                      color0.next_intersection(color1) -->   PASSED
 Test 345:                                        color0.value() -->   PASSED
 Test 346:                      color0.next_intersection(color1) -->   PASSED
 Test 347:                                        color0.value() -->   PASSED
 Test 348:                      color0.next_intersection(color1) -->   PASSED
 Test 349:                                        color0.value() -->   PASSED
 Test 350:                      color0.next_intersection(color1) -->   PASSED
 Test 351:                                        color0.value() -->   PASSED
 Test 352:                      color0.next_intersection(color1) -->   PASSED
 Test 353:                                        color0.value() -->   PASSED
 Test 354:                      color0.next_intersection(color1) -->   PASSED
 Test 355:                                        color0.value() -->   PASSED
 Test 356:                      color0.next_intersection(color1) -->   PASSED
 Test 357:                        color0.next_difference(color1) -->   PASSED
 Test 358:                                        color0.value() -->   PASSED
 Test 359:                        color0.next_difference(color1) -->   PASSED
 Test 360:                                        color0.value() -->   PASSED
 Test 361:                        color0.next_difference(color1) -->   PASSED
 Test 362:                             color0.next_union(color1) -->   PASSED
 Test 363:                                        color0.value() -->   PASSED
 Test 364:                             color0.next_union(color1) -->   PASSED
 Test 365:                                        color0.value() -->   PASSED
 Test 366:                             color0.next_union(color1) -->   PASSED
 Test 367:                                        color0.value() -->   PASSED
 Test 368:                             color0.next_union(color1) -->   PASSED
 Test 369:                                        color0.value() -->   PASSED
 Test 370:                             color0.next_union(color1) -->   PASSED
 Test 371:                                        color0.value() -->   PASSED
 Test 372:                             color0.next_union(color1) -->   PASSED
 Test 373:                                        color0.value() -->   PASSED
 Test 374:                             color0.next_union(color1) -->   PASSED
 Test 375:                                        color0.value() -->   PASSED
 Test 376:                             color0.next_union(color1) -->   PASSED
 Test 377:                                        color0.value() -->   PASSED
 Test 378:                             color0.next_union(color1) -->   PASSED
 Test 379:                                        color0.value() -->   PASSED
 Test 380:                             color0.next_union(color1) -->   PASSED
 Test 381:                                        color0.value() -->   PASSED
 Test 382:                             color0.next_union(color1) -->   PASSED
 Test 383:                               color0.next_xor(color1) -->   PASSED
 Test 384:                                        color0.value() -->   PASSED
 Test 385:                               color0.next_xor(color1) -->   PASSED
 Test 386:                                        color0.value() -->   PASSED
 Test 387:                               color0.next_xor(color1) -->   PASSED
 Test 388:                                        color0.value() -->   PASSED
 Test 389:                               color0.next_xor(color1) -->   PASSED
-----------------------------------------------------------------------------
CoolSet Test Summary: 389 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_set
PASS compiling test_sta
-----------------------------------------------------------------------------
Start Testing CoolStack:
-----------------------------------------------------------------------------
 Test 001:                                     CoolStack<int> s0 -->   PASSED
 Test 002:                                     CoolStack<int> s1 -->   PASSED
 Test 003:                                         s1.push(7, 4) -->   PASSED
 Test 004:                                           s1.length() -->   PASSED
 Test 005:                                            s2.push(7) -->   PASSED
 Test 006:                                            s2.push(7) -->   PASSED
 Test 007:                                        s2.pushn(7, 2) -->   PASSED
 Test 008:                                     s1.operator==(s2) -->   PASSED
 Test 009:                                     s2.operator!=(s1) -->   PASSED
 Test 010:                                              s2.pop() -->   PASSED
 Test 011:                                            s2.popn(2) -->   PASSED
 Test 012:                                        s2.pushn(1, 3) -->   PASSED
 Test 013:                                      s1.operator=(s2) -->   PASSED
 Test 014:                                              s1.top() -->   PASSED
 Test 015:                                        s2.position(7) -->   PASSED
 Test 016:                                           s1.find(33) -->   PASSED
 Test 017:                                      s2.operator[](3) -->   PASSED
 Test 018:                                            s2.clear() -->   PASSED
 Test 019:                                         s2.is_empty() -->   PASSED
 Test 020:                                          s2.resize(8) -->   PASSED
 Test 021:                                        s1.pushn(4, 8) -->   PASSED
 Test 022:                                           s1.popn(13) -->   PASSED
 Test 023:                                     s1.set_length(10) -->   PASSED
 Test 024:                              s1.set_growth_ratio(2.0) -->   PASSED
 Test 025:                                 s1.set_alloc_size(50) -->   PASSED
 Test 026:                                CoolStack<int> s3 = s1 -->   PASSED
 Test 027:                                   CoolStack<char*> s0 -->   PASSED
 Test 028:                                           s0.length() -->   PASSED
 Test 029:                                CoolStack<char*> s1(4) -->   PASSED
 Test 030:                                CoolStack<char*> s2(4) -->   PASSED
 Test 031:                     s1.set_compare(&my_compare_charP) -->   PASSED
 Test 032:                                    s1.pushn("AAA", 4) -->   PASSED
 Test 033:                                           s1.length() -->   PASSED
 Test 034:                                        s2.push("AAA") -->   PASSED
 Test 035:                                           s2.length() -->   PASSED
 Test 036:                                        s2.push("AAA") -->   PASSED
 Test 037:                                           s2.length() -->   PASSED
 Test 038:                                    s2.pushn("AAA", 2) -->   PASSED
 Test 039:                                           s2.length() -->   PASSED
 Test 040:                                     s1.operator==(s2) -->   PASSED
 Test 041:                                     s2.operator!=(s1) -->   PASSED
 Test 042:                                              s2.pop() -->   PASSED
 Test 043:                                            s2.popn(2) -->   PASSED
 Test 044:                                    s2.pushn("BBB", 3) -->   PASSED
 Test 045:                                      s1.operator=(s2) -->   PASSED
 Test 046:                                              s1.top() -->   PASSED
 Test 047:                                    s2.position("AAA") -->   PASSED
 Test 048:                                        s1.find("ZZZ") -->   PASSED
 Test 049:                                      s2.operator[](3) -->   PASSED
 Test 050:                                            s2.clear() -->   PASSED
 Test 051:                                           s2.length() -->   PASSED
 Test 052:                                         s2.is_empty() -->   PASSED
 Test 053:                                          s2.resize(8) -->   PASSED
 Test 054:                                         s2.capacity() -->   PASSED
 Test 055:                                    s1.pushn("CCC", 8) -->   PASSED
 Test 056:                                           s1.popn(13) -->   PASSED
 Test 057:                                     s1.set_length(10) -->   PASSED
 Test 058:                              s1.set_growth_ratio(2.0) -->   PASSED
 Test 059:                                 s1.set_alloc_size(50) -->   PASSED
 Test 060:                              CoolStack<char*> s3 = s1 -->   PASSED
 Test 061:                              CoolStack<CoolString> s0 -->   PASSED
 Test 062:                                           s0.length() -->   PASSED
 Test 063:                           CoolStack<CoolString> s1(4) -->   PASSED
 Test 064:                           CoolStack<CoolString> s2(4) -->   PASSED
 Test 065:                        s1.pushn(CoolString("AAA"), 4) -->   PASSED
 Test 066:                                           s1.length() -->   PASSED
 Test 067:                            s2.push(CoolString("AAA")) -->   PASSED
 Test 068:                                           s2.length() -->   PASSED
 Test 069:                            s2.push(CoolString("AAA")) -->   PASSED
 Test 070:                                           s2.length() -->   PASSED
 Test 071:                        s2.pushn(CoolString("AAA"), 2) -->   PASSED
 Test 072:                                           s2.length() -->   PASSED
 Test 073:                                     s1.operator==(s2) -->   PASSED
 Test 074:                                     s2.operator!=(s1) -->   PASSED
 Test 075:                                              s2.pop() -->   PASSED
 Test 076:                                            s2.popn(2) -->   PASSED
 Test 077:                        s2.pushn(CoolString("BBB"), 3) -->   PASSED
 Test 078:                                      s1.operator=(s2) -->   PASSED
 Test 079:                                              s1.top() -->   PASSED
 Test 080:                        s2.position(CoolString("AAA")) -->   PASSED
 Test 081:                            s1.find(CoolString("ZZZ")) -->   PASSED
 Test 082:                                      s2.operator[](3) -->   PASSED
 Test 083:                                            s2.clear() -->   PASSED
 Test 084:                                           s2.length() -->   PASSED
 Test 085:                                         s2.is_empty() -->   PASSED
 Test 086:                                          s2.resize(8) -->   PASSED
 Test 087:                                         s2.capacity() -->   PASSED
 Test 088:                        s1.pushn(CoolString("CCC"), 8) -->   PASSED
 Test 089:                                           s1.popn(13) -->   PASSED
 Test 090:                                     s1.set_length(10) -->   PASSED
 Test 091:                              s1.set_growth_ratio(2.0) -->   PASSED
 Test 092:                                 s1.set_alloc_size(50) -->   PASSED
 Test 093:                         CoolStack<CoolString> s3 = s1 -->   PASSED
-----------------------------------------------------------------------------
CoolStack Test Summary: 93 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_sta
PASS compiling test_str
-----------------------------------------------------------------------------
Start Testing CoolString:
-----------------------------------------------------------------------------
 Test 001:                                         CoolString s1 -->   PASSED
 Test 002:                                       strlen(s1) == 0 -->   PASSED
 Test 003:                                          s1 = "Hello" -->   PASSED
 Test 004:                                       strlen(s1) == 5 -->   PASSED
 Test 005:                                    strcmp(s1,"Hello") -->   PASSED
 Test 006:                              CoolString s5("World",5) -->   PASSED
 Test 007:                                CoolString s2("World") -->   PASSED
 Test 008:                                       strlen(s2) == 5 -->   PASSED
 Test 009:                                    strcmp(s2,"World") -->   PASSED
 Test 010:                                         s2 = s2 + '!' -->   PASSED
 Test 011:                                       strcat(s1, " ") -->   PASSED
 Test 012:                                              s1 += s2 -->   PASSED
 Test 013:                            strcmp (s1,"Hello World!") -->   PASSED
 Test 014:                                  s1 == "Hello World!" -->   PASSED
 Test 015:                        is_equal(s2,"WORLD",SENSITIVE) -->   PASSED
 Test 016:                     is_equal(s2,"WORLD!",INSENSITIVE) -->   PASSED
 Test 017:                                     strlen (s1) == 12 -->   PASSED
 Test 018:                                          s1[6] == 'W' -->   PASSED
 Test 019:                                              s1 != s2 -->   PASSED
 Test 020:                                               s3 = s2 -->   PASSED
 Test 021:                                          s1.reverse() -->   PASSED
 Test 022:                                           upcase (s2) -->   PASSED
 Test 023:                                         downcase (s2) -->   PASSED
 Test 024:                                  is_lt (s2, "WORLD!") -->   PASSED
 Test 025:                                  is_le (s2, "WORLD!") -->   PASSED
 Test 026:                                         downcase (s1) -->   PASSED
 Test 027:                                       capitalize (s1) -->   PASSED
 Test 028:                              left_trim (s1, "Hello ") -->   PASSED
 Test 029:                                  right_trim (s1, "!") -->   PASSED
 Test 030:                     is_equal (s1, "world", SENSITIVE) -->   PASSED
 Test 031:                                       trim (s1, "or") -->   PASSED
 Test 032:                                            s1.clear() -->   PASSED
 Test 033:                                         s1 += "12345" -->   PASSED
 Test 034:                                           strtol (s1) -->   PASSED
 Test 035:                                             atol (s1) -->   PASSED
 Test 036:                                             itol (s1) -->   PASSED
 Test 037:                                             s1 += '.' -->   PASSED
 Test 038:                                         s1 = s1 + "7" -->   PASSED
 Test 039:                                             atof (s1) -->   PASSED
 Test 040:                                           strtod (s1) -->   PASSED
 Test 041:                                   s1.insert("big ",3) -->   PASSED
 Test 042:                                          return value -->   PASSED
 Test 043:                                      s33=="my string" -->   PASSED
 Test 044:                                          return value -->   PASSED
 Test 045:                                          return value -->   PASSED
 Test 046:                                   s1.insert("big",13) -->   PASSED
 Test 047:                                          return value -->   PASSED
 Test 048:                                        s1.remove(3,5) -->   PASSED
 Test 049:                                          return value -->   PASSED
 Test 050:                                      s32=="my string" -->   PASSED
 Test 051:                                          return value -->   PASSED
 Test 052:                                          return value -->   PASSED
 Test 053:                                          return value -->   PASSED
 Test 054:                                          return value -->   PASSED
 Test 055:                                          return value -->   PASSED
 Test 056:                                          return value -->   PASSED
 Test 057:                                        s1.remove(5,7) -->   PASSED
 Test 058:                                          return value -->   PASSED
 Test 059:                                        s1.remove(0,1) -->   PASSED
 Test 060:                                          return value -->   PASSED
 Test 061:                                  s1.replace("bo",3,5) -->   PASSED
 Test 062:                                strcmp(s1,"my boring") -->   PASSED
 Test 063:                               s1.replace(" very",2,3) -->   PASSED
 Test 064:                          strcmp (s1,"my very boring") -->   PASSED
 Test 065:                                 s1.replace("my,",3,7) -->   PASSED
 Test 066:                            strcmp(s1,"my my, boring") -->   PASSED
 Test 067:                            s1.replace("nothing",3,14) -->   PASSED
 Test 068:                                s1.replace("ed",10,13) -->   PASSED
 Test 069:                             strcmp(s1,"my my, bored") -->   PASSED
 Test 070:                                   s1.replace("b",0,1) -->   PASSED
 Test 071:                             strcmp(s1,"by my, bored") -->   PASSED
 Test 072:                                          s1.yank(3,5) -->   PASSED
 Test 073:                                          return value -->   PASSED
 Test 074:                                      s30=="my string" -->   PASSED
 Test 075:                                          s1.yank(5,7) -->   PASSED
 Test 076:                                          return value -->   PASSED
 Test 077:                                          s1.yank(0,1) -->   PASSED
 Test 078:                                          return value -->   PASSED
 Test 079:                                    s1.sub_string(3,5) -->   PASSED
 Test 080:                                          return value -->   PASSED
 Test 081:                                      s20=="my string" -->   PASSED
 Test 082:                                    s1.sub_string(5,7) -->   PASSED
 Test 083:                                          return value -->   PASSED
 Test 084:                                    s1.sub_string(0,1) -->   PASSED
 Test 085:                                          return value -->   PASSED
 Test 086:                                                 hello -->   PASSED
 Test 087:                                          strncpy(3,5) -->   PASSED
 Test 088:                                          return value -->   PASSED
 Test 089:                          s19=="garbage to be deleted" -->   PASSED
 Test 090:                                                 hello -->   PASSED
 Test 091:                                    strncpy(s1,"hi",5) -->   PASSED
 Test 092:                                          return value -->   PASSED
-----------------------------------------------------------------------------
CoolString Test Summary: 92 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_str
PASS compiling test_tim
-----------------------------------------------------------------------------
Start Testing CoolTimer:
-----------------------------------------------------------------------------
 Test 001:                                                  mark -->   PASSED
 Test 002:                                              all_usec -->   PASSED
 Test 003:                                             user_usec -->   PASSED
 Test 004:                                           system_usec -->   PASSED
 Test 005:                                                   all -->   PASSED
 Test 006:                                                system -->   PASSED
 Test 007:                                                  user -->   PASSED
 Test 008:                                                  real -->   PASSED
-----------------------------------------------------------------------------
CoolTimer Test Summary: 8 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_tim
PASS compiling test_val
-----------------------------------------------------------------------------
Start Testing CoolValue:
-----------------------------------------------------------------------------
 Test 001:                                             size>=8+1 -->   PASSED
 Test 002:                                             Value v0; -->   PASSED
 Test 003:                                          Value v1(v0) -->   PASSED
 Test 004:                                                v1==v0 -->   PASSED
 Test 005:                                                 v1=v0 -->   PASSED
 Test 006:                                           Value v2=v0 -->   PASSED
 Test 007:                                    (v0='d')==(v1='d') -->   PASSED
 Test 008:                                    (v0='D')==(v1='d') -->   PASSED
 Test 009:                                          Value v3(v0) -->   PASSED
 Test 010:                                            Value i1=5 -->   PASSED
 Test 011:                                          Value i2(i1) -->   PASSED
 Test 012:                                                  i3=5 -->   PASSED
 Test 013:                                 Value d1=-5.999999999 -->   PASSED
 Test 014:                                          Value d2(d1) -->   PASSED
 Test 015:                                       d3=-5.999999999 -->   PASSED
 Test 016:                                               d3=-6.0 -->   PASSED
 Test 017:                                           int!=double -->   PASSED
(double)-6=(double)-6
 Test 018:                                                    << -->   PASSED
 Test 019:                                        unsigned(char) -->   PASSED
 Test 020:                                             int(char) -->   PASSED
 Test 021:                                             long(int) -->   PASSED
 Test 022:                                           double(int) -->   PASSED
 Test 023:                                         double(float) -->   PASSED
 Test 024:                                         float(double) -->   PASSED
 Test 025:                                                  char -->   PASSED
 Test 026:                                                   int -->   PASSED
 Test 027:                                              unsigned -->   PASSED
 Test 028:                                                  long -->   PASSED
 Test 029:                                                 float -->   PASSED
 Test 030:                                                double -->   PASSED
 Test 031:                                                 void* -->   PASSED
-----------------------------------------------------------------------------
CoolValue Test Summary: 31 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_val
PASS compiling test_vec
-----------------------------------------------------------------------------
Start Testing CoolVector:
-----------------------------------------------------------------------------
 Test 001:                                    CoolVector<int> v0 -->   PASSED
 Test 002:                                 CoolVector<int> v1(3) -->   PASSED
 Test 003:                               CoolVector<int> v2(4,1) -->   PASSED
 Test 004:                                               v1 = v2 -->   PASSED
 Test 005:                                                v1==v2 -->   PASSED
 Test 006:                                             v1[0] = 2 -->   PASSED
 Test 007:                                               v0 = v1 -->   PASSED
 Test 008:                         CoolVector<int> v3(5,3,2,3,1) -->   PASSED
 Test 009:                               CoolVector<int> v4 = v3 -->   PASSED
 Test 010:                                                v1!=v2 -->   PASSED
 Test 011:                                                v4==v3 -->   PASSED
 Test 012:                                              v1 != v3 -->   PASSED
 Test 013:                                CoolVector<int> v5(v4) -->   PASSED
 Test 014:                                           v1.length() -->   PASSED
 Test 015:                                            v1.fill(5) -->   PASSED
 Test 016:                                        v3.position(3) -->   PASSED
 Test 017:                                       v3.copy(v5,1,4) -->   PASSED
 Test 018:               v1=CoolVector<int>(8,8,0,1,2,3,4,5,6,7) -->   PASSED
 Test 019:                         v2=CoolVector<int>(3,3,4,5,6) -->   PASSED
 Test 020:                                         v1.search(v2) -->   PASSED
 Test 021:                                           v0.push(-1) -->   PASSED
 Test 022:                                        v0.push_new(1) -->   PASSED
 Test 023:                                              v0.pop() -->   PASSED
 Test 024:                                          v1.reverse() -->   PASSED
 Test 025:                                          v1.remove(6) -->   PASSED
 Test 026:                                v0.remove_duplicates() -->   PASSED
 Test 027:                                       v0.replace(7,3) -->   PASSED
 Test 028:                                   v4.replace_all(5,3) -->   PASSED
 Test 029:                                              put(4,3) -->   PASSED
 Test 030:                                                get(3) -->   PASSED
 Test 031:                                            put(5,100) -->   PASSED
 Test 032:                                            is_empty() -->   PASSED
 Test 033:                                               clear() -->   PASSED
 Test 034:                                            is_empty() -->   PASSED
 Test 035:                     v0=CoolVector<int>(5,5,3,5,1,7,2) -->   PASSED
 Test 036:                         v1=CoolVector<int>(3,3,9,2,6) -->   PASSED
 Test 037:                                                 v2=v0 -->   PASSED
 Test 038:                                                 v3=v1 -->   PASSED
 Test 039:                                        v1.prepend(v0) -->   PASSED
 Test 040:                                         v0.append(v3) -->   PASSED
 Test 041:                                                v0==v1 -->   PASSED
 Test 042:                                 v2.insert_before(9,3) -->   PASSED
 Test 043:                                  v2.insert_before(12) -->   PASSED
 Test 044:                                 v2.insert_after(11,2) -->   PASSED
 Test 045:                                   v2.insert_after(13) -->   PASSED
 Test 046:                                         v2.position() -->   PASSED
 Test 047:                                            v2.reset() -->   PASSED
 Test 048:                                             v2.next() -->   PASSED
 Test 049:                                           v2.remove() -->   PASSED
 Test 050:                                             v2.next() -->   PASSED
 Test 051:                                             v2.prev() -->   PASSED
 Test 052:                                            v2.value() -->   PASSED
 Test 053:                              v2.sort (my_compare_int) -->   PASSED
 Test 054:                           v1.merge(v2,my_compare_int) -->   PASSED
 Test 055:                                 CoolVector<double> d0 -->   PASSED
 Test 056:                              CoolVector<double> d1(3) -->   PASSED
 Test 057:                              CoolVector<double> d2(4) -->   PASSED
 Test 058:                                               d1 = d2 -->   PASSED
 Test 059:                                                d1==d2 -->   PASSED
 Test 060:                                           d1[0] = 2.0 -->   PASSED
 Test 061:                                               d0 = d1 -->   PASSED
 Test 062:                CoolVector<double> d3(5,3,2.0,3.0,1.0) -->   PASSED
 Test 063:                            CoolVector<double> d4 = d3 -->   PASSED
 Test 064:                                                d1!=d2 -->   PASSED
 Test 065:                                                d4==d3 -->   PASSED
 Test 066:                                              d1 != d3 -->   PASSED
 Test 067:                             CoolVector<double> d5(d4) -->   PASSED
 Test 068:                                           d1.length() -->   PASSED
 Test 069:                                          d1.fill(5.0) -->   PASSED
 Test 070:                                      d3.position(3.0) -->   PASSED
 Test 071:                                       d3.copy(d5,1,4) -->   PASSED
 Test 072: d1=CoolVector<double>(8,8,0.0,1.0,2.0,3.0,4.0,5.0,6.0,7.0) -->   PASSED
 Test 073:                d2=CoolVector<double>(3,3,4.0,5.0,6.0) -->   PASSED
 Test 074:                                         d1.search(d2) -->   PASSED
 Test 075:                                         d0.push(-1.0) -->   PASSED
 Test 076:                                      d0.push_new(1.0) -->   PASSED
 Test 077:                                              d0.pop() -->   PASSED
 Test 078:                                          d1.reverse() -->   PASSED
 Test 079:                                        d1.remove(6.0) -->   PASSED
 Test 080:                                d0.remove_duplicates() -->   PASSED
 Test 081:                                   d0.replace(7.0,3.0) -->   PASSED
 Test 082:                               d4.replace_all(5.0,3.0) -->   PASSED
 Test 083:        d0=CoolVector<double>(5,5,3.0,5.0,1.0,7.0,2.0) -->   PASSED
 Test 084:                d1=CoolVector<double>(3,3,9.0,2.0,6.0) -->   PASSED
 Test 085:                                                 d2=d0 -->   PASSED
 Test 086:                                                 d3=d1 -->   PASSED
 Test 087:                                        d1.prepend(d0) -->   PASSED
 Test 088:                                         d0.append(d3) -->   PASSED
 Test 089:                                                d0==d1 -->   PASSED
 Test 090:                               d2.insert_before(9.0,3) -->   PASSED
 Test 091:                                d2.insert_before(12.0) -->   PASSED
 Test 092:                               d2.insert_after(11.0,2) -->   PASSED
 Test 093:                                 d2.insert_after(13.0) -->   PASSED
 Test 094:                                         d2.position() -->   PASSED
 Test 095:                                            d2.reset() -->   PASSED
 Test 096:                                             d2.next() -->   PASSED
 Test 097:                                           d2.remove() -->   PASSED
 Test 098:                                             d2.next() -->   PASSED
 Test 099:                                             d2.prev() -->   PASSED
 Test 100:                                            d2.value() -->   PASSED
 Test 101:                           d2.sort (my_compare_double) -->   PASSED
 Test 102:                        d1.merge(d2,my_compare_double) -->   PASSED
 Test 103:                                  CoolVector<char*> c0 -->   PASSED
 Test 104:                     c0.set_compare(&my_compare_charP) -->   PASSED
 Test 105:                               CoolVector<char*> c1(4) -->   PASSED
 Test 106:                         CoolVector<char*> c2(4,"BBB") -->   PASSED
 Test 107:                                               c1 = c2 -->   PASSED
 Test 108:                                                c1==c2 -->   PASSED
 Test 109:                                         c1[0] = "CCC" -->   PASSED
 Test 110:                                               c0 = c1 -->   PASSED
 Test 111:           CoolVector<char*> c3(5,3,"DDD","EEE","FFF") -->   PASSED
 Test 112:                             CoolVector<char*> c4 = c3 -->   PASSED
 Test 113:                                                c1!=c2 -->   PASSED
 Test 114:                                                c4==c3 -->   PASSED
 Test 115:                                              c1 != c3 -->   PASSED
 Test 116:                              CoolVector<char*> c5(c4) -->   PASSED
 Test 117:                                           c1.length() -->   PASSED
 Test 118:                                        c1.fill("GGG") -->   PASSED
 Test 119:                                    c3.position("DDD") -->   PASSED
 Test 120:                                        c5.push("GGG") -->   PASSED
 Test 121:                                    c5.position("GGG") -->   PASSED
 Test 122:                                       c3.copy(c5,1,4) -->   PASSED
 Test 123:                                            c3.reset() -->   PASSED
 Test 124:                                             c3.next() -->   PASSED
 Test 125:                                            c3.value() -->   PASSED
 Test 126:                                             c3.next() -->   PASSED
 Test 127:                                            c3.value() -->   PASSED
 Test 128:                                             c3.prev() -->   PASSED
 Test 129:                                            c3.value() -->   PASSED
 Test 130:                                             c3.next() -->   PASSED
 Test 131:                                            c3.value() -->   PASSED
 Test 132:                                             c3.next() -->   PASSED
 Test 133:                                            c3.value() -->   PASSED
 Test 134:                                             c3.next() -->   PASSED
 Test 135:                                            c3.value() -->   PASSED
 Test 136:                                             c3.next() -->   PASSED
 Test 137:                                     v.find(-1, 0, +1) -->   PASSED
 Test 138:                                     v.find(-2, 3, -1) -->   PASSED
 Test 139:                                      v.find(2, 3, -1) -->   PASSED
 Test 140:                                      v.find(1, 0, +1) -->   PASSED
 Test 141:                                    v.shuffle_remove() -->   PASSED
 Test 142:                                   v.shuffle_remove(2) -->   PASSED
 Test 143:                                   v.shuffle_remove(2) -->   PASSED
 Test 144:                        v.shuffle_insert_before(-1, 2) -->   PASSED
 Test 145:                         v.shuffle_insert_after(-2, 2) -->   PASSED
-----------------------------------------------------------------------------
CoolVector Test Summary: 145 passed, 0 failed
-----------------------------------------------------------------------------
PASS executing test_vec
