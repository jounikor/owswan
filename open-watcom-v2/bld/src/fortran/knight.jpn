*    騎士の巡歴

*$noextensions
*$nocheck
      CHARACTER REPLY*20, LINE(2)*41
      INTEGER I, J, D, SP, OFFSET, TI, TJ, BOARD
      INTEGER ISTACK, JSTACK, DSTACK, DI, DJ
      DIMENSION ISTACK(0:64), JSTACK(0:64), DSTACK(0:64)
      DIMENSION DI(0:11), DJ(0:11), BOARD(0:11, 0:11)
      DATA DI/2, 1, -1, -2, -2, -1, 1, 2, 2, 1, -1, -2/
      DATA DJ/-1, -2, -2, -1, 1, 2, 2, 1, -1, -2, -2, -1/
      PRINT 100
100   FORMAT(
     1'-------',/,
     2' K   N   I   G   H   T   ''   S  ',/,
     3'|+++++++|',/,
     4'            (K)                 ',/,
     5'|+++++++|',/,
     6'         T   O   U   R          ',/,
     7'|--------------------------------------------------------',/,
     8'||このﾌﾟﾛｸﾞﾗﾑはﾁｪｽ板の動きを知るためにﾅｲﾄ(桂馬)を板上で   |',/,
     9'||一巡させます。                                          |',/,
     A'||ｱﾙｺﾞﾘｽﾞﾑは自習方式を使います。十分な時間を              |',/,
     B'||くだされば(時には何年も)、きっと解決法を見つけます。    |',/,
     C'||  幸にも多くの初めの位置(例えば, 4,3)などは　           |',/,
     D'||解決法はかなり早く見つけられます。                      |',/,
     E'--------------------------------------------------------',/,
     F'|+++++++|',/,
     G'     W   A   T   C   O   M      ',/,
     H'-------' )

*--== (5,5),(6,6),(7,7)で始まる巡歴はﾅｲﾄのどんな動きをあきらかにしますか==--

      LOOP
*--== ｢無効｣となる端の位置を初期化します==--
      DO I = 0, 11
          DO J = 0, 11
          BOARD( I, J ) = -1
          END DO
      END DO
*--== ｢使われていない｣位置を初期化します==--
      DO I = 2, 9
          DO J = 2, 9
          BOARD( I, J ) = 0
          END DO
      END DO
*--== 初めの位置 ==--
      PRINT *,' '
      PRINT *,'巡歴を始めるために初めの列とｶﾗﾑ数を入れて下さい。'
      PRINT *,'(1,1) は左上の角です。ｺﾝﾏで分けた二つの整数を'
      PRINT *,'入れて下さい。止める時は''QUIT''を入れて下さい。'
      WRITE( *, '(A,$)' ) '列, ｶﾗﾑ: '
      READ( *, '(A)', END=99, ERR=99 ) REPLY
      READ( REPLY, *, END=99, ERR=99 ) I, J
      IF( I .GT. 8 .OR.  J .GT. 8 ) GO TO 99
*--== 解決法の発見 ==--
      I = I+1
      J = J+1
      D = -1
      SP = 1
      LOOP :L1
          IF (I .LE. J) THEN
          OFFSET = 4
        ELSE
          OFFSET = 0
          END IF
          GUESS :G1
          LOOP :L2
              D = D + 1
              IF( D .EQ. 8 ) QUIT :G1
              TI = I + DI( D + OFFSET )
              TJ = J + DJ( D + OFFSET )
          UNTIL( BOARD( TI, TJ ) .EQ. 0 )
          ISTACK( SP ) = I
          JSTACK( SP ) = J
          DSTACK( SP ) = D
          BOARD( I, J ) = SP
          I = TI
          J = TJ
          SP = SP + 1
          D = -1
          ADMIT
          SP = SP - 1
          BOARD( I, J ) = 0
          I = ISTACK( SP )
          J = JSTACK( SP )
          D = DSTACK( SP )
          END GUESS
      UNTIL( SP .EQ. 64 )
      BOARD( I, J ) = 64
      J = J - 1
*--== 結果のﾁｪｽ板をﾌﾟﾘﾝﾄします ==--
      PRINT *,' '
      PRINT *,'      騎士の巡歴ー解決結果     WATFOR-77'
      PRINT *,'                  1=開始     (K)=終り'
      PRINT *,'-------'
      DO K = 2, 8
          WRITE(LINE, 101) (BOARD( K, L ),L=2,9)
          IF( I .EQ. K )LINE(1)(J*5-2:J*5)='(K)'
          WRITE(*, '(A41)') LINE
      ENDDO
      WRITE(LINE, 102)(BOARD( 9, L ),L=2,9)
      IF( I .EQ. 9 )LINE(1)(J*5-2:J*5)='(K)'
      WRITE(*, '(A41)') LINE
      ENDLOOP
101   FORMAT(   ' ',I2,'  ',I2,'  ',I2,'  ',I2,
     1    '  ',I2,'  ',I2,'  ',I2,'  ',I2,' ',/,
     2    '|+++++++|')
102   FORMAT(   ' ',I2,'  ',I2,'  ',I2,'  ',I2,
     1    '  ',I2,'  ',I2,'  ',I2,'  ',I2,' ',/,
     2    '-------')
99    END
