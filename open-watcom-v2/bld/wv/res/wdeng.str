
pick( Empty,
       "",
       "" )

// used to represent an undefined (eg: memory can't be read)

pick( Quest_Marks,
       "????????",
       "j????????" ) // dbgwvar dbgmem dbgbrk

// Warnings

pick( WARN_Unable_To_Remap_Tmp,
       "Unable to correct address of temporary breakpoint",
       "jUnable to correct address of temporary breakpoint" )//dbgprog

pick( WARN_No_Nxt_Src_Ln,
       "No next source line can be found",
       "jNo next source line can be found" )//dbgtrace

pick( WARN_ONLY_MAX_EXPAND_ARRAY_ELEMENTS,
       "Only %U array elements can be displayed at a time",
       "jOnly %U array elements can be displayed at a time" )

// Startup Errors

pick( STARTUP_Invalid_Option,
    "Invalid option '%t'",
    "jInvalid option '%t'" )

pick( STARTUP_Loading_PRS,
    "Cannot load expression syntax file 'cpp.prs'",
    "jCannot load expression syntax file 'cpp.prs'" )//dbgmain

pick( STARTUP_DIP_Not_Init,
       "Cannot initalize symbolic debugging interface",
       "jCannot initalize symbolic debugging interface" ) // dipinter

pick( STARTUP_DIP_Not_Register,
       "Cannot create internal symbol table",
       "jCannot create internal symbol table" ) //DIPINTER

pick( STARTUP_Expect_Brace,
       "Unmatched '{' on command line",
       "jUnmatched '{' on command line" )//dbgcmd

pick( STARTUP_Expect_End_Env_Str,
       "Syntax error in WD environment variable near '%s'",
       "jSyntax error in WD environment variable near '%s'" )//dbgcmd

pick( STARTUP_Expect_Eql,
       "Expecting '=' in command line but found '%s'",
       "jExpecting '=' in command line but found '%s'" )//dbgcmd

pick( STARTUP_Invalid_Num,
       "Expecting number in command line but found '%s'",
       "jExpecting number in command line but found '%s'" )//dbgcmd

pick( STARTUP_No_Recog_Optn,
       "Unable to recognize command line option near '%s'",
       "jUnable to recognize command line option near '%s'" )//dbgcmd

pick( STARTUP_Num_Too_Big,
       "Number too large near '%s'",
       "jNumber too large near '%s'" )//dbgcmd

pick( STARTUP_MAD_Not_Init,
    "Machine architecture initialization failed",
    "jMachine architecture initialization failed" )

pick( MSG_Unexpected_Break,
       "Hard-coded breakpoint instruction encountered",
       "jHard-coded breakpoint instruction encountered" ) // dbgins

// break-point notification.
// - format is one of the following
// "Break on execute: <address>"
// "Break on write: <address> - Old value = xxx New value = xxx"



pick( Break_on_write,
       "Break on write: ",
       "jBreak on write: " ) // dbgbrk

pick( Break_on_execute,
       "Break on execute: ",
       "jBreak on execute: " ) // dbgbrk

pick( OldVal,
       "Old value",
       "jOld value" ) // dbgbrk

pick( NewVal,
       "New value",
       "jNew value" ) // dbgbrk

// these are the name of tokens.  The parser will use them in messages like
// - expecting '=' near <end of line>


pick( End_Of_Line,
       "<end of line>",
       "j<end of line>" ) //dbgscan

pick( Num_Name,
       "<number>",
       "j<number>" ) //dbgscan

pick( Sym_Name_Name,
       "<name>",
       "j<name>" ) //dbgscan

pick( Map_Selector,
       "Enter address of selector %d in %s",
       "jEnter address of selector %d in %s" )//dbgprog

pick( Map_Named_Selector,
       "Enter address of %s selector in %s",
       "jEnter address of %s selector in %s" )//dbgprog

pick( New_Expression,
       "Enter New Expression",
       "jEnter New Expression" ) //dbgwvar dbgprint

pick( Internal_Error,
    "*** INTERNAL *** error:",
    "j*** INTERNAL *** error:" )//dbgerr

pick( Debugger_Startup_Error,
       "Debugger Startup Error",
       "jDebugger Startup Error" )

// program notifications

pick( Task_Completed,
       "The task has completed running",
       "jThe task has completed running" ) // dbgexec

pick( Task_Exception,
       "A task exception has occurred: ",
       "jA task exception has occurred: " ) // dbgexec

pick( Break_on_DLL_Load,
       "Breakpoint due to DLL load: ",
       "jBreakpoint due to DLL load: " ) // dbgexec

pick( DLL_Loaded,
       "A DLL has been loaded: ",
       "jA DLL has been loaded: " ) // dbgexec

pick( DLL_UnLoaded,
       "A DLL has been unloaded: ",
       "jA DLL has been unloaded: " ) // dbgexec

pick( User_Interupt,
       "A user interrupt was detected",
       "jA user interrupt was detected" ) // dbgexec

pick( New_Task,
       "A new task has been loaded",
       "jA new task has been loaded" ) // dbgmain

pick( No_Task,
       "No task was loaded",
       "jNo task was loaded" ) // dbgmain

pick( Task_Not_Loaded,
       "The task was not loaded: %e",
       "jThe task was not loaded: %e" ) // dbgmain

// information messaged issued in response to the Undo menu items

pick( No_More_Undos,
       "No more undos",
       "jNo more undos" )//dbgreg

pick( Bottom_Of_Stack,
       "Bottom of stack reached",
       "jBottom of stack reached" )//dbgreg

pick( Top_Of_Stack,
       "Top of stack reached",
       "jTop of stack reached" )//dbgreg

pick( Thread_Not_Exist,
       "Thread no longer exists",
       "jThread no longer exists" ) //dbgreg


// these are possible thread states


pick( Current,
       "current",
       "jcurrent" )//dbgwthrd

pick( Dead,
       "dead",
       "jdead" ) //dbgwthrd dbgmisc

pick( Frozen,
       "frozen",
       "jfrozen" ) //dbgwthrd dbgmisc

pick( Runnable,
       "runnable",
       "jrunnable" ) //dbgwthrd dbgmisc

pick( Wait,
       "wait",
       "jwait" ) //dbgwthrd dbgmisc

pick( Signal,
       "signal",
       "jsignal" ) //dbgwthrd dbgmisc

pick( Keyboard,
       "keyboard",
       "jkeyboard" ) //dbgwthrd dbgmisc

pick( Blocked,
       "blocked",
       "jblocked" ) //dbgwthrd dbgmisc

pick( Executing,
       "executing",
       "jexecuting" ) //dbgwthrd dbgmisc

pick( Debug,
       "debug",
       "jdebug" ) //dbgwthrd dbgmisc


// strings used by the variable display window

pick( No_Visible_Members,
       "No members will be displayed using current window options",
       "jNo members will be displayed using current window options" )//dbgwvar

pick( Array,
       "[ array ]",
       "j[ array ]" ) //dbgwvar

pick( field,
       "field",
       "jfield" ) //dbgwvar

pick( Struct,
       "struct",
       "jstruct" ) //dbgwvar

pick( inherited_members,
       "Ancestor::",
       "jAncestor::" ) //dbgwvar

pick( Unknown_type,
       "Unknown type",
       "jUnknown type" ) // dbgvar

pick( Image_Not_Loaded,
    "Image Not Loaded",
    "jImage Not Loaded" ) // dbgwbrk

pick( Str_ACTION_EXECUTE,
    "Program execution",
    "jProgram execution" ) // dbgreg

pick( Str_ACTION_ASSIGNMENT,
    "Variable assignment",
    "jVariable assignment" ) // dbgreg

pick( Str_ACTION_THREAD_CHANGE,
    "Thread switch",
    "jThread switch" ) // dbgreg

pick( Str_ACTION_MODIFY_IP,
    "Change instruction pointer",
    "jChange instruction pointer" ) // dbgreg

pick( Str_ACTION_MODIFY_MEMORY,
    "Memory modification",
    "jMemory modification" ) // dbgreg

pick( Str_ACTION_MODIFY_REGISTER,
    "Register modification",
    "jRegister modification" ) // dbgreg

pick( Str_ACTION_MODIFY_VARIABLE,
    "Variable modification",
    "jVariable modification" ) // dbgreg


pick( LDS_TOO_MANY_DIPS,
       "Too many DIP files specified",
       "jToo many DIP files specified" )

pick( LDS_INVALID_DIP_VERSION,
       "Invalid version of DIP file",
       "jInvalid version of DIP file" )

pick( LDS_NO_MEM,
       "Out of memory",
       "jOut of memory" )

pick( LDS_FOPEN_FAILED,
       "File open failed",
       "jFile open failed" )

pick( LDS_FREAD_FAILED,
       "File read failed",
       "jFile read failed" )

pick( LDS_FWRITE_FAILED,
       "File write failed",
       "jFile write failed" )

pick( LDS_FSEEK_FAILED,
       "File seek failed",
       "jFile seek failed" )

pick( LDS_INVALID_DIP,
       "Invalid DIP file",
       "jInvalid DIP file" )

pick( LDS_INFO_INVALID,
       "Invalid debugging information",
       "jInvalid debugging information" )

pick( LDS_INFO_BAD_VERSION,
       "Incorrect debugging information version",
       "jIncorrect debugging information version" )

pick( No_DIPs_Found,
       "Missing Debugging Information Processor files",
       "jMissing Debugging Information Processor files" )

pick( DIP_load_failed,
       "Debugging Information Processor '%s' load failed: %s",
       "jDebugging Information Processor '%s' load failed: %s" )

pick( Sym_Info_Load_Failed,
       "Symbolic information load for '%s' failed.",
       "jSymbolic information load for '%s' failed." ) // dbgprog

pick( IO,
    "io",
    "jio" ) //dbgscan

// MAD errors

pick( LMS_RECURSIVE_MAD_FAILURE,
    "Recursive MAD failure - exiting",
    "jRecursive MAD failure - exiting" )

pick( LMS_UNREGISTERED_MAD,
    "Unknown machine architecture %d",
    "jUnknown machine architecture %d" )

pick( LMS_INVALID_MAD,
    "Invalid machine architecture description file '%s'",
    "jInvalid machine architecture description file '%s'" )

pick( LMS_INVALID_MAD_VERSION,
    "Incorrect version of machine architecture description file '%s'",
    "jIncorrect version of machine architecture description file '%s'" )

pick( LMS_FREAD_FAILED,
       "Unable to read file '%s'",
       "jUnable to read file '%s'" )


// errors loading trap file

pick( BAD_TRAP_FILE,
    "Bad trap file",
    "jBad trap file" )

pick( OUT_OF_DOS_MEMORY,
    "Out of DOS Memory",
    "jOut of DOS Memory" )

pick( CANT_LOAD_TRAP_FILE,
    "Cannot load trap file (%s)",
    "jCannot load trap file (%s)" )

pick( INCORRECT_TRAP_FILE_VERSION,
    "Incorrect trap file version",
    "jIncorrect trap file version" )

// error messages

pick( ERR_GENERIC,
       "%s",
       "j%s" )

pick( ERR_BAD_COMMAND,
       "'%t' is not a valid command",
       "j'%t' is not a valid command" )

pick( ERR_BAD_RADIX,
       "%d is an invalid radix",
       "j%d is an invalid radix" )

pick( ERR_BAD_SUBCOMMAND,
       "Missing or invalid '%s' command",
       "jMissing or invalid '%s' command" )

pick( ERR_BAD_OPTION,
       "Missing or invalid '%s' option",
       "jMissing or invalid '%s' option" )

pick( ERR_BAD_TYPE_NAME,
       "Missing or invalid type name",
       "jMissing or invalid type name" )

pick( ERR_BAD_CALL_TYPE,
       "Missing or invalid call type",
       "jMissing or invalid call type" )

pick( ERR_LOG_STARTED,
       "Logging already started",
       "jLogging already started" )

pick( ERR_LOG_NOT_STARTED,
       "Logging not started",
       "jLogging not started" )

pick( ERR_WANT_TOKEN,
       "Expecting '%t'",
       "jExpecting '%t'" )

pick( ERR_WANT_OPERAND,
       "Expecting an operand",
       "jExpecting an operand" )

pick( ERR_WANT_EOC,
       "Expecting end of command",
       "jExpecting end of command" )

pick( ERR_WANT_REG_NAME,
       "Expecting a register name",
       "jExpecting a register name" )

pick( ERR_WANT_FILENAME,
       "Expecting a file name",
       "jExpecting a file name" )

pick( ERR_WANT_LOOKUP_ITEM,
       "Expecting lookup specifier",
       "jExpecting lookup specifier" )

pick( ERR_WANT_NAME,
       "Expecting a name",
       "jExpecting a name" )

pick( ERR_WANT_ON_OFF,
       "Expecting 'on' or 'off'",
       "jExpecting 'on' or 'off'" )

pick( ERR_NO_CODE,
       "There is no executable code at line %u",
       "jThere is no executable code at line %u" )

pick( ERR_NO_MEMORY,
       "Out of memory",
       "jOut of memory" )

pick( ERR_NO_MEMORY_FOR_WINDOW,
       "Not enough memory to open window",
       "jNot enough memory to open window" )

pick( ERR_NO_MEMORY_FOR_EXPR,
       "Not enough memory to evaluate expression",
       "jNot enough memory to evaluate expression" )

pick( ERR_NO_MEMORY_FOR_DEBUG,
       "Not enough memory for debugging information",
       "jNot enough memory for debugging information" )

pick( ERR_NO_SOURCE_INFO,
       "Cannot trace at the source level in this module.",
       "jCannot trace at the source level in this module." )

pick( ERR_NO_SUCH_POINT,
       "Break point at that address does not exist",
       "jBreak point at that address does not exist" )

pick( ERR_NO_MODULE,
       "'%t' is not a module",
       "j'%t' is not a module" )

pick( ERR_NEED_ADDRESS,
       "Cannot take the address of the operand",
       "jCannot take the address of the operand" )

pick( ERR_TOO_MANY_PARMS,
       "Maximum number of parameters exceeded in function call",
       "jMaximum number of parameters exceeded in function call" )

pick( ERR_TYPE_CONVERSION,
       "Illegal type conversion",
       "jIllegal type conversion" )

pick( ERR_UNKNOWN_SYMBOL,
       "Unknown symbol '%t'",
       "jUnknown symbol '%t'" )

pick( ERR_ILL_TYPE,
       "Illegal type for operation",
       "jIllegal type for operation" )

pick( ERR_DUPLICATE_TYPE_SPEC,
       "Duplicate type specifier",
       "jDuplicate type specifier" )

pick( ERR_ILLEGAL_TYPE_SPEC,
       "Invalid type specifier",
       "jInvalid type specifier" )

pick( ERR_VOID_BASE,
       "Pointer has void base type",
       "jPointer has void base type" )

pick( ERR_SYM_NOT_CREATED,
       "Cannot create symbol '%t'",
       "jCannot create symbol '%t'" )

pick( ERR_INCONSISTENT_GO,
       "An address and /keep may not both be specified",
       "jAn address and /keep may not both be specified" )

pick( ERR_FILE_NOT_OPEN,
       "Cannot open file '%s'",
       "jCannot open file '%s'" )

pick( ERR_CANNOT_RESTORE_STDIN,
       "Unable to restore program's standard input",
       "jUnable to restore program's standard input" )

pick( ERR_CANNOT_RESTORE_STDOUT,
    "Unable to restore program's standard output",
    "jUnable to restore program's standard output" )

pick( ERR_POINT_EXISTS,
       "Break point with that address already exists",
       "jBreak point with that address already exists" )

pick( ERR_NO_ROUTINE,
       "No function found at address %a",
       "jNo function found at address %a" )

pick( ERR_SYS_FAIL,
       "System command failed - %e",
       "jSystem command failed - %e" )

pick( ERR_DBG_INTERRUPT,
       "Debugger interrupted by user",
       "jDebugger interrupted by user" )

pick( ERR_NO_LANG,
       "Cannot load expression language",
       "jCannot load expression language" )

pick( ERR_EXPR_STACK_OVER,
       "Expression too complex to evaluate",
       "jExpression too complex to evaluate" )

pick( ERR_ZERO_MOD,
       "Right operand is zero for mod operator",
       "jRight operand is zero for mod operator" )

pick( ERR_ZERO_DIV,
       "Divide by zero",
       "jDivide by zero" )

pick( ERR_NO_OVL_STATE,
       "Not enough memory for overlay state information",
       "jNot enough memory for overlay state information" )

pick( ERR_BAD_SUBSTRING_INDEX,
       "Character substring index is out of range",
       "jCharacter substring index is out of range" )

pick( ERR_WANT_COMMAND_LIST,
       "Expecting a command list",
       "jExpecting a command list" )

pick( ERR_EXPR_TOO_LONG,
       "Expression is too long to evaluate",
       "jExpression is too long to evaluate" )

pick( ERR_CHAR_STAR_STAR,
       "character*(*) functions are not supported",
       "jcharacter*(*) functions are not supported" )

pick( ERR_WANT_END_STRING,
       "Expecting closing quote",
       "jExpecting closing quote" )

pick( ERR_TOO_MANY_CALLS,
       "Too many nested subroutine calls",
       "jToo many nested subroutine calls" )

pick( ERR_NO_READ_MEM,
       "Cannot read from location %a",
       "jCannot read from location %a" )

pick( ERR_NO_WRITE_MEM,
       "Cannot write to location %a",
       "jCannot write to location %a" )

pick( ERR_NO_READ_PORT,
       "Cannot read from port %p",
       "jCannot read from port %p" )

pick( ERR_NO_WRITE_PORT,
       "Cannot write to port %p",
       "jCannot write to port %p" )

pick( ERR_CANT_SET_ALL_THREADS,
       "Cannot set current thread to '*'",
       "jCannot set current thread to '*'" )

pick( ERR_NO_MAKE_CURR_THREAD,
       "Cannot make %U the current thread - %e",
       "jCannot make %U the current thread - %e" )

pick( ERR_NO_SUCH_THREAD,
       "Thread %U does not exist",
       "jThread %U does not exist" )

pick( ERR_CANT_KILL_PROGRAM,
       "Unable to kill program",
       "jUnable to kill program" )

pick( ERR_INVALID_OPERATOR,
       "'%t' is not a valid operator",
       "j'%t' is not a valid operator" )

pick( ERR_NO_OBJECT_FOR_CALL,
       "Cannot call member function without an object",
       "jCannot call member function without an object" )

pick( ERR_NOT_PRINTABLE,
       "No printable string found at location %a",
       "jNo printable string found at location %a" )

pick( ERR_NOT_WATCH_SIZE,
       "Break points may only be set on items which are 1,2 or 4 bytes long (and 8 bytes for trap files that support it)",
       "jBreak points may only be set on items which are 1,2 or 4 bytes long (and 8 bytes for trap files that support it)" )

pick( ERR_BAD_HOOK,
       "Missing or invalid hook name",
       "jMissing or invalid hook name" )

pick( ERR_NO_ACCESS,
       "Cannot read symbol value",
       "jCannot read symbol value" )

pick( ERR_NO_RETURN_ADDRESS,
       "Cannot find return address",
       "jCannot find return address" )

pick( ERR_TOO_MANY_SCANSAVE,
       "Internal error #1",
       "jInternal error #1" )

pick( ERR_TOO_MANY_SCANRESTORE,
       "Internal error #2",
       "jInternal error #2" )

pick( ERR_STK_OVERFL,
       "Internal error #3",
       "jInternal error #3" )

pick( ERR_STK_UNDERFL,
       "Internal error #4",
       "jInternal error #4" )

pick( ERR_PARSE_FILE,
       "Internal error in parse file",
       "jInternal error in parse file" )

pick( ERR_CALL_NOT_ALLOWED,
       "Function calls are not allowed in this expression",
       "jFunction calls are not allowed in this expression" )

pick( ERR_NO_IMAGE,
       "'%t' is not an executable image name",
       "j'%t' is not an executable image name" )

pick( ERR_EXECUTING_AT,
       "Executing at line %u in file '%s'.",
       "jExecuting at line %u in file '%s'." )

pick( ERR_CALLED_FROM,
       "Called from line %u in file '%s'.",
       "jCalled from line %u in file '%s'." )

pick( ERR_NEAR_END_OF_COMMAND,
    "Error occurred near end of command.",
    "jError occurred near end of command." )

pick( ERR_NEAR_END_OF_LINE,
       "Error occurred near end of line.",
       "jError occurred near end of line." )

pick( ERR_NEAR_TOKEN,
       "Error occurred near '%t'.",
       "jError occurred near '%t'." )

pick( ERR_CANT_RESTART,
       "You cannot restart a process which was not started by the debugger",
       "jYou cannot restart a process which was not started by the debugger" )

pick( ERR_NO_SRC_FILE,
       "'%t' is not a source file name in the module",
       "j'%t' is not a source file name in the module" )

pick( ERR_AMBIG_SRC_FILE,
       "'%t' is an ambiguous source file name in the module",
       "j'%t' is an ambiguous source file name in the module" )

pick( ERR_REMOTE_LINK_BROKEN,
        "The remote debugging link has been broken.  Your debugging session will now end",
        "jThe remote debugging link has been broken.  Your debugging session will now end" )

pick( ERR_WANT_MODULE,
        "Expecting a module name",
        "jExpecting a module name" )

pick( ERR_BAD_PARSE_VERSION,
       "Incorrect version of parse file",
       "jIncorrect version of parse file" )

#include "mad.str"

// these are DOS error messages #1 thru 14

#define pickdoserr(id,text) pick( ERR_DOS_##id, text, "j" text )
#include "_doserr.h"
#undef pickdoserr

pick( Unable_to_alloc_DOS_mem,
       "Unable to allocate DOS memory",
       "jUnable to allocate DOS memory" )

pick( Unable_to_get_rm_sel,
       "Unable to allocate real mode selector",
       "jUnable to allocate real mode selector" )
