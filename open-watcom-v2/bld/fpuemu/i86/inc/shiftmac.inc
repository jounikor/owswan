;
; double word   DX:AX
;

dw_lshift_1     macro
        _shl    AX,1            ; shift DWord << 1
        _rcl    DX,1            ; ...
        endm

dw_lshift_8     macro
        mov     DH,DL           ; shift DWord << 8
        mov     DL,AH           ; ...
        mov     AH,AL           ; ...
        xor     AL,AL           ; ...
        endm

dw_lshift_16    macro
        mov     DX,AX           ; shift DWord << 16
        xor     AX,AX           ; ...
        endm


dw_rshift_1     macro
        shr     DX,1            ; shift DWord >> 1
        rcr     AX,1            ; ...
        endm

dw_rshift_8     macro
        mov     AL,AH           ; shift DWord >> 8
        mov     AH,DL           ; ...
        mov     DL,DH           ; ...
        xor     DH,DH           ; ...
        endm

dw_rshift_16    macro
        mov     AX,DX           ; shift DWord >> 16
        xor     DX,DX           ; ...
        endm

;
; quad word   AX:BX:CX:DX
;

qw_lshift_1     macro
        _shl    DX,1            ; shift QWord << 1
        _rcl    CX,1            ; ...
        _rcl    BX,1            ; ...
        _rcl    AX,1            ; ...
        endm

qw_lshift_8     macro
        mov     AH,AL           ; shift QWord << 8
        mov     AL,BH           ; ...
        mov     BH,BL           ; ...
        mov     BL,CH           ; ...
        mov     CH,CL           ; ...
        mov     CL,DH           ; ...
        mov     DH,DL           ; ...
        xor     DL,DL           ; ...
        endm

qw_lshift_16    macro
        mov     AX,BX           ; shift QWord << 16
        mov     BX,CX           ; ...
        mov     CX,DX           ; ...
        xor     DX,DX           ; ...
        endm

qw_rshift_1     macro
        shr     AX,1            ; shift QWord >> 1
        rcr     BX,1            ; ...
        rcr     CX,1            ; ...
        rcr     DX,1            ; ...
        endm

qw_rshift_8     macro
        mov     DL,DH           ; shift QWord >> 8
        mov     DH,CL           ; ...
        mov     CL,CH           ; ...
        mov     CH,BL           ; ...
        mov     BL,BH           ; ...
        mov     BH,AL           ; ...
        mov     AL,AH           ; ...
        xor     AH,AH           ; ...
        endm

qw_rshift_16    macro
        mov     DX,CX           ; shift QWord >> 16
        mov     CX,BX           ; ...
        mov     BX,AX           ; ...
        xor     AX,AX           ; ...
        endm
