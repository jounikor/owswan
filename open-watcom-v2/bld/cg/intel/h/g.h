/****************************************************************************
*
*                            Open Watcom Project
*
*    Portions Copyright (c) 1983-2002 Sybase, Inc. All Rights Reserved.
*
*  ========================================================================
*
*    This file contains Original Code and/or Modifications of Original
*    Code as defined in and that are subject to the Sybase Open Watcom
*    Public License version 1.0 (the 'License'). You may not use this file
*    except in compliance with the License. BY USING THIS FILE YOU AGREE TO
*    ALL TERMS AND CONDITIONS OF THE LICENSE. A copy of the License is
*    provided with the Original Code and Modifications, and is also
*    available at www.sybase.com/developer/opensource.
*
*    The Original Code and all software distributed under the License are
*    distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
*    EXPRESS OR IMPLIED, AND SYBASE AND ALL CONTRIBUTORS HEREBY DISCLAIM
*    ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF
*    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR
*    NON-INFRINGEMENT. Please see the License for the specific language
*    governing rights and limitations under the License.
*
*  ========================================================================
*
* Description:  These are the symbols generated by the compiler which
*               it feeds into the code generator.
*               NB. If you add instructions to this list, then you *must*
*               also change i86opcod.c to match - these enums index those
*               tables.
*
****************************************************************************/


_G_( G_NO ),
_G_( G_RC ),
_G_( G_AC ),
_G_( G_MC ),
_G_( G_RR2 ),
_G_( G_RM2 ),
_G_( G_MR2 ),
_G_( G_WORDR1 ),
_G_( G_R1 ),
_G_( G_M1 ),
_G_( G_R2 ),
_G_( G_M2 ),
_G_( G_1SHIFT ),
_G_( G_R1SHIFT ),
_G_( G_NSHIFT ),
_G_( G_RNSHIFT ),
_G_( G_CLSHIFT ),
_G_( G_RCLSHIFT ),
_G_( G_RR1 ),
_G_( G_RM1 ),
_G_( G_MR1 ),
_G_( G_LEA ),
_G_( G_LDSES ),
_G_( G_MS1 ),
_G_( G_SM1 ),
_G_( G_RS ),
_G_( G_SR ),
_G_( G_MOVMC ),
_G_( G_MADDR ),
_G_( G_TEST ),
_G_( G_SEGR1 ),
_G_( G_MOVAM ),
_G_( G_MOVMA ),
_G_( G_MOVRC ),
_G_( G_RADDR ),
_G_( G_C1 ),
#define FIRST_8087_1      G_RRFBIN
_G_( G_RRFBIN ),
_G_( G_RNFBIN ),
_G_( G_RRFBINP ),
_G_( G_RNFBINP ),
_G_( G_RRFBIND ),
_G_( G_RNFBIND ),
_G_( G_MRFBIN ),
_G_( G_MNFBIN ),
_G_( G_MFLD ),
_G_( G_RFLD ),
_G_( G_SLACK_1 ),
_G_( G_MFST ),
_G_( G_MFSTRND ),
_G_( G_RFST ),
_G_( G_SLACK_2 ),
_G_( G_FCHS ),
_G_( G_FRNDINT ),
_G_( G_FLDZ ),
_G_( G_FLD1 ),
_G_( G_FINIT ),
_G_( G_FCOMPP ),
_G_( G_MCOMP ),
_G_( G_RCOMP ),
_G_( G_MCOM ),
_G_( G_RCOM ),
_G_( G_MFSTNP ),
_G_( G_RFSTNP ),
_G_( G_FTST ),
#define LAST_8087_1       G_FTST
_G_( G_REPOP ),
_G_( G_LOADADDR ),
_G_( G_4SHIFT ),
_G_( G_4RSHIFT ),
_G_( G_CXSHIFT ),
_G_( G_RCXSHIFT ),
_G_( G_4NEG ),
_G_( G_4RNEG ),
_G_( G_FNEG ),
_G_( G_RFNEG ),
_G_( G_ENTER ),
_G_( G_CALL ),
_G_( G_RCALL ),
_G_( G_ICALL ),
_G_( G_CCALL ),
_G_( G_RJMP ),
_G_( G_MJMP ),
_G_( G_CJMP ),
_G_( G_SIGNEX ),
_G_( G_186MUL ),
_G_( G_186RMUL ),
_G_( G_FWAIT ),
_G_( G_FCHOP ),
_G_( G_SEG_SEG ),
_G_( G_DEBUG ),
_G_( G_MOVSX ),
_G_( G_MOVZX ),
_G_( G_0FRR2 ),
_G_( G_0FRM2 ),
_G_( G_PUSHFS ),
_G_( G_POW2DIV ),
_G_( G_POW2DIV_286 ),
_G_( G_DIV2 ),
#define FIRST_8087_2      G_FMATH
_G_( G_FMATH ),
_G_( G_IFUNC ),
_G_( G_FSINCOS ),
_G_( G_FP_SLACK_7 ),
_G_( G_FXCH ),
#define LAST_8087_2       G_FXCH
_G_( G_SLACK_8 ),
_G_( G_SLACK_9 ),
