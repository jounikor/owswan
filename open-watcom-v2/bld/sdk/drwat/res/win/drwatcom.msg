pick( STR_LOG_BIG_ERASE,
    "Log file is now %ld bytes, erase it?",
    "Log file is now %ld bytes, erase it?" )
pick( STR_DIV_BY_ZERO,
    "Divide By Zero",
    "Divide By Zero" )
pick( STR_TRACE_TRAP,
    "Trace Trap/Debug Fault",
    "Trace Trap/Debug Fault" )
pick( STR_PARITY_ERROR,
    "Parity Error/NMI",
    "Parity Error/NMI" )
pick( STR_BREAKPOINT,
    "Breakpoint",
    "Breakpoint" )
pick( STR_INV_INSTRUC,
    "Invalid Instruction",
    "Invalid Instruction" )
pick( STR_STACK_FAULT,
    "Stack Fault",
    "Stack Fault" )
pick( STR_GP_FAULT,
    "General Protection Fault",
    "General Protection Fault" )
pick( STR_PAGE_FAULT,
    "Page Fault",
    "Page Fault" )
pick( STR_UNKNOWN_FAULT,
    "Unknown fault",
    "Unknown fault" )
pick( STR_STARTED,
    "%s started",
    "%s started" )
pick( STR_ERASE_LOG,
    "Erase Log File: %s",
    "Erase Log File: %s" )
pick( STR_ABOUT_NAME,
    "Dr. Watcom for Windows" STR_BITNESS,
    "Dr. Watcom for Windows" STR_BITNESS )
pick( STR_ABOUT_VERSION,
    banner1v( _DRWATCOM_VERSION_ ),
    banner1v( _DRWATCOM_VERSION_ ) )
pick( STR_ABOUT_TITLE,
    "About Dr. Watcom",
    "About Dr. Watcom" )
pick( STR_CANT_CLOSE_DURING_FAULT,
    "Cannot close while fault being handled",
    "Cannot close while fault being handled" )
pick( STR_STACK_TRACE,
    "Stack Trace: %s",
    "Stack Trace: %s" )
pick( STR_NO_STACK_FRAMES_FOUND,
    "No Stack Frames Found",
    "No Stack Frames Found" )
pick( STR_NO_MORE_STACK_FRAMES,
    "No more stack frames!",
    "No more stack frames!" )
pick( STR_LOG_OPEN_FAILED,
    "Log File Open Failed",
    "Log File Open Failed" )
pick( STR_DETECTED_FAULT_ON,
    "%s detected a fault on %s",
    "%s detected a fault on %s" )
pick( STR_LOG_TAKEN_ON,
    "%s log taken on %s",
    "%s log taken on %s" )
pick( STR_WIN_VER_IS,
    "Windows version is %d.%d\n",
    "Windows version is %d.%d\n" )
pick( STR_WIN_FLAGS_ARE,
    "Windows Flags are:\n",
    "Windows Flags are:\n" )
pick( STR_ENHANCED_MODE,
    "    - Enhanced Mode\n",
    "    - Enhanced Mode\n" )
pick( STR_STANDARD_MODE,
    "    - Standard Mode\n",
    "    - Standard Mode\n" )
pick( STR_PROCESSOR_286,
    "    - Processor type is 80286",
    "    - Processor type is 80286" )
pick( STR_PROCESSOR_386,
    "    - Processor type is 80386",
    "    - Processor type is 80386" )
pick( STR_PROCESSOR_486,
    "    - Processor type is 80486",
    "    - Processor type is 80486" )
pick( STR_MATH_COPROC_PRESENT,
    "    - Math coprocessor present\n",
    "    - Math coprocessor present\n" )
pick( STR_N_TASKS_EXECUTING,
    "%d tasks are currently executing\n",
    "%d tasks are currently executing\n" )
pick( STR_OFFENDING_TASK_LINE,
    "----------------------------------\n",
    "----------------------------------\n" )
pick( STR_OFFENDING_TASK_INFO,
    "--- Offending Task Information ---\n",
    "--- Offending Task Information ---\n" )
pick( STR_FAULT_OCCURRED_IN,
    "Fault %d occurred in module %s at %04x:%04x\n",
    "Fault %d occurred in module %s at %04x:%04x\n" )
pick( STR_FAULT_TYPE_WAS,
    "Fault type was %s\n",
    "Fault type was %s\n" )
pick( STR_EXECUTABLE_IS,
    "Executable is %s\n",
    "Executable is %s\n" )
pick( STR_REGISTER_CONTENTS,
    "\nRegister contents:\n",
    "\nRegister contents:\n" )
pick( STR_SEGMENT_REGISTERS,
    "    Segment Registers:\n",
    "    Segment Registers:\n" )
pick( STR_SELECTOR_HEADINGS,
    "       Value       Base     Limit    Gran. Type DPL Access Big\n",
    "       Value       Base     Limit    Gran. Type DPL Access Big\n" )
pick( STR_SOURCE_INFO,
    "\nSource Information:\n",
    "\nSource Information:\n" )
pick( STR_FILE_IS,
    "   File is %s\n",
    "   File is %s\n" )
pick( STR_FAULT_ON_LINE,
    "   Fault took place on line %u\n",
    "   Fault took place on line %u\n" )
pick( STR_DISASSEMBLY,
    "\nDisassembly:\n",
    "\nDisassembly:\n" )
pick( STR_QUEST_MARKS,
    "?? ",
    "?? " )
pick( STR_STACK_TRACE_ULINE,
    "-------------------\n",
    "-------------------\n" )
pick( STR_STACK_TRACE_HEADING,
    "--- Stack Trace ---\n",
    "--- Stack Trace ---\n" )
pick( STR_STACK_FRAME,
    "Stack Frame %d: in module %s (handle %04x)\n",
    "Stack Frame %d: in module %s (handle %04x)\n" )
pick( STR_CS_MAPS_TO_SEG_NUM,
    "CS maps to segment number %d\n",
    "CS maps to segment number %d\n" )
pick( STR_CSIP_REFERS_TO_LINE,
    "   CS:IP refers to line %u\n",
    "   CS:IP refers to line %u\n" )
pick( STR_SYS_TASKS_ULINE,
    "--------------------",
    "--------------------" )
pick( STR_SYSTEM_TASKS,
    "\n--- System Tasks ---\n",
    "\n--- System Tasks ---\n" )
pick( STR_TASK,
    "\nTask %s\n",
    "\nTask %s\n" )
pick( STR_ID_PARENT_ID,
    "    ID=%04x, Parent ID=%04x\n",
    "    ID=%04x, Parent ID=%04x\n" )
pick( STR_MOD_HDL_USAGE_CNT,
    "    Module Handle=%04x, Usage Count=%04d\n",
    "    Module Handle=%04x, Usage Count=%04d\n" )
pick( STR_SSSP_STACKTOP_BOTTOM,
    "    SS:SP=%04x:%04x, StackTop=%04x, StackBottom=%04x\n",
    "    SS:SP=%04x:%04x, StackTop=%04x, StackBottom=%04x\n" )
pick( STR_EXECUTABLE_EQ,
    "    Executable=%s\n",
    "    Executable=%s\n" )
pick( STR_SIZE_TIME,
    "        size=%ld, time=%s",
    "        size=%ld, time=%s" )
pick( STR_SEGMENTS_TITLE,
    "    Segments: Num   Sel.    Base     Limit    Gran. Type DPL Access Big\n",
    "    Segments: Num   Sel.    Base     Limit    Gran. Type DPL Access Big\n" )
pick( STR_SYS_MODULES_ULINE,
    "----------------------",
    "----------------------" )
pick( STR_SYSTEM_MODULES,
    "\n--- System Modules ---\n",
    "\n--- System Modules ---\n" )
pick( STR_MODULE,
    "\nModule %s\n",
    "\nModule %s\n" )
pick( STR_MEM_MAN_ULINE,
    "---------------------------\n",
    "---------------------------\n" )
pick( STR_MEM_MAN_INFO,
    "--- Memory Manager Info ---\n",
    "--- Memory Manager Info ---\n" )
pick( STR_TOT_LIN_SPACE,
    "Total Linear Space = %ld bytes (%ldK)\n",
    "Total Linear Space = %ld bytes (%ldK)\n" )
pick( STR_TOTAL_PAGES,
    "Total Pages        = %ld\n",
    "Total Pages        = %ld\n" )
pick( STR_SWAP_FILE_PAGES,
    "Swap File Pages    = %ld\n",
    "Swap File Pages    = %ld\n" )
pick( STR_PAGE_SIZE,
    "Page size          = %d bytes (%dK)\n",
    "Page size          = %d bytes (%dK)\n" )
pick( STR_FREE_LIN_SPACE,
    "\nFree Linear Space  = %ld bytes (%ldK)\n",
    "\nFree Linear Space  = %ld bytes (%ldK)\n" )
pick( STR_LARGEST_FREE_BLOCK,
    "Largest Free Block = %ld bytes (%ldK)\n",
    "Largest Free Block = %ld bytes (%ldK)\n" )
pick( STR_FREE_PAGES,
    "Free Pages         = %ld\n",
    "Free Pages         = %ld\n" )
pick( STR_MAX_PAGES_AVAILABLE,
    "\nMaximum Pages Available = %ld\n",
    "\nMaximum Pages Available = %ld\n" )
pick( STR_MAX_PAGES_LOCKABLE,
    "Maximum Pages Lockable  = %ld\n",
    "Maximum Pages Lockable  = %ld\n" )
pick( STR_TOT_UNLOCKED_PAGES,
    "Total Unlocked Pages    = %ld\n",
    "Total Unlocked Pages    = %ld\n" )
pick( STR_GDI_HEAP_ULINE,
    "---------------------\n",
    "---------------------\n" )
pick( STR_GDI_HEAP_INFO,
    "--- GDI Heap Info ---\n",
    "--- GDI Heap Info ---\n" )
pick( STR_HEAP_SEGMENT,
    "Heap Segment  = %04x\n",
    "Heap Segment  = %04x\n" )
pick( STR_HEAP_SIZE,
    "Heap Size     = %lu\n",
    "Heap Size     = %lu\n" )
pick( STR_PERCENT_FREE,
    "Percent Free  = %d%%\n",
    "Percent Free  = %d%%\n" )
pick( STR_USER_HEAP_ULINE,
    "----------------------\n",
    "----------------------\n" )
pick( STR_USER_HEAP_INFO,
    "--- User Heap Info ---\n",
    "--- User Heap Info ---\n" )
pick( STR_FAULT_X_ENCOUNTERED,
    "%s: Fault %d Encountered",
    "%s: Fault %d Encountered" )
pick( STR_LINE,
    "line %u",
    "line %u" )
pick( STR_N_A,
    "N/A",
    "N/A" )
pick( STR_FAULT_IN_TASK,
    "FAULT:      %s in task %04x (%s)",
    "FAULT:      %s in task %04x (%s)" )
pick( STR_ADDRESS_EQ_32,
    "            Address = %04x:%08lx",
    "            Address = %04x:%08lx" )
pick( STR_ADDRESS_EQ_16,
    "            Address = %04x:%04x",
    "            Address = %04x:%04x" )
pick( STR_TASK_LB_FMT_STR,
    "%-8s cs:ip=%04x:%04x id=%04x",
    "%-8s cs:ip=%04x:%04x id=%04x" )
pick( STR_TASK_START,
    "TASK START: task id=%04x, Initial CS:IP=%Fp",
    "TASK START: task id=%04x, Initial CS:IP=%Fp" )
pick( STR_TASK_START_2,
    "            Module=%s, Path=%s",
    "            Module=%s, Path=%s" )
pick( STR_TASK_EXIT,
    "TASK EXIT:  Task id=%04x, rc=%04x",
    "TASK EXIT:  Task id=%04x, rc=%04x" )
pick( STR_DLL_LOAD,
    "DLL LOAD:   module id=%04x, initial CS:IP=%04x:%04x",
    "DLL LOAD:   module id=%04x, initial CS:IP=%04x:%04x" )
pick( STR_DLL_LOAD_2,
    "            module=%Fs, path=%Fs",
    "            module=%Fs, path=%Fs" )
pick( STR_MODULE_DEL,
    "MODULE DEL: id=%04x, module=%Fs, path=%Fs",
    "MODULE DEL: id=%04x, module=%Fs, path=%Fs" )
pick( STR_RIP,
    "RIP:        task id=%04x (%s), exitcode=%04x, CS:IP=%04x:%04x",
    "RIP:        task id=%04x (%s), exitcode=%04x, CS:IP=%04x:%04x" )
pick( STR_DEBUG_OUT,
    "DEBUG OUT:  \"%s\"",
    "DEBUG OUT:  \"%s\"" )
pick( STR_ONLY_ONE_INST_ALLOWED,
    "Only one instance allowed",
    "Only one instance allowed" )
pick( STR_DEATH_NO_MSG,
    "",
    "" )
pick( STR_CLEAR_ALERT,
    "Clear Alert",
    "Clear Alert" )
pick( STR_LOG_CUR_STATE,
    "Log Current State",
    "Log Current State" )
pick( STR_LOG_OPTIONS,
    "Log Options...",
    "Log Options..." )
pick( STR_TASK_CONTROL,
    "Task Control...",
    "Task Control..." )
pick( STR_CANT_HOOK_INTER,
    "Failed to hook interrupts",
    "Failed to hook interrupts" )
pick( STR_CANT_HOOK_NOTIF,
    "Failed to get notification hook",
    "Failed to get notification hook" )
pick( STR_WILL_USE_WDEBUG_386,
    "Will Use WDEBUG.386",
    "Will Use WDEBUG.386" )
pick( STR_CANT_INIT_DIP,
    "Unable to initialize the debugging information processor",
    "Unable to initialize the debugging information processor" )
pick( STR_DIP_NOT_FOUND,
    "not loaded - File not found.",
    "not loaded - File not found." )
pick( STR_WRONG_DIP_VERSION,
    "not loaded - Wrong processor version.",
    "not loaded - Wrong processor version." )
pick( STR_BAD_DIP,
    "not loaded - Invalid processor found.",
    "not loaded - Invalid processor found." )
pick( STR_TOO_MANY_DIPS,
    "not loaded - too many processors loaded.",
    "not loaded - too many processors loaded." )
pick( STR_DIP_ERR_OTHER,
    "not loaded - Reason unknown",
    "not loaded - Reason unknown" )
pick( STR_DIP_LOADED,
    "loaded",
    "loaded" )
pick( STR_NO_DIPS_LOADED,
    "No debugging information processors were found.",
    "No debugging information processors were found." )
pick( STR_APP_NAME,
    "Dr. Watcom",
    "Dr. Watcom" )
pick( STR_ALL_FILE_FILTER,
    "All Files",
    "All Files" )
pick( STR_LOG_FILENAME,
    "Pick log filename",
    "Pick log filename" )
pick( STR_SRC_INFO_NA,
    "Source Information: Not Available",
    "Source Information: Not Available" )
pick( STR_SRC_INFO_FMT,
    "Line %d of %s",
    "Line %d of %s" )
pick( STR_USER_NOTES_ULINE,
    "\n------------------\n",
    "\n------------------\n" )
pick( STR_USER_NOTES,
    "--- User notes ---",
    "--- User notes ---" )
pick( STR_TERMINATE_TASK,
    "Terminate task",
    "Terminate task" )
