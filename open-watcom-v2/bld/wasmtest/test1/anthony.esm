.387
.386p
		PUBLIC	__CHK
		PUBLIC	__GRO
		PUBLIC	__STK
		PUBLIC	__STqOVERFLOW_
		EXTRN	__STACKLOW:BYTE
		EXTRN	__exit_with_msg_:BYTE
DGROUP		GROUP	_DATA,XI
_TEXT		SEGMENT	DWORD PUBLIC USE32 'CODE'
		ASSUME CS:_TEXT, DS:DGROUP, SS:DGROUP
L$1:
    mov         word ptr DGROUP:L$3,ss
    ret         
__CHK:
    xchg        dword ptr 4[esp],eax
    push        eax
    call        near ptr __STK
    call        near ptr __STK
    pop         eax
    shr         eax,2
    push        ecx
    mov         ecx,eax
    push        edi
    mov         edi,esp
    sub         edi,ecx
    mov         eax,55555555H
    stosd       
    pop         edi
    pop         ecx
    mov         eax,dword ptr 4[esp]
    ret         4
__GRO:
    ret         4
__STK:
    cmp         eax,esp
    jae         L$2
    sub         eax,esp
    neg         eax
    cmp         eax,dword ptr DGROUP:__STACKLOW
    jbe         L$2
    ret         
L$2:
    mov         ax,ss
    cmp         ax,word ptr DGROUP:L$3
    je          __STqOVERFLOW_
    ret         
__STqOVERFLOW_:
    mov         eax,offset DGROUP:L$4
    mov         edx,1
    jmp         near ptr __exit_with_msg_
_TEXT		ENDS
_DATA		SEGMENT	DWORD PUBLIC USE32 'DATA'
L$3:
    DB	0, 0
L$4:
    DB	53H, 74H, 61H, 63H, 6bH, 20H, 4fH, 76H
    DB	65H, 72H, 66H, 6cH, 6fH, 77H, 21H, 0dH
    DB	0aH, 0

_DATA		ENDS
XI		SEGMENT	WORD PUBLIC USE32 'DATA'
    DB	0, 20H
    DD	offset L$1

XI		ENDS
		END
