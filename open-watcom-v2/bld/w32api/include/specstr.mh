/*
 *  specstr.h / specstrings.h   Annotation macros
 *
:include crwatcnt.sp
 */

#ifndef SPECSTRINGS_H
#define SPECSTRINGS_H

:include readonly.sp

#include <sal.h>

:include cpluspro.sp

#define __inexpressible_readableTo( x )
#define __inexpressible_writableTo( x )
#define __inner_bound
#define __inner_range( p1, p2 )
#define __inner_assume_bound_dec
#define __inner_assume_bound( x )
#define __inner_allocator
#define __xcount( x )
#define __in_xcount( x )
#define __out_xcount( x )
#define __out_xcount_part( p1, p2 )
#define __out_xcount_full( x )
#define __inout_xcount( x )
#define __inout_xcount_part( p1, p2 )
#define __inout_xcount_full( x )
#define __xcount_opt( x )
#define __in_xcount_opt( x )
#define __out_xcount_opt( x )
#define __out_xcount_part_opt( p1, p2 )
#define __out_xcount_full_opt( x )
#define __inout_xcount_opt( x )
#define __inout_xcount_part_opt( p1, p2 )
#define __inout_xcount_full_opt( x )
#define __deref_xcount( x )
#define __deref_in
#define __deref_in_ecount( x )
#define __deref_in_bcount( x )
#define __deref_in_xcount( x )
#define __deref_out_xcount( x )
#define __deref_out_xcount_part( p1, p2 )
#define __deref_out_xcount_full( x )
#define __inout_xcount_opt( x )
#define __inout_xcount_part_opt( p1, p2 )
#define __inout_xcount_full_opt( x )
#define __deref_xcount( x )
#define __deref_inout_xcount( x )
#define __deref_inout_xcount_part( p1, p2 )
#define __deref_inout_xcount_full( x )
#define __deref_xcount_opt( x )
#define __deref_in_opt
#define __deref_in_opt_out
#define __deref_in_ecount_opt( x )
#define __deref_in_bcount_opt( x )
#define __deref_in_xcount_opt( x )
#define __deref_out_xcount_opt( x )
#define __deref_out_xcount_part_opt( p1, p2 )
#define __deref_out_xcount_full_opt( x )
#define __deref_inout_xcount_opt( x )
#define __deref_inout_xcount_part_opt( p1, p2 )
#define __deref_inout_xcount_full_opt( x )
#define __deref_opt_xcount( x )
#define __deref_opt_in
#define __deref_opt_in_ecount( x )
#define __deref_opt_in_bcount( x )
#define __deref_opt_in_xcount( x )
#define __deref_opt_out_xcount( x )
#define __deref_opt_out_xcount_part( p1, p2 )
#define __deref_opt_out_xcount_full( x )
#define __deref_opt_inout_xcount( x )
#define __deref_opt_inout_xcount_part( p1, p2 )
#define __deref_opt_inout_xcount_full( x )
#define __deref_opt_xcount_opt( x )
#define __deref_opt_in_opt
#define __deref_opt_in_ecount_opt( x )
#define __deref_opt_in_bcount_opt( x )
#define __deref_opt_in_xcount_opt( x )
#define __deref_opt_out_xcount_opt( x )
#define __deref_opt_out_xcount_part_opt( p1, p2 )
#define __deref_opt_out_xcount_full_opt( x )
#define __deref_opt_inout_xcount_opt( x )
#define __deref_opt_inout_xcount_part_opt( p1, p2 )
#define __deref_opt_inout_xcount_full_opt( x )
#define __file_parser( x )
#define __file_parser_class( x )
#define __file_parser_library( x )
#define __source_code_content( x )
#define __class_code_content( x )
#define __analysis_assert( x )
#define __analysis_hint( x )
#define __analysis_noreturn
#define __inner_data_source( x )
#define __inner_this_data_source( x )
#define __inner_out_validated( x )
#define __inner_this_out_validated( x )
#define __inner_assume_validated_dec
#define __inner_assume_validated( x )
#define __inner_transfer( x )
#define __inner_encoded
#define __inner_adt_prop( p1, p2 )
#define __inner_adt_add_prop( p1, p2 )
#define __inner_adt_remove_prop( p1, p2 )
#define __inner_adt_transfer_prop( x )
#define __inner_adt_type_props( x )
#define __inner_volatile
#define __inner_nonvolatile
#define __inner_possibly_notnullterminated
#define __inner_analysis_assume_nullterminated_dec
#define __inner_analysis_assume_nullterminated( x )
#define __field_ecount( x )
#define __field_bcount( x )
#define __field_xcount( x )
#define __field_ecount_opt( x )
#define __field_bcount_opt( x )
#define __field_xcount_opt( x )
#define __field_ecount_part( p1, p2 )
#define __field_bcount_part( p1, p2 )
#define __field_xcount_part( p1, p2 )
#define __field_ecount_part_opt( p1, p2 )
#define __field_bcount_part_opt( p1, p2 )
#define __field_xcount_part_opt( p1, p2 )
#define __field_ecount_full( x )
#define __field_bcount_full( x )
#define __field_xcount_full( x )
#define __field_ecount_full_opt( x )
#define __field_bcount_full_opt( x )
#define __field_xcount_full_opt( x )
#define __field_nullterminated
#define __struct_bcount( x )
#define __struct_xcount( x )
#define __out_awcount( p1, p2 )
#define __in_awcount( p1, p2 )
#define __post_invalid
#define __allocator
#define __deallocate( x )
#define __deallocate_opt( x )
#define __bound
#define __range( p1, p2 )
#define __in_bound
#define __out_bound
#define __deref_out_bound
#define __in_range( p1, p2 )
#define __out_range( p1, p2 )
#define __deref_in_range( p1, p2 )
#define __deref_out_range( p1, p2 )
#define __deref_inout_range( p1, p2 )
#define __field_range( p1, p2 )
#define __field_data_source( x )
#define __range_max( p1, p2 )
#define __range_min( p1, p2 )
#define __in_data_source( x )
#define __out_data_source( x )
#define __out_validated( x )
#define __this_out_data_source( x )
#define __this_out_validated( x )
#define __transfer( x )
#define __rpc_entry
#define __kernel_entry
#define __gdi_entry
#define __encoded_pointer
#define __encoded_array
#define __field_encoded_pointer
#define __field_encoded_array
#define __type_has_adt_prop( p1, p2 )
#define __out_has_adt_prop( p1, p2 )
#define __out_not_has_adt_prop( p1, p2 )
#define __out_transfer_adt_prop( x )
#define __out_has_type_adt_props( x )
#define __possibly_notnullterminated
#define __volatile
#define __nonvolatile
#define __deref_volatile
#define __deref_nonvolatile
#define __analysis_assume_nullterminated( x )
#define __assume_validated( x )
#define __assume_bound( x )

:include cplusepi.sp

#endif /* SPECSTRINGS_H */
