# Generate version.res and/or exever.res

# Default names and values

!ifndef verrc_dll_skel
verrc_dll_skel = ../version.rc
!endif

!ifndef verrc_dll_int
verrc_dll_int = version.grc
!endif

!ifndef verrc_dll_out
verrc_dll_out = version.res
!endif

!ifndef verrc_dll
verrc_dll = $(proj_name)
!endif

!ifndef verrc_exe_skel
verrc_exe_skel = ../exever.rc
!endif

!ifndef verrc_exe_int
verrc_exe_int = exever.grc
!endif

!ifndef verrc_exe_out
verrc_exe_out = exever.res
!endif

!ifndef verrc_exe
verrc_exe = $(proj_name)
!endif

!ifndef verrc386_exe_skel
verrc386_exe_skel = ../ver386.rc
!endif

!ifndef verrc386_exe_int
verrc386_exe_int = ver386.grc
!endif

!ifndef verrc386_exe_out
verrc386_exe_out = ver386.res
!endif

!ifndef verrc386_exe
verrc386_exe = $(proj_name)386
!endif

!ifndef verrcx64_exe_skel
verrcx64_exe_skel = ../verx64.rc
!endif

!ifndef verrcx64_exe_int
verrcx64_exe_int = verx64.grc
!endif

!ifndef verrcx64_exe_out
verrcx64_exe_out = verx64.res
!endif

!ifndef verrcx64_exe
verrcx64_exe = $(proj_name)x64
!endif

!ifndef verrcaxp_exe_skel
verrcaxp_exe_skel = ../veraxp.rc
!endif

!ifndef verrcaxp_exe_int
verrcaxp_exe_int = veraxp.grc
!endif

!ifndef verrcaxp_exe_out
verrcaxp_exe_out = veraxp.res
!endif

!ifndef verrcaxp_exe
verrcaxp_exe = $(proj_name)axp
!endif

!ifndef verrcppc_exe_skel
verrcppc_exe_skel = ../verppc.rc
!endif

!ifndef verrcppc_exe_int
verrcppc_exe_int = verppc.grc
!endif

!ifndef verrcppc_exe_out
verrcppc_exe_out = verppc.res
!endif

!ifndef verrcppc_exe
verrcppc_exe = $(proj_name)ppc
!endif

!ifndef patch_level
patch_level = 0
!endif

verrc_inc_path = $(extra_verrc_inc_path) $(inc_dirs_sys) -I"$(watcom_dir)/h"

$(verrc_exe_out): $(verrc_exe_skel) .EXPLICIT
    $(noecho)genverrc $]@ $(verrc_exe_int) $$ $(verrc_exe) $(patch_level)
    @%make echo_rc
    $(rc) $(rc_flags) $(verrc_inc_path) $(verrc_exe_int) -fo=$@

$(verrc386_exe_out): $(verrc386_exe_skel) .EXPLICIT
    $(noecho)genverrc $]@ $(verrc386_exe_int) $$ $(verrc386_exe) $(patch_level)
    @%make echo_rc
    $(rc) $(rc_flags) $(verrc_inc_path) $(verrc386_exe_int) -fo=$@

$(verrcx64_exe_out): $(verrcx64_exe_skel) .EXPLICIT
    $(noecho)genverrc $]@ $(verrcx64_exe_int) $$ $(verrcx64_exe) $(patch_level)
    @%make echo_rc
    $(rc) $(rc_flags) $(verrc_inc_path) $(verrcx64_exe_int) -fo=$@

$(verrcaxp_exe_out): $(verrcaxp_exe_skel) .EXPLICIT
    $(noecho)genverrc $]@ $(verrcaxp_exe_int) $$ $(verrcaxp_exe) $(patch_level)
    @%make echo_rc
    $(rc) $(rc_flags) $(verrc_inc_path) $(verrcaxp_exe_int) -fo=$@

$(verrcppc_exe_out): $(verrcppc_exe_skel) .EXPLICIT
    $(noecho)genverrc $]@ $(verrcppc_exe_int) $$ $(verrcppc_exe) $(patch_level)
    @%make echo_rc
    $(rc) $(rc_flags) $(verrc_inc_path) $(verrcppc_exe_int) -fo=$@

$(verrc_dll_out): $(verrc_dll_skel) .EXPLICIT
    $(noecho)genverrc $]@ $(verrc_dll_int) $$ $(verrc_dll) $(patch_level)
    @%make echo_rc
    $(rc) $(rc_flags) $(verrc_inc_path) $(verrc_dll_int) -fo=$@

#
# Macros to bind version resource (for PE images)
#
bind_res_version_exe: .PROCEDURE .EXPLICIT
!ifdef version_res_exe_$(host_os)_$(host_cpu)
!ifeq verbose 0
    @echo bind res $@
!endif
    $(rcbnd) $(version_res_exe_$(host_os)_$(host_cpu)) $@
!endif

bind_res_add_version_exe: .PROCEDURE .EXPLICIT
!ifdef version_res_exe_$(host_os)_$(host_cpu)
!ifeq verbose 0
    @echo bind res add $@
!endif
    $(rcbnd) $^&.res $@ -fr=$(version_res_exe_$(host_os)_$(host_cpu))
!else
    @%make bind_res
!endif

bind_res_version_dll: .PROCEDURE .EXPLICIT
!ifdef version_res_dll_$(host_os)_$(host_cpu)
!ifeq verbose 0
    @echo bind res $@
!endif
    $(rcbnd) $(version_res_dll_$(host_os)_$(host_cpu)) $@
!endif

bind_res_add_version_dll: .PROCEDURE .EXPLICIT
!ifdef version_res_dll_$(host_os)_$(host_cpu)
!ifeq verbose 0
    @echo bind res add $@
!endif
    $(rcbnd) $^&.res $@ -fr=$(version_res_dll_$(host_os)_$(host_cpu))
!else
    @%make bind_res
!endif

bind_res_version386_exe: .PROCEDURE .EXPLICIT
!ifdef version386_res_exe_$(host_os)_$(host_cpu)
!ifeq verbose 0
    @echo bind res $@
!endif
    $(rcbnd) $(version386_res_exe_$(host_os)_$(host_cpu)) $@
!endif

bind_res_versionx64_exe: .PROCEDURE .EXPLICIT
!ifdef versionx64_res_exe_$(host_os)_$(host_cpu)
!ifeq verbose 0
    @echo bind res $@
!endif
    $(rcbnd) $(versionx64_res_exe_$(host_os)_$(host_cpu)) $@
!endif

bind_res_versionaxp_exe: .PROCEDURE .EXPLICIT
!ifdef versionaxp_res_exe_$(host_os)_$(host_cpu)
!ifeq verbose 0
    @echo bind res $@
!endif
    $(rcbnd) $(versionaxp_res_exe_$(host_os)_$(host_cpu)) $@
!endif

bind_res_versionppc_exe: .PROCEDURE .EXPLICIT
!ifdef versionppc_res_exe_$(host_os)_$(host_cpu)
!ifeq verbose 0
    @echo bind res $@
!endif
    $(rcbnd) $(versionppc_res_exe_$(host_os)_$(host_cpu)) $@
!endif
